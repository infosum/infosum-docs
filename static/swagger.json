{
  "swagger": "2.0",
  "info": {
    "title": "InfoSum Σ API",
    "description": "This page contains the documentation for the InfoSum Σ API. The methods allow you to try making requests and inspect the input and output formats.",
    "termsOfService": "https://www.infosum.com/legals/website-terms",
    "version": "2.0",
    "contact": {
      "name": "InfoSum Support",
      "email": "support@infosum.com"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": "application/json",
  "produces": "application/json",
  "externalDocs": {
    "description": "Official documentation",
    "url": "https://docs.infosum.com/"
  },
  "servers": [
    {
      "url": "https://api.infosum.com"
    }
  ],
  "paths": {
    "/api/v2/cloud_vaults": {
      "get": {
        "summary": "List Cloud Vaults.",
        "description": "List available Cloud Vaults.",
        "operationId": "CloudVaultsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "cloud_vaults": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Output only. ID is the unique identifier of the Cloud Vault.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Name is the display name given to this Cloud Vault."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description is an optional description given to this Cloud Vault."
                      },
                      "region": {
                        "description": "Output only. Region identifies the region that this Cloud Vault is located\nin.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "UNKNOWN",
                          "AWS_EU_WEST_2",
                          "AWS_US_EAST_1",
                          "IBM_EU_CENTRAL_1",
                          "AWS_EU_CENTRAL_1",
                          "AWS_AP_SOUTHEAST_2"
                        ],
                        "default": "UNKNOWN"
                      },
                      "created_by": {
                        "type": "string",
                        "description": "Output only. CreatedBy is the id of the user that created this Cloud Vault.",
                        "readOnly": true
                      },
                      "owner_id": {
                        "type": "string",
                        "description": "Output only. OwnerId is the id of the owner of this Cloud Vault.",
                        "readOnly": true
                      },
                      "created_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Output only. CreatedDateTime is the date and time that this Cloud Vault was\ncreated.",
                        "readOnly": true
                      },
                      "updated_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Output only. UpdatedDateTime is the date and time that thie Cloud Vault was\nupdated",
                        "readOnly": true
                      }
                    },
                    "description": "CloudVault is the details about a specific Cloud Vault."
                  }
                },
                "pagination": {
                  "description": "Pagination is the information on how the results were paginated.",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Results is the count of the returned results."
                    },
                    "total_results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "TotalResults is the total number of results available."
                    },
                    "next_page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "NextPage is the next page to view."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.page",
            "description": "Page is the page to view.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.per_page",
            "description": "PerPage is the number of items per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order_by",
            "description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CloudVaults"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "post": {
        "summary": "Create a new Cloud Vault.",
        "description": "Create a Cloud Vault to hold data and connect to a bunker.",
        "operationId": "CloudVaultsCreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "cloud_vault": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Output only. ID is the unique identifier of the Cloud Vault.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name given to this Cloud Vault."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional description given to this Cloud Vault."
                    },
                    "region": {
                      "description": "Output only. Region identifies the region that this Cloud Vault is located\nin.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "UNKNOWN",
                        "AWS_EU_WEST_2",
                        "AWS_US_EAST_1",
                        "IBM_EU_CENTRAL_1",
                        "AWS_EU_CENTRAL_1",
                        "AWS_AP_SOUTHEAST_2"
                      ],
                      "default": "UNKNOWN"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "Output only. CreatedBy is the id of the user that created this Cloud Vault.",
                      "readOnly": true
                    },
                    "owner_id": {
                      "type": "string",
                      "description": "Output only. OwnerId is the id of the owner of this Cloud Vault.",
                      "readOnly": true
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedDateTime is the date and time that this Cloud Vault was\ncreated.",
                      "readOnly": true
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Output only. UpdatedDateTime is the date and time that thie Cloud Vault was\nupdated",
                      "readOnly": true
                    }
                  },
                  "description": "CloudVault is the details about a specific Cloud Vault."
                }
              }
            }
          },
          "400": {
            "description": "Returned when the Cloud Vault was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "409": {
            "description": "Returned when a Cloud Vault with the same name already exists.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name is the display name given to this Cloud Vault.",
                  "required": [
                    "name"
                  ]
                },
                "description": {
                  "type": "string",
                  "description": "Description is an optional description given to this Cloud Vault."
                },
                "region": {
                  "title": "Region identifies the region that this Cloud Vault is located in.\nExpected format: cloudprovider + region e.g. aws-eu-west-2",
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "AWS_EU_WEST_2",
                    "AWS_US_EAST_1",
                    "IBM_EU_CENTRAL_1",
                    "AWS_EU_CENTRAL_1",
                    "AWS_AP_SOUTHEAST_2"
                  ],
                  "default": "UNKNOWN",
                  "description": "Region enumerates the supported cloud providers and locations.\n\n - UNKNOWN: UNKNOWN means the region has not been defined.\n - AWS_EU_WEST_2: AWS_EU_WEST_2 means AWS Europe (London).\n - AWS_US_EAST_1: AWS_US_EAST_1 means AWS US East (N. Virginia).\n - IBM_EU_CENTRAL_1: IBM_EU_CENTRAL_1 means IBM MZR EU Central (Frankfurt).\n - AWS_EU_CENTRAL_1: AWS_EU_CENTRAL_1 means AWS Europe (Frankfurt).\n - AWS_AP_SOUTHEAST_2: AWS_AP_SOUTHEAST_2 means AWS Asia Pacific (Sydney)"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "tags": [
          "CloudVaults"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/cloud_vaults/{cloud_vault.id}": {
      "patch": {
        "summary": "Update a Cloud Vault",
        "description": "Updates the provided fields in a specific Cloud Vault.",
        "operationId": "CloudVaultsUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "cloud_vault": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Output only. ID is the unique identifier of the Cloud Vault.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name given to this Cloud Vault."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional description given to this Cloud Vault."
                    },
                    "region": {
                      "description": "Output only. Region identifies the region that this Cloud Vault is located\nin.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "UNKNOWN",
                        "AWS_EU_WEST_2",
                        "AWS_US_EAST_1",
                        "IBM_EU_CENTRAL_1",
                        "AWS_EU_CENTRAL_1",
                        "AWS_AP_SOUTHEAST_2"
                      ],
                      "default": "UNKNOWN"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "Output only. CreatedBy is the id of the user that created this Cloud Vault.",
                      "readOnly": true
                    },
                    "owner_id": {
                      "type": "string",
                      "description": "Output only. OwnerId is the id of the owner of this Cloud Vault.",
                      "readOnly": true
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedDateTime is the date and time that this Cloud Vault was\ncreated.",
                      "readOnly": true
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Output only. UpdatedDateTime is the date and time that thie Cloud Vault was\nupdated",
                      "readOnly": true
                    }
                  },
                  "description": "CloudVault is the details about a specific Cloud Vault."
                }
              }
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Cloud Vault could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "cloud_vault.id",
            "description": "Output only. ID is the unique identifier of the Cloud Vault.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloud_vault",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name is the display name given to this Cloud Vault."
                },
                "description": {
                  "type": "string",
                  "description": "Description is an optional description given to this Cloud Vault."
                }
              },
              "description": "UpdateCloudVault is used to update a Cloud Vault. Users can only update the\nname, description and auth fields."
            }
          },
          {
            "name": "update_mask",
            "description": "UpdateMask is a field mask, allowing partial resource update.\nThe update mask applies to the Allocation resource. For the `FieldMask`\ndefinition, see\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CloudVaults"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/cloud_vaults/{cloud_vault_id}/associate": {
      "post": {
        "summary": "Associate a Cloud Vault with a bunker",
        "description": "Associate a Cloud Vault with a bunker, a Cloud Vault can be associated with with multiple bunkers",
        "operationId": "CloudVaultsAssociate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "cloud_vault_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "bunker_id": {
                  "type": "string"
                }
              },
              "description": "AssociateRequest used to associate a Cloud Vault with the supplied bunker."
            }
          }
        ],
        "tags": [
          "CloudVaults"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/cloud_vaults/{cloud_vault_id}/dissociate": {
      "post": {
        "summary": "Dissociate a Cloud Vault from a bunker",
        "description": "Dissociate a Cloud Vault from a bunker",
        "operationId": "CloudVaultsDissociate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "cloud_vault_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "bunker_id": {
                  "type": "string"
                }
              },
              "description": "DissociateRequest used to dissociate a Cloud Vault from the supplied bunker."
            }
          }
        ],
        "tags": [
          "CloudVaults"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/cloud_vaults/{id}": {
      "get": {
        "summary": "Get a Cloud Vault.",
        "description": "Get the details of a specific Cloud Vault.",
        "operationId": "CloudVaultsGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "cloud_vault": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Output only. ID is the unique identifier of the Cloud Vault.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name given to this Cloud Vault."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional description given to this Cloud Vault."
                    },
                    "region": {
                      "description": "Output only. Region identifies the region that this Cloud Vault is located\nin.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "UNKNOWN",
                        "AWS_EU_WEST_2",
                        "AWS_US_EAST_1",
                        "IBM_EU_CENTRAL_1",
                        "AWS_EU_CENTRAL_1",
                        "AWS_AP_SOUTHEAST_2"
                      ],
                      "default": "UNKNOWN"
                    },
                    "created_by": {
                      "type": "string",
                      "description": "Output only. CreatedBy is the id of the user that created this Cloud Vault.",
                      "readOnly": true
                    },
                    "owner_id": {
                      "type": "string",
                      "description": "Output only. OwnerId is the id of the owner of this Cloud Vault.",
                      "readOnly": true
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedDateTime is the date and time that this Cloud Vault was\ncreated.",
                      "readOnly": true
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Output only. UpdatedDateTime is the date and time that thie Cloud Vault was\nupdated",
                      "readOnly": true
                    }
                  },
                  "description": "CloudVault is the details about a specific Cloud Vault."
                }
              }
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Cloud Vault could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CloudVaults"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Cloud Vault.",
        "description": "Deletes a specific Cloud Vault.",
        "operationId": "CloudVaultsDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force will, if set, delete a Cloud Vault that is associated with a bunker or\nis currently in use. If it is not set, an error will be returned in these cases\ninstead.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "CloudVaults"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/imports/connector-configs": {
      "get": {
        "summary": "List Import Connector Config.",
        "description": "List available Import Connector Configs.",
        "operationId": "ImportConnectorConfigsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "configs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID is the globally unique ID of the import connector config."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name is the display name given to this import connector config."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description is an optional description given to this import connector config."
                      },
                      "s3_connector": {
                        "type": "object",
                        "properties": {
                          "bucket": {
                            "type": "string",
                            "description": "Bucket is the name of the S3 Bucket."
                          },
                          "prefix": {
                            "type": "string",
                            "description": "Prefix is the prefix of files."
                          },
                          "cross_account": {
                            "description": "CrossAccount is the type of auth.",
                            "type": "object",
                            "properties": {
                              "user_arn": {
                                "type": "string",
                                "description": "UserArn is the Amazon Resource Name (ARN) of the role to assume."
                              },
                              "session_name": {
                                "type": "string",
                                "description": "Session name is the identifier of the session."
                              },
                              "principal": {
                                "type": "string",
                                "description": "Output only. Principal is the principal for the trust relationship.",
                                "readOnly": true
                              },
                              "external_id": {
                                "type": "string",
                                "description": "Output only. ExternalId is the external ID for the trust relationship.",
                                "readOnly": true
                              }
                            }
                          },
                          "access_keys": {
                            "description": "S3AccessKeysAuth is the type of auth.",
                            "type": "object"
                          },
                          "filenames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Filenames can be a pattern or an exact file to allow multiple files to be specified."
                          }
                        },
                        "description": "S3Provider is the information about the connector that can be returned."
                      },
                      "gcs_connector": {
                        "type": "object",
                        "properties": {
                          "bucket": {
                            "type": "string",
                            "description": "Bucket is the name of the GCS Bucket."
                          },
                          "prefix": {
                            "type": "string",
                            "description": "Prefix is the prefix of files."
                          },
                          "filenames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Filenames can be a pattern or an exact file to allow multiple files to be specified."
                          }
                        },
                        "description": "GCSProvider is the information about the connector that can be returned."
                      },
                      "created_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreatedDateTime is the date and time the import connector config was created."
                      },
                      "updated_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "UpdatedDateTime is the date and time the import connector config was last updated."
                      },
                      "user_id": {
                        "type": "string",
                        "description": "UserId is the ID of the user who created the import connector config."
                      },
                      "connector_type": {
                        "description": "Output only. ConnectorType identifies the connector type.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "CONNECTOR_TYPE_INVALID",
                          "S3_CROSS_ACCOUNT",
                          "S3_ACCESS_KEYS",
                          "GCS_SECRET_AUTH"
                        ],
                        "default": "CONNECTOR_TYPE_INVALID"
                      }
                    },
                    "description": "Config is the information that can be retrieved about an import connector config. It is all Output only.",
                    "readOnly": true
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Results is the count of the returned results."
                    },
                    "total_results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "TotalResults is the total number of results available."
                    },
                    "next_page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "NextPage is the next page to view."
                    }
                  },
                  "description": "PaginationResponse holds information on the returned records."
                }
              },
              "description": "ListResponse is the output of the List method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.page",
            "description": "Page is the page to view.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.per_page",
            "description": "PerPage is the number of items per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order_by",
            "description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter is a string containing logic that can specify a restricted set of ICCs to be returned.\ne.g. `name co 'Test' or name co 'Acme'`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ImportConnectorConfigs"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "post": {
        "summary": "Create an Import Connector Config.",
        "description": "Create a configuration for importing data from a connector.",
        "operationId": "ImportConnectorConfigsCreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "config_id": {
                  "type": "string"
                }
              },
              "description": "CreateResponse is the output of the Create method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "409": {
            "description": "Returned when an Import Connector Config with the same name already exists.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Output only. ID is the globally unique ID of the import connector config.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name given to this import connector config."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional description given to this import connector config."
                    },
                    "s3_connector": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "type": "string",
                          "description": "Bucket is the name of the S3 Bucket."
                        },
                        "prefix": {
                          "type": "string",
                          "description": "Prefix is the prefix of files."
                        },
                        "cross_account": {
                          "description": "CrossAccount is the type of auth.",
                          "type": "object",
                          "properties": {
                            "user_arn": {
                              "type": "string",
                              "description": "UserArn is the Amazon Resource Name (ARN) of the role to assume."
                            },
                            "session_name": {
                              "type": "string",
                              "description": "Session name is the identifier of the session."
                            },
                            "principal": {
                              "type": "string",
                              "description": "Output only. Principal is the principal for the trust relationship.",
                              "readOnly": true
                            },
                            "external_id": {
                              "type": "string",
                              "description": "Output only. ExternalId is the external ID for the trust relationship.",
                              "readOnly": true
                            }
                          }
                        },
                        "access_keys": {
                          "description": "S3AccessKeysAuth is the type of auth.",
                          "type": "object",
                          "properties": {
                            "access_key_id": {
                              "type": "string",
                              "description": "AccessKey is the S3 access key ID."
                            },
                            "secret_access_key": {
                              "type": "string",
                              "description": "SecretAccessKey is the S3 secret access key."
                            }
                          }
                        },
                        "filenames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Filenames can be a pattern or an exact file to allow multiple files to be specified."
                        }
                      },
                      "description": "S3Connector is the information required to define an S3 Connector."
                    },
                    "gcs_connector": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "type": "string",
                          "description": "Bucket is the name of the GCS Bucket."
                        },
                        "prefix": {
                          "type": "string",
                          "description": "Prefix is the prefix of files."
                        },
                        "secret_auth": {
                          "description": "SecretAuth is the type of auth.",
                          "type": "object",
                          "properties": {
                            "credentials_json": {
                              "type": "string"
                            }
                          }
                        },
                        "filenames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Filenames can be a pattern or an exact file to allow multiple files to be specified."
                        }
                      },
                      "description": "GCSConnector is the information required to define an GCS Connector."
                    }
                  },
                  "description": "UpsertConfig is the information required to define an import connector config."
                }
              },
              "description": "CreateRequest is the input to the Create method."
            }
          }
        ],
        "tags": [
          "ImportConnectorConfigs"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/imports/connector-configs/{config.id}": {
      "patch": {
        "summary": "Update an Import Connector Config",
        "description": "Updates the provided fields in a specific Import Connector Config.",
        "operationId": "ImportConnectorConfigsUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID is the globally unique ID of the import connector config."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name given to this import connector config."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional description given to this import connector config."
                    },
                    "s3_connector": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "type": "string",
                          "description": "Bucket is the name of the S3 Bucket."
                        },
                        "prefix": {
                          "type": "string",
                          "description": "Prefix is the prefix of files."
                        },
                        "cross_account": {
                          "description": "CrossAccount is the type of auth.",
                          "type": "object",
                          "properties": {
                            "user_arn": {
                              "type": "string",
                              "description": "UserArn is the Amazon Resource Name (ARN) of the role to assume."
                            },
                            "session_name": {
                              "type": "string",
                              "description": "Session name is the identifier of the session."
                            },
                            "principal": {
                              "type": "string",
                              "description": "Output only. Principal is the principal for the trust relationship.",
                              "readOnly": true
                            },
                            "external_id": {
                              "type": "string",
                              "description": "Output only. ExternalId is the external ID for the trust relationship.",
                              "readOnly": true
                            }
                          }
                        },
                        "access_keys": {
                          "description": "S3AccessKeysAuth is the type of auth.",
                          "type": "object"
                        },
                        "filenames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Filenames can be a pattern or an exact file to allow multiple files to be specified."
                        }
                      },
                      "description": "S3Provider is the information about the connector that can be returned."
                    },
                    "gcs_connector": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "type": "string",
                          "description": "Bucket is the name of the GCS Bucket."
                        },
                        "prefix": {
                          "type": "string",
                          "description": "Prefix is the prefix of files."
                        },
                        "filenames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Filenames can be a pattern or an exact file to allow multiple files to be specified."
                        }
                      },
                      "description": "GCSProvider is the information about the connector that can be returned."
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "CreatedDateTime is the date and time the import connector config was created."
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "UpdatedDateTime is the date and time the import connector config was last updated."
                    },
                    "user_id": {
                      "type": "string",
                      "description": "UserId is the ID of the user who created the import connector config."
                    },
                    "connector_type": {
                      "description": "Output only. ConnectorType identifies the connector type.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "CONNECTOR_TYPE_INVALID",
                        "S3_CROSS_ACCOUNT",
                        "S3_ACCESS_KEYS",
                        "GCS_SECRET_AUTH"
                      ],
                      "default": "CONNECTOR_TYPE_INVALID"
                    }
                  },
                  "description": "Config is the information that can be retrieved about an import connector config. It is all Output only.",
                  "readOnly": true
                }
              },
              "description": "UpdateResponse is the output of the Update method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Import Connector Config could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "config.id",
            "description": "Output only. ID is the globally unique ID of the import connector config.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "config",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name is the display name given to this import connector config."
                },
                "description": {
                  "type": "string",
                  "description": "Description is an optional description given to this import connector config."
                },
                "s3_connector": {
                  "type": "object",
                  "properties": {
                    "bucket": {
                      "type": "string",
                      "description": "Bucket is the name of the S3 Bucket."
                    },
                    "prefix": {
                      "type": "string",
                      "description": "Prefix is the prefix of files."
                    },
                    "cross_account": {
                      "description": "CrossAccount is the type of auth.",
                      "type": "object",
                      "properties": {
                        "user_arn": {
                          "type": "string",
                          "description": "UserArn is the Amazon Resource Name (ARN) of the role to assume."
                        },
                        "session_name": {
                          "type": "string",
                          "description": "Session name is the identifier of the session."
                        },
                        "principal": {
                          "type": "string",
                          "description": "Output only. Principal is the principal for the trust relationship.",
                          "readOnly": true
                        },
                        "external_id": {
                          "type": "string",
                          "description": "Output only. ExternalId is the external ID for the trust relationship.",
                          "readOnly": true
                        }
                      }
                    },
                    "access_keys": {
                      "description": "S3AccessKeysAuth is the type of auth.",
                      "type": "object",
                      "properties": {
                        "access_key_id": {
                          "type": "string",
                          "description": "AccessKey is the S3 access key ID."
                        },
                        "secret_access_key": {
                          "type": "string",
                          "description": "SecretAccessKey is the S3 secret access key."
                        }
                      }
                    },
                    "filenames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Filenames can be a pattern or an exact file to allow multiple files to be specified."
                    }
                  },
                  "description": "S3Connector is the information required to define an S3 Connector."
                },
                "gcs_connector": {
                  "type": "object",
                  "properties": {
                    "bucket": {
                      "type": "string",
                      "description": "Bucket is the name of the GCS Bucket."
                    },
                    "prefix": {
                      "type": "string",
                      "description": "Prefix is the prefix of files."
                    },
                    "secret_auth": {
                      "description": "SecretAuth is the type of auth.",
                      "type": "object",
                      "properties": {
                        "credentials_json": {
                          "type": "string"
                        }
                      }
                    },
                    "filenames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Filenames can be a pattern or an exact file to allow multiple files to be specified."
                    }
                  },
                  "description": "GCSConnector is the information required to define an GCS Connector."
                }
              },
              "description": "UpsertConfig is the information required to define an import connector config."
            }
          },
          {
            "name": "update_mask",
            "description": "UpdateMask is a field mask, allowing partial resource update.\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ImportConnectorConfigs"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/imports/connector-configs/{config_id}": {
      "get": {
        "summary": "Get an Import Connector Config.",
        "description": "Get the details of a specific Import Connector Config.",
        "operationId": "ImportConnectorConfigsGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID is the globally unique ID of the import connector config."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name given to this import connector config."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional description given to this import connector config."
                    },
                    "s3_connector": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "type": "string",
                          "description": "Bucket is the name of the S3 Bucket."
                        },
                        "prefix": {
                          "type": "string",
                          "description": "Prefix is the prefix of files."
                        },
                        "cross_account": {
                          "description": "CrossAccount is the type of auth.",
                          "type": "object",
                          "properties": {
                            "user_arn": {
                              "type": "string",
                              "description": "UserArn is the Amazon Resource Name (ARN) of the role to assume."
                            },
                            "session_name": {
                              "type": "string",
                              "description": "Session name is the identifier of the session."
                            },
                            "principal": {
                              "type": "string",
                              "description": "Output only. Principal is the principal for the trust relationship.",
                              "readOnly": true
                            },
                            "external_id": {
                              "type": "string",
                              "description": "Output only. ExternalId is the external ID for the trust relationship.",
                              "readOnly": true
                            }
                          }
                        },
                        "access_keys": {
                          "description": "S3AccessKeysAuth is the type of auth.",
                          "type": "object"
                        },
                        "filenames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Filenames can be a pattern or an exact file to allow multiple files to be specified."
                        }
                      },
                      "description": "S3Provider is the information about the connector that can be returned."
                    },
                    "gcs_connector": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "type": "string",
                          "description": "Bucket is the name of the GCS Bucket."
                        },
                        "prefix": {
                          "type": "string",
                          "description": "Prefix is the prefix of files."
                        },
                        "filenames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Filenames can be a pattern or an exact file to allow multiple files to be specified."
                        }
                      },
                      "description": "GCSProvider is the information about the connector that can be returned."
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "CreatedDateTime is the date and time the import connector config was created."
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "UpdatedDateTime is the date and time the import connector config was last updated."
                    },
                    "user_id": {
                      "type": "string",
                      "description": "UserId is the ID of the user who created the import connector config."
                    },
                    "connector_type": {
                      "description": "Output only. ConnectorType identifies the connector type.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "CONNECTOR_TYPE_INVALID",
                        "S3_CROSS_ACCOUNT",
                        "S3_ACCESS_KEYS",
                        "GCS_SECRET_AUTH"
                      ],
                      "default": "CONNECTOR_TYPE_INVALID"
                    }
                  },
                  "description": "Config is the information that can be retrieved about an import connector config. It is all Output only.",
                  "readOnly": true
                }
              },
              "description": "GetResponse is the output of the Get method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Import Connector Config could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImportConnectorConfigs"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "delete": {
        "summary": "Delete an Import Connector Config.",
        "description": "Deletes a specific Import Connector Config.",
        "operationId": "ImportConnectorConfigsDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "description": "DeleteResponse is the output from the Delete method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImportConnectorConfigs"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/imports/executions": {
      "get": {
        "summary": "List Executions.",
        "description": "List all import executions.",
        "operationId": "ImportsListExecutions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "executions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id is the ID of the execution."
                      },
                      "import_id": {
                        "type": "string",
                        "description": "ImportId is the ID of the import used in the execution."
                      },
                      "user_id": {
                        "type": "string",
                        "description": "UserId is the ID of the user who executed the import."
                      },
                      "history": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "NO_STATUS",
                                "WAITING",
                                "INITIALIZING",
                                "RUNNING",
                                "FAILED",
                                "COMPLETED",
                                "CANCELING",
                                "CANCELED",
                                "STALE",
                                "PROVISIONING",
                                "PROVISIONED",
                                "PARTIALLY_COMPLETED"
                              ],
                              "default": "NO_STATUS",
                              "description": "Status is an enum of the different states that an async task can be in."
                            },
                            "date_time": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "details": {
                              "type": "string"
                            }
                          },
                          "description": "History holds information about the status of the import execution."
                        },
                        "description": "History is the status history of the import execution."
                      },
                      "current_status": {
                        "type": "string",
                        "enum": [
                          "NO_STATUS",
                          "WAITING",
                          "INITIALIZING",
                          "RUNNING",
                          "FAILED",
                          "COMPLETED",
                          "CANCELING",
                          "CANCELED",
                          "STALE",
                          "PROVISIONING",
                          "PROVISIONED",
                          "PARTIALLY_COMPLETED"
                        ],
                        "default": "NO_STATUS",
                        "description": "Status is an enum of the different states that an async task can be in."
                      },
                      "created_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreatedDateTime is the creation date and time of the current execution."
                      },
                      "updated_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "UpdatedDateTime is the date and time the execution was updated."
                      },
                      "progress": {
                        "description": "Progress has the information of the progress of the import as whole.",
                        "type": "object",
                        "properties": {
                          "speed": {
                            "type": "string",
                            "format": "int64",
                            "description": "Speed is the transferred average number of bytes per second."
                          },
                          "completion_percentage": {
                            "type": "number",
                            "format": "float",
                            "description": "CompletionPercentage is the current transferred bytes as a percentage."
                          },
                          "transferred_bytes": {
                            "type": "string",
                            "format": "int64",
                            "description": "TransferredBytes is the current transferred number of bytes."
                          },
                          "total_bytes": {
                            "type": "string",
                            "format": "int64",
                            "description": "TotalBytes is the total number of bytes to be transferred."
                          }
                        }
                      },
                      "cloud_vault_id": {
                        "type": "string",
                        "description": "CloudVaultId is the ID of the Cloud Vault used during the execution."
                      }
                    },
                    "description": "Execution holds information about an import execution."
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Results is the count of the returned results."
                    },
                    "total_results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "TotalResults is the total number of results available."
                    },
                    "next_page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "NextPage is the next page to view."
                    }
                  },
                  "description": "PaginationResponse holds information on the returned records."
                }
              },
              "description": "ListExecutionsResponse is the output from the ListExecutions method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.page",
            "description": "Page is the page to view.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.per_page",
            "description": "PerPage is the number of items per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order_by",
            "description": "OrderBy is a comma seperated value to define sorting.\ne.g 'current_status DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter is a string containing logic that can specify a restricted set of Executions to be returned.\ne.g. `current_status eq 'WAITING'`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/imports/executions/{execution_id}": {
      "get": {
        "summary": "Gets an Execution",
        "description": "Gets a specific import execution.",
        "operationId": "ImportsGetExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "execution": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id is the ID of the execution."
                    },
                    "import_id": {
                      "type": "string",
                      "description": "ImportId is the ID of the import used in the execution."
                    },
                    "user_id": {
                      "type": "string",
                      "description": "UserId is the ID of the user who executed the import."
                    },
                    "history": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "NO_STATUS",
                              "WAITING",
                              "INITIALIZING",
                              "RUNNING",
                              "FAILED",
                              "COMPLETED",
                              "CANCELING",
                              "CANCELED",
                              "STALE",
                              "PROVISIONING",
                              "PROVISIONED",
                              "PARTIALLY_COMPLETED"
                            ],
                            "default": "NO_STATUS",
                            "description": "Status is an enum of the different states that an async task can be in."
                          },
                          "date_time": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "details": {
                            "type": "string"
                          }
                        },
                        "description": "History holds information about the status of the import execution."
                      },
                      "description": "History is the status history of the import execution."
                    },
                    "current_status": {
                      "type": "string",
                      "enum": [
                        "NO_STATUS",
                        "WAITING",
                        "INITIALIZING",
                        "RUNNING",
                        "FAILED",
                        "COMPLETED",
                        "CANCELING",
                        "CANCELED",
                        "STALE",
                        "PROVISIONING",
                        "PROVISIONED",
                        "PARTIALLY_COMPLETED"
                      ],
                      "default": "NO_STATUS",
                      "description": "Status is an enum of the different states that an async task can be in."
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "CreatedDateTime is the creation date and time of the current execution."
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "UpdatedDateTime is the date and time the execution was updated."
                    },
                    "progress": {
                      "description": "Progress has the information of the progress of the import as whole.",
                      "type": "object",
                      "properties": {
                        "speed": {
                          "type": "string",
                          "format": "int64",
                          "description": "Speed is the transferred average number of bytes per second."
                        },
                        "completion_percentage": {
                          "type": "number",
                          "format": "float",
                          "description": "CompletionPercentage is the current transferred bytes as a percentage."
                        },
                        "transferred_bytes": {
                          "type": "string",
                          "format": "int64",
                          "description": "TransferredBytes is the current transferred number of bytes."
                        },
                        "total_bytes": {
                          "type": "string",
                          "format": "int64",
                          "description": "TotalBytes is the total number of bytes to be transferred."
                        }
                      }
                    },
                    "cloud_vault_id": {
                      "type": "string",
                      "description": "CloudVaultId is the ID of the Cloud Vault used during the execution."
                    }
                  },
                  "description": "Execution holds information about an import execution."
                }
              },
              "description": "GetExecutionResponse is the output from the GetExecution method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Execution could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/imports/executions/{execution_id}/cancel": {
      "post": {
        "summary": "Cancel an Execution",
        "description": "Cancels a specific import execution.",
        "operationId": "ImportsCancelExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "description": "CancelExecutionResponse is the output from the CancelExecution method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Execution could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/imports/importers": {
      "get": {
        "summary": "List Import.",
        "description": "List available Imports.",
        "operationId": "ImportsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "imports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Output only. Id is the id for the import",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "title": "Name is a name given to the import"
                      },
                      "description": {
                        "type": "string",
                        "title": "Description is a description of the import"
                      },
                      "icc_id": {
                        "type": "string",
                        "title": "IccId is the id of the icc used by the import"
                      },
                      "cloud_vault_id": {
                        "type": "string",
                        "description": "CloudVaultId is the identifier of where the files will be imported to."
                      },
                      "data_filter": {
                        "description": "DataFilter is the filtered data to import from the ICC.",
                        "type": "object",
                        "properties": {
                          "filter": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "Filter is an array of strings used to filter the data from the ICC. No filter == *"
                          }
                        }
                      },
                      "created_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Output only. CreatedDateTime is the date and time the import was created.",
                        "readOnly": true
                      },
                      "updated_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Output only. UpdatedDateTime is the date and time the import was last updated.",
                        "readOnly": true
                      },
                      "user_id": {
                        "type": "string",
                        "description": "Output only. UserId is the id of the user who created the import.",
                        "readOnly": true
                      }
                    },
                    "description": "Import is the information required to define an import."
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Results is the count of the returned results."
                    },
                    "total_results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "TotalResults is the total number of results available."
                    },
                    "next_page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "NextPage is the next page to view."
                    }
                  },
                  "description": "PaginationResponse holds information on the returned records."
                }
              },
              "description": "ListResponse is the output of the List method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.page",
            "description": "Page is the page to view.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.per_page",
            "description": "PerPage is the number of items per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order_by",
            "description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter is a string containing logic that can specify a restricted set of Importers to be returned.\ne.g. `name co 'Test' or name co 'Acme'`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "post": {
        "summary": "Create an Import.",
        "description": "Create a configuration for importing data.",
        "operationId": "ImportsCreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "import_id": {
                  "type": "string"
                }
              },
              "description": "CreateResponse is the output of the Create method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "409": {
            "description": "Returned when an Import with the same name already exists.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "import": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Output only. Id is the id for the import",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "title": "Name is a name given to the import"
                    },
                    "description": {
                      "type": "string",
                      "title": "Description is a description of the import"
                    },
                    "icc_id": {
                      "type": "string",
                      "title": "IccId is the id of the icc used by the import"
                    },
                    "cloud_vault_id": {
                      "type": "string",
                      "description": "CloudVaultId is the identifier of where the files will be imported to."
                    },
                    "data_filter": {
                      "description": "DataFilter is the filtered data to import from the ICC.",
                      "type": "object",
                      "properties": {
                        "filter": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "title": "Filter is an array of strings used to filter the data from the ICC. No filter == *"
                        }
                      }
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedDateTime is the date and time the import was created.",
                      "readOnly": true
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. UpdatedDateTime is the date and time the import was last updated.",
                      "readOnly": true
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Output only. UserId is the id of the user who created the import.",
                      "readOnly": true
                    }
                  },
                  "description": "Import is the information required to define an import."
                }
              },
              "description": "CreateRequest is the input to the Create method."
            }
          }
        ],
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/imports/importers/{import.id}": {
      "patch": {
        "summary": "Update an Import",
        "description": "Updates the provided fields in a specific Import.",
        "operationId": "ImportsUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "import": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Output only. Id is the id for the import",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "title": "Name is a name given to the import"
                    },
                    "description": {
                      "type": "string",
                      "title": "Description is a description of the import"
                    },
                    "icc_id": {
                      "type": "string",
                      "title": "IccId is the id of the icc used by the import"
                    },
                    "cloud_vault_id": {
                      "type": "string",
                      "description": "CloudVaultId is the identifier of where the files will be imported to."
                    },
                    "data_filter": {
                      "description": "DataFilter is the filtered data to import from the ICC.",
                      "type": "object",
                      "properties": {
                        "filter": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "title": "Filter is an array of strings used to filter the data from the ICC. No filter == *"
                        }
                      }
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedDateTime is the date and time the import was created.",
                      "readOnly": true
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. UpdatedDateTime is the date and time the import was last updated.",
                      "readOnly": true
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Output only. UserId is the id of the user who created the import.",
                      "readOnly": true
                    }
                  },
                  "description": "Import is the information required to define an import."
                }
              },
              "description": "UpdateResponse is the output of the Update method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Import could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "import.id",
            "description": "Output only. Id is the id for the import",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "import",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name is a name given to the import"
                },
                "description": {
                  "type": "string",
                  "title": "Description is a description of the import"
                },
                "icc_id": {
                  "type": "string",
                  "title": "IccId is the id of the icc used by the import"
                },
                "cloud_vault_id": {
                  "type": "string",
                  "description": "CloudVaultId is the identifier of where the files will be imported to."
                },
                "data_filter": {
                  "description": "DataFilter is the filtered data to import from the ICC.",
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "Filter is an array of strings used to filter the data from the ICC. No filter == *"
                    }
                  }
                },
                "created_date_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Output only. CreatedDateTime is the date and time the import was created.",
                  "readOnly": true
                },
                "updated_date_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Output only. UpdatedDateTime is the date and time the import was last updated.",
                  "readOnly": true
                },
                "user_id": {
                  "type": "string",
                  "description": "Output only. UserId is the id of the user who created the import.",
                  "readOnly": true
                }
              },
              "description": "Import is the information required to define an import."
            }
          },
          {
            "name": "update_mask",
            "description": "UpdateMask is a field mask, allowing partial resource update.\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/imports/importers/{import_id}": {
      "get": {
        "summary": "Get an Import.",
        "description": "Get the details of a specific Import.",
        "operationId": "ImportsGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "import": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Output only. Id is the id for the import",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "title": "Name is a name given to the import"
                    },
                    "description": {
                      "type": "string",
                      "title": "Description is a description of the import"
                    },
                    "icc_id": {
                      "type": "string",
                      "title": "IccId is the id of the icc used by the import"
                    },
                    "cloud_vault_id": {
                      "type": "string",
                      "description": "CloudVaultId is the identifier of where the files will be imported to."
                    },
                    "data_filter": {
                      "description": "DataFilter is the filtered data to import from the ICC.",
                      "type": "object",
                      "properties": {
                        "filter": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "title": "Filter is an array of strings used to filter the data from the ICC. No filter == *"
                        }
                      }
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedDateTime is the date and time the import was created.",
                      "readOnly": true
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. UpdatedDateTime is the date and time the import was last updated.",
                      "readOnly": true
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Output only. UserId is the id of the user who created the import.",
                      "readOnly": true
                    }
                  },
                  "description": "Import is the information required to define an import."
                }
              },
              "description": "GetResponse is the output of the Get method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Import could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "import_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "delete": {
        "summary": "Delete an Import.",
        "description": "Deletes a specific Import.",
        "operationId": "ImportsDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "description": "DeleteResponse is the output from the Delete method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "import_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/imports/importers/{import_id}/execute": {
      "post": {
        "summary": "Executes an Import",
        "description": "Executes an import for the specified import ID.",
        "operationId": "ImportsExecuteImport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "execution_id": {
                  "type": "string",
                  "description": "ExecutionId is the ID of the submitted execution."
                }
              },
              "description": "ExecuteImportResponse is the output from the ExecuteImport method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Importer could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "import_id",
            "description": "ImportId is the ID of the import to execute.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/exports/destinations": {
      "get": {
        "summary": "List Destinations",
        "description": "Lists available Destinations.",
        "operationId": "DestinationsListDestinations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Results is the count of the returned results."
                    },
                    "total_results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "TotalResults is the total number of results available."
                    },
                    "next_page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "NextPage is the next page to view."
                    }
                  },
                  "description": "PaginationResponse holds information on the returned records."
                },
                "destinations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Output only. ID is the globally unique ID of the destination.",
                        "readOnly": true
                      },
                      "owner_id": {
                        "type": "string",
                        "description": "Output only. OwnerId is the user or company ID of the owner of the destination.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Name is the display name given to this destination."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description is an optional description given to this destination."
                      },
                      "s3": {
                        "type": "object",
                        "properties": {
                          "bucket_name": {
                            "type": "string",
                            "description": "BucketName is the name of the S3 Bucket."
                          },
                          "region": {
                            "description": "Region is the region of the S3 Bucket.",
                            "type": "string",
                            "enum": [
                              "UNKNOWN_REGION",
                              "US_EAST_1",
                              "US_EAST_2",
                              "US_WEST_1",
                              "US_WEST_2",
                              "CA_CENTRAL_1",
                              "EU_WEST_1",
                              "EU_WEST_2",
                              "EU_CENTRAL_1",
                              "AP_SOUTHEAST_1",
                              "AP_SOUTHEAST_2",
                              "AP_SOUTH_1",
                              "AP_NORTHEAST_1",
                              "AP_NORTHEAST_2",
                              "SA_EAST_1",
                              "CN_NORTH_1"
                            ],
                            "default": "UNKNOWN_REGION"
                          },
                          "default_push_overrides": {
                            "title": "DefaultPushOverrides",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "Path is the path in the s3 bucket to export data to."
                              }
                            },
                            "description": "S3Overrides are the values that can be overridden when pushing to s3."
                          },
                          "access_key": {
                            "type": "object",
                            "properties": {
                              "access_key_id": {
                                "type": "string",
                                "description": "AccessKeyId is the id of the access key to authenticate with AWS."
                              },
                              "secret": {
                                "type": "string",
                                "description": "Secret is the access key secret for authentication."
                              },
                              "session_token": {
                                "type": "string",
                                "description": "SessionToken is an optional STS session token.\nLeave blank if using an IAM User access key."
                              }
                            },
                            "description": "S3AccessKeyAuth holds the details needed for access key / secret authentication."
                          },
                          "cross_account": {
                            "type": "object",
                            "properties": {
                              "push_role_arn": {
                                "type": "string",
                                "description": "PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."
                              },
                              "session_name": {
                                "type": "string",
                                "description": "SessionName is the name of the IAM role session."
                              },
                              "external_id": {
                                "type": "string",
                                "description": "ExternalId is the aws ExternalId that must be set in your role's trust policy to enable cross account access. Output only.",
                                "readOnly": true
                              }
                            },
                            "description": "S3CrossAccount holds the details needed for cross account authentication."
                          }
                        },
                        "description": "S3Connector is the information required to define a destination using an S3 bucket."
                      },
                      "pubmatic": {
                        "type": "object",
                        "properties": {
                          "dpid": {
                            "type": "integer",
                            "format": "int32",
                            "description": "DPID is your PubMatic data partner ID."
                          }
                        },
                        "description": "PubmaticConnector is the information required to define a destination pushing to PubMatic."
                      },
                      "sftp": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "Host is the host address of the sftp server."
                          },
                          "port": {
                            "type": "integer",
                            "format": "int32",
                            "description": "port is the port number that gets used when connecting to the sftp server."
                          },
                          "password_config": {
                            "type": "object",
                            "properties": {
                              "username": {
                                "type": "string",
                                "description": "Username is the username of then user trying to connect to the sftp server."
                              },
                              "password": {
                                "type": "string",
                                "description": "Password is the password of the user."
                              }
                            },
                            "description": "SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."
                          },
                          "ssh_config": {
                            "type": "object",
                            "properties": {
                              "username": {
                                "type": "string",
                                "description": "Username is the username of then user trying to connect to the sftp server."
                              },
                              "ssh_key": {
                                "type": "string",
                                "description": "SshKey is the ssh key of the user."
                              }
                            },
                            "description": "SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."
                          },
                          "host_keys": {
                            "description": "HostKeys contains options for providing a public key to verify the host.",
                            "type": "object",
                            "properties": {
                              "authorized_keys": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."
                              },
                              "known_hosts": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "KnownHosts are the host public keys in OpenSSH known_hosts format."
                              },
                              "public_key_pem": {
                                "type": "string",
                                "description": "PublicKeyPem is the servers public PEM key."
                              }
                            }
                          },
                          "gpg_public_key": {
                            "type": "string",
                            "description": "GpgPublicKey is the GPG public key to use in encrypting the data. Optional."
                          },
                          "default_push_overrides": {
                            "description": "DefaultPushOverrides contain the default push time values. Optional.",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "Path is the path in the sftp server to export data to."
                              }
                            }
                          }
                        },
                        "description": "SftpConnector is the information required to define a destination pushing to a sftp server."
                      },
                      "gcs": {
                        "type": "object",
                        "properties": {
                          "bucket_name": {
                            "type": "string",
                            "description": "Bucket Name is the name of the GCS bucket."
                          },
                          "gcs_service_account_config": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type is the type of account e.g. service_account."
                              },
                              "project_id": {
                                "type": "string",
                                "description": "Project ID is the GCS project ID."
                              },
                              "private_key_id": {
                                "type": "string",
                                "description": "Private Key ID used to authenticate the service account."
                              },
                              "private_key": {
                                "type": "string",
                                "description": "Private Key is a PEM private key."
                              },
                              "client_email": {
                                "type": "string",
                                "description": "Client Email is the service account email."
                              },
                              "client_id": {
                                "type": "string",
                                "description": "Client ID is the user account ID."
                              },
                              "auth_uri": {
                                "type": "string",
                                "description": "Authentication URI is the oauth2 uri."
                              },
                              "token_uri": {
                                "type": "string",
                                "description": "Token URI is the oauth2 token."
                              },
                              "auth_provider_x509_cert_url": {
                                "type": "string",
                                "description": "Authentication Provider x509 Certificate URL is the oauth2 certificate."
                              },
                              "client_x509_cert_url": {
                                "type": "string",
                                "description": "Client x509 Certificate URL is the x509 metadata url containing the service account email."
                              }
                            },
                            "description": "GCSServiceAccountConfig credentials which are used for communicating with GCS."
                          },
                          "default_push_overrides": {
                            "description": "DefaultPushOverrides contain the default push time values. Optional.",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "Path is the path in the sftp server to export data to."
                              }
                            }
                          }
                        },
                        "description": "GCSConnector is the information required to define a destination pushing to a sftp server."
                      },
                      "creator_id": {
                        "type": "string",
                        "description": "Output only. CreatorId is the ID of the user who created the destination.",
                        "readOnly": true
                      },
                      "created_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Output only. CreatedTime is the date and time the destination was created.",
                        "readOnly": true
                      },
                      "updated_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Output only. UpdatedTime is the date and time the destination was last updated.",
                        "readOnly": true
                      },
                      "connector_type": {
                        "description": "Output only. ConnectorType states the type of connector used by the destination.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "S3_ACCESS_KEYS",
                          "PUBMATIC",
                          "S3_CROSS_ACCOUNT",
                          "SFTP",
                          "GCS"
                        ],
                        "default": "S3_ACCESS_KEYS"
                      }
                    },
                    "description": "Destination is the information required to define destinations."
                  }
                }
              },
              "description": "ListDestinationsResponse is the output of the ListDestination method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the right to view Destinations.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.page",
            "description": "Page is the page to view.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.per_page",
            "description": "PerPage is the number of items per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order_by",
            "description": "OrderBy is a comma seperated value to define sorting.\ne.g 'created_time,name DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\nValid columns: name, created_time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.names",
            "description": "Names is the filter to be applied to the names of the returned\ndatasets. Supports partial matching. Case insensitive.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Destinations"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "post": {
        "summary": "Create a Destination",
        "description": "Creates a Destination.",
        "operationId": "DestinationsCreateDestination",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "destination_id": {
                  "type": "string"
                }
              },
              "description": "CreateDestinationResponse is the output of the CreateDestination method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the right to create Destinations.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name is the display name given to this destination."
                },
                "description": {
                  "type": "string",
                  "description": "Description is an optional description given to this destination."
                },
                "s3": {
                  "type": "object",
                  "properties": {
                    "bucket_name": {
                      "type": "string",
                      "description": "BucketName is the name of the S3 Bucket."
                    },
                    "region": {
                      "description": "Region is the region of the S3 Bucket.",
                      "type": "string",
                      "enum": [
                        "UNKNOWN_REGION",
                        "US_EAST_1",
                        "US_EAST_2",
                        "US_WEST_1",
                        "US_WEST_2",
                        "CA_CENTRAL_1",
                        "EU_WEST_1",
                        "EU_WEST_2",
                        "EU_CENTRAL_1",
                        "AP_SOUTHEAST_1",
                        "AP_SOUTHEAST_2",
                        "AP_SOUTH_1",
                        "AP_NORTHEAST_1",
                        "AP_NORTHEAST_2",
                        "SA_EAST_1",
                        "CN_NORTH_1"
                      ],
                      "default": "UNKNOWN_REGION"
                    },
                    "default_push_overrides": {
                      "title": "DefaultPushOverrides",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Path is the path in the s3 bucket to export data to."
                        }
                      },
                      "description": "S3Overrides are the values that can be overridden when pushing to s3."
                    },
                    "access_key": {
                      "type": "object",
                      "properties": {
                        "access_key_id": {
                          "type": "string",
                          "description": "AccessKeyId is the id of the access key to authenticate with AWS."
                        },
                        "secret": {
                          "type": "string",
                          "description": "Secret is the access key secret for authentication."
                        },
                        "session_token": {
                          "type": "string",
                          "description": "SessionToken is an optional STS session token.\nLeave blank if using an IAM User access key."
                        }
                      },
                      "description": "S3AccessKeyAuth holds the details needed for access key / secret authentication."
                    },
                    "cross_account": {
                      "type": "object",
                      "properties": {
                        "push_role_arn": {
                          "type": "string",
                          "description": "PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."
                        },
                        "session_name": {
                          "type": "string",
                          "description": "SessionName is the name of the IAM role session."
                        },
                        "external_id": {
                          "type": "string",
                          "description": "ExternalId is the aws ExternalId that must be set in your role's trust policy to enable cross account access. Output only.",
                          "readOnly": true
                        }
                      },
                      "description": "S3CrossAccount holds the details needed for cross account authentication."
                    }
                  },
                  "description": "S3Connector is the information required to define a destination using an S3 bucket."
                },
                "pubmatic": {
                  "type": "object",
                  "properties": {
                    "dpid": {
                      "type": "integer",
                      "format": "int32",
                      "description": "DPID is your PubMatic data partner ID."
                    }
                  },
                  "description": "PubmaticConnector is the information required to define a destination pushing to PubMatic."
                },
                "sftp": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host is the host address of the sftp server."
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "description": "port is the port number that gets used when connecting to the sftp server."
                    },
                    "password_config": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Username is the username of then user trying to connect to the sftp server."
                        },
                        "password": {
                          "type": "string",
                          "description": "Password is the password of the user."
                        }
                      },
                      "description": "SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."
                    },
                    "ssh_config": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Username is the username of then user trying to connect to the sftp server."
                        },
                        "ssh_key": {
                          "type": "string",
                          "description": "SshKey is the ssh key of the user."
                        }
                      },
                      "description": "SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."
                    },
                    "host_keys": {
                      "description": "HostKeys contains options for providing a public key to verify the host.",
                      "type": "object",
                      "properties": {
                        "authorized_keys": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."
                        },
                        "known_hosts": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "KnownHosts are the host public keys in OpenSSH known_hosts format."
                        },
                        "public_key_pem": {
                          "type": "string",
                          "description": "PublicKeyPem is the servers public PEM key."
                        }
                      }
                    },
                    "gpg_public_key": {
                      "type": "string",
                      "description": "GpgPublicKey is the GPG public key to use in encrypting the data. Optional."
                    },
                    "default_push_overrides": {
                      "description": "DefaultPushOverrides contain the default push time values. Optional.",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Path is the path in the sftp server to export data to."
                        }
                      }
                    }
                  },
                  "description": "SftpConnector is the information required to define a destination pushing to a sftp server."
                },
                "gcs": {
                  "type": "object",
                  "properties": {
                    "bucket_name": {
                      "type": "string",
                      "description": "Bucket Name is the name of the GCS bucket."
                    },
                    "gcs_service_account_config": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type is the type of account e.g. service_account."
                        },
                        "project_id": {
                          "type": "string",
                          "description": "Project ID is the GCS project ID."
                        },
                        "private_key_id": {
                          "type": "string",
                          "description": "Private Key ID used to authenticate the service account."
                        },
                        "private_key": {
                          "type": "string",
                          "description": "Private Key is a PEM private key."
                        },
                        "client_email": {
                          "type": "string",
                          "description": "Client Email is the service account email."
                        },
                        "client_id": {
                          "type": "string",
                          "description": "Client ID is the user account ID."
                        },
                        "auth_uri": {
                          "type": "string",
                          "description": "Authentication URI is the oauth2 uri."
                        },
                        "token_uri": {
                          "type": "string",
                          "description": "Token URI is the oauth2 token."
                        },
                        "auth_provider_x509_cert_url": {
                          "type": "string",
                          "description": "Authentication Provider x509 Certificate URL is the oauth2 certificate."
                        },
                        "client_x509_cert_url": {
                          "type": "string",
                          "description": "Client x509 Certificate URL is the x509 metadata url containing the service account email."
                        }
                      },
                      "description": "GCSServiceAccountConfig credentials which are used for communicating with GCS."
                    },
                    "default_push_overrides": {
                      "description": "DefaultPushOverrides contain the default push time values. Optional.",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Path is the path in the sftp server to export data to."
                        }
                      }
                    }
                  },
                  "description": "GCSConnector is the information required to define a destination pushing to a sftp server."
                }
              },
              "description": "CreateDestinationRequest is the input to the CreateDestination method."
            }
          }
        ],
        "tags": [
          "Destinations"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/exports/destinations/{destination.id}": {
      "patch": {
        "summary": "Update a Destination",
        "description": "Updates the provided fields in a specific Destination.",
        "operationId": "DestinationsUpdateDestination",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "destination": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Output only. ID is the globally unique ID of the destination.",
                      "readOnly": true
                    },
                    "owner_id": {
                      "type": "string",
                      "description": "Output only. OwnerId is the user or company ID of the owner of the destination.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name given to this destination."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional description given to this destination."
                    },
                    "s3": {
                      "type": "object",
                      "properties": {
                        "bucket_name": {
                          "type": "string",
                          "description": "BucketName is the name of the S3 Bucket."
                        },
                        "region": {
                          "description": "Region is the region of the S3 Bucket.",
                          "type": "string",
                          "enum": [
                            "UNKNOWN_REGION",
                            "US_EAST_1",
                            "US_EAST_2",
                            "US_WEST_1",
                            "US_WEST_2",
                            "CA_CENTRAL_1",
                            "EU_WEST_1",
                            "EU_WEST_2",
                            "EU_CENTRAL_1",
                            "AP_SOUTHEAST_1",
                            "AP_SOUTHEAST_2",
                            "AP_SOUTH_1",
                            "AP_NORTHEAST_1",
                            "AP_NORTHEAST_2",
                            "SA_EAST_1",
                            "CN_NORTH_1"
                          ],
                          "default": "UNKNOWN_REGION"
                        },
                        "default_push_overrides": {
                          "title": "DefaultPushOverrides",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "Path is the path in the s3 bucket to export data to."
                            }
                          },
                          "description": "S3Overrides are the values that can be overridden when pushing to s3."
                        },
                        "access_key": {
                          "type": "object",
                          "properties": {
                            "access_key_id": {
                              "type": "string",
                              "description": "AccessKeyId is the id of the access key to authenticate with AWS."
                            },
                            "secret": {
                              "type": "string",
                              "description": "Secret is the access key secret for authentication."
                            },
                            "session_token": {
                              "type": "string",
                              "description": "SessionToken is an optional STS session token.\nLeave blank if using an IAM User access key."
                            }
                          },
                          "description": "S3AccessKeyAuth holds the details needed for access key / secret authentication."
                        },
                        "cross_account": {
                          "type": "object",
                          "properties": {
                            "push_role_arn": {
                              "type": "string",
                              "description": "PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."
                            },
                            "session_name": {
                              "type": "string",
                              "description": "SessionName is the name of the IAM role session."
                            },
                            "external_id": {
                              "type": "string",
                              "description": "ExternalId is the aws ExternalId that must be set in your role's trust policy to enable cross account access. Output only.",
                              "readOnly": true
                            }
                          },
                          "description": "S3CrossAccount holds the details needed for cross account authentication."
                        }
                      },
                      "description": "S3Connector is the information required to define a destination using an S3 bucket."
                    },
                    "pubmatic": {
                      "type": "object",
                      "properties": {
                        "dpid": {
                          "type": "integer",
                          "format": "int32",
                          "description": "DPID is your PubMatic data partner ID."
                        }
                      },
                      "description": "PubmaticConnector is the information required to define a destination pushing to PubMatic."
                    },
                    "sftp": {
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "Host is the host address of the sftp server."
                        },
                        "port": {
                          "type": "integer",
                          "format": "int32",
                          "description": "port is the port number that gets used when connecting to the sftp server."
                        },
                        "password_config": {
                          "type": "object",
                          "properties": {
                            "username": {
                              "type": "string",
                              "description": "Username is the username of then user trying to connect to the sftp server."
                            },
                            "password": {
                              "type": "string",
                              "description": "Password is the password of the user."
                            }
                          },
                          "description": "SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."
                        },
                        "ssh_config": {
                          "type": "object",
                          "properties": {
                            "username": {
                              "type": "string",
                              "description": "Username is the username of then user trying to connect to the sftp server."
                            },
                            "ssh_key": {
                              "type": "string",
                              "description": "SshKey is the ssh key of the user."
                            }
                          },
                          "description": "SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."
                        },
                        "host_keys": {
                          "description": "HostKeys contains options for providing a public key to verify the host.",
                          "type": "object",
                          "properties": {
                            "authorized_keys": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."
                            },
                            "known_hosts": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "KnownHosts are the host public keys in OpenSSH known_hosts format."
                            },
                            "public_key_pem": {
                              "type": "string",
                              "description": "PublicKeyPem is the servers public PEM key."
                            }
                          }
                        },
                        "gpg_public_key": {
                          "type": "string",
                          "description": "GpgPublicKey is the GPG public key to use in encrypting the data. Optional."
                        },
                        "default_push_overrides": {
                          "description": "DefaultPushOverrides contain the default push time values. Optional.",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "Path is the path in the sftp server to export data to."
                            }
                          }
                        }
                      },
                      "description": "SftpConnector is the information required to define a destination pushing to a sftp server."
                    },
                    "gcs": {
                      "type": "object",
                      "properties": {
                        "bucket_name": {
                          "type": "string",
                          "description": "Bucket Name is the name of the GCS bucket."
                        },
                        "gcs_service_account_config": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type is the type of account e.g. service_account."
                            },
                            "project_id": {
                              "type": "string",
                              "description": "Project ID is the GCS project ID."
                            },
                            "private_key_id": {
                              "type": "string",
                              "description": "Private Key ID used to authenticate the service account."
                            },
                            "private_key": {
                              "type": "string",
                              "description": "Private Key is a PEM private key."
                            },
                            "client_email": {
                              "type": "string",
                              "description": "Client Email is the service account email."
                            },
                            "client_id": {
                              "type": "string",
                              "description": "Client ID is the user account ID."
                            },
                            "auth_uri": {
                              "type": "string",
                              "description": "Authentication URI is the oauth2 uri."
                            },
                            "token_uri": {
                              "type": "string",
                              "description": "Token URI is the oauth2 token."
                            },
                            "auth_provider_x509_cert_url": {
                              "type": "string",
                              "description": "Authentication Provider x509 Certificate URL is the oauth2 certificate."
                            },
                            "client_x509_cert_url": {
                              "type": "string",
                              "description": "Client x509 Certificate URL is the x509 metadata url containing the service account email."
                            }
                          },
                          "description": "GCSServiceAccountConfig credentials which are used for communicating with GCS."
                        },
                        "default_push_overrides": {
                          "description": "DefaultPushOverrides contain the default push time values. Optional.",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "Path is the path in the sftp server to export data to."
                            }
                          }
                        }
                      },
                      "description": "GCSConnector is the information required to define a destination pushing to a sftp server."
                    },
                    "creator_id": {
                      "type": "string",
                      "description": "Output only. CreatorId is the ID of the user who created the destination.",
                      "readOnly": true
                    },
                    "created_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedTime is the date and time the destination was created.",
                      "readOnly": true
                    },
                    "updated_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. UpdatedTime is the date and time the destination was last updated.",
                      "readOnly": true
                    },
                    "connector_type": {
                      "description": "Output only. ConnectorType states the type of connector used by the destination.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "S3_ACCESS_KEYS",
                        "PUBMATIC",
                        "S3_CROSS_ACCOUNT",
                        "SFTP",
                        "GCS"
                      ],
                      "default": "S3_ACCESS_KEYS"
                    }
                  },
                  "description": "Destination is the information required to define destinations."
                }
              },
              "description": "UpdateDestinationResponse is the output of the UpdateDestination method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the right to update the Destination.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Destination could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "destination.id",
            "description": "Output only. ID is the globally unique ID of the destination.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "destination",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "owner_id": {
                  "type": "string",
                  "description": "Output only. OwnerId is the user or company ID of the owner of the destination.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Name is the display name given to this destination."
                },
                "description": {
                  "type": "string",
                  "description": "Description is an optional description given to this destination."
                },
                "s3": {
                  "type": "object",
                  "properties": {
                    "bucket_name": {
                      "type": "string",
                      "description": "BucketName is the name of the S3 Bucket."
                    },
                    "region": {
                      "description": "Region is the region of the S3 Bucket.",
                      "type": "string",
                      "enum": [
                        "UNKNOWN_REGION",
                        "US_EAST_1",
                        "US_EAST_2",
                        "US_WEST_1",
                        "US_WEST_2",
                        "CA_CENTRAL_1",
                        "EU_WEST_1",
                        "EU_WEST_2",
                        "EU_CENTRAL_1",
                        "AP_SOUTHEAST_1",
                        "AP_SOUTHEAST_2",
                        "AP_SOUTH_1",
                        "AP_NORTHEAST_1",
                        "AP_NORTHEAST_2",
                        "SA_EAST_1",
                        "CN_NORTH_1"
                      ],
                      "default": "UNKNOWN_REGION"
                    },
                    "default_push_overrides": {
                      "title": "DefaultPushOverrides",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Path is the path in the s3 bucket to export data to."
                        }
                      },
                      "description": "S3Overrides are the values that can be overridden when pushing to s3."
                    },
                    "access_key": {
                      "type": "object",
                      "properties": {
                        "access_key_id": {
                          "type": "string",
                          "description": "AccessKeyId is the id of the access key to authenticate with AWS."
                        },
                        "secret": {
                          "type": "string",
                          "description": "Secret is the access key secret for authentication."
                        },
                        "session_token": {
                          "type": "string",
                          "description": "SessionToken is an optional STS session token.\nLeave blank if using an IAM User access key."
                        }
                      },
                      "description": "S3AccessKeyAuth holds the details needed for access key / secret authentication."
                    },
                    "cross_account": {
                      "type": "object",
                      "properties": {
                        "push_role_arn": {
                          "type": "string",
                          "description": "PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."
                        },
                        "session_name": {
                          "type": "string",
                          "description": "SessionName is the name of the IAM role session."
                        },
                        "external_id": {
                          "type": "string",
                          "description": "ExternalId is the aws ExternalId that must be set in your role's trust policy to enable cross account access. Output only.",
                          "readOnly": true
                        }
                      },
                      "description": "S3CrossAccount holds the details needed for cross account authentication."
                    }
                  },
                  "description": "S3Connector is the information required to define a destination using an S3 bucket."
                },
                "pubmatic": {
                  "type": "object",
                  "properties": {
                    "dpid": {
                      "type": "integer",
                      "format": "int32",
                      "description": "DPID is your PubMatic data partner ID."
                    }
                  },
                  "description": "PubmaticConnector is the information required to define a destination pushing to PubMatic."
                },
                "sftp": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host is the host address of the sftp server."
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "description": "port is the port number that gets used when connecting to the sftp server."
                    },
                    "password_config": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Username is the username of then user trying to connect to the sftp server."
                        },
                        "password": {
                          "type": "string",
                          "description": "Password is the password of the user."
                        }
                      },
                      "description": "SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."
                    },
                    "ssh_config": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Username is the username of then user trying to connect to the sftp server."
                        },
                        "ssh_key": {
                          "type": "string",
                          "description": "SshKey is the ssh key of the user."
                        }
                      },
                      "description": "SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."
                    },
                    "host_keys": {
                      "description": "HostKeys contains options for providing a public key to verify the host.",
                      "type": "object",
                      "properties": {
                        "authorized_keys": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."
                        },
                        "known_hosts": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "KnownHosts are the host public keys in OpenSSH known_hosts format."
                        },
                        "public_key_pem": {
                          "type": "string",
                          "description": "PublicKeyPem is the servers public PEM key."
                        }
                      }
                    },
                    "gpg_public_key": {
                      "type": "string",
                      "description": "GpgPublicKey is the GPG public key to use in encrypting the data. Optional."
                    },
                    "default_push_overrides": {
                      "description": "DefaultPushOverrides contain the default push time values. Optional.",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Path is the path in the sftp server to export data to."
                        }
                      }
                    }
                  },
                  "description": "SftpConnector is the information required to define a destination pushing to a sftp server."
                },
                "gcs": {
                  "type": "object",
                  "properties": {
                    "bucket_name": {
                      "type": "string",
                      "description": "Bucket Name is the name of the GCS bucket."
                    },
                    "gcs_service_account_config": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type is the type of account e.g. service_account."
                        },
                        "project_id": {
                          "type": "string",
                          "description": "Project ID is the GCS project ID."
                        },
                        "private_key_id": {
                          "type": "string",
                          "description": "Private Key ID used to authenticate the service account."
                        },
                        "private_key": {
                          "type": "string",
                          "description": "Private Key is a PEM private key."
                        },
                        "client_email": {
                          "type": "string",
                          "description": "Client Email is the service account email."
                        },
                        "client_id": {
                          "type": "string",
                          "description": "Client ID is the user account ID."
                        },
                        "auth_uri": {
                          "type": "string",
                          "description": "Authentication URI is the oauth2 uri."
                        },
                        "token_uri": {
                          "type": "string",
                          "description": "Token URI is the oauth2 token."
                        },
                        "auth_provider_x509_cert_url": {
                          "type": "string",
                          "description": "Authentication Provider x509 Certificate URL is the oauth2 certificate."
                        },
                        "client_x509_cert_url": {
                          "type": "string",
                          "description": "Client x509 Certificate URL is the x509 metadata url containing the service account email."
                        }
                      },
                      "description": "GCSServiceAccountConfig credentials which are used for communicating with GCS."
                    },
                    "default_push_overrides": {
                      "description": "DefaultPushOverrides contain the default push time values. Optional.",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Path is the path in the sftp server to export data to."
                        }
                      }
                    }
                  },
                  "description": "GCSConnector is the information required to define a destination pushing to a sftp server."
                },
                "creator_id": {
                  "type": "string",
                  "description": "Output only. CreatorId is the ID of the user who created the destination.",
                  "readOnly": true
                },
                "created_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Output only. CreatedTime is the date and time the destination was created.",
                  "readOnly": true
                },
                "updated_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Output only. UpdatedTime is the date and time the destination was last updated.",
                  "readOnly": true
                },
                "connector_type": {
                  "description": "Output only. ConnectorType states the type of connector used by the destination.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "S3_ACCESS_KEYS",
                    "PUBMATIC",
                    "S3_CROSS_ACCOUNT",
                    "SFTP",
                    "GCS"
                  ],
                  "default": "S3_ACCESS_KEYS"
                }
              },
              "description": "Destination is the information required to define destinations."
            }
          },
          {
            "name": "update_mask",
            "description": "UpdateMask is a field mask, allowing partial resource update.\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Destinations"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/exports/destinations/{destination_id}": {
      "get": {
        "summary": "Get a Destination",
        "description": "Gets a specific Destination.",
        "operationId": "DestinationsGetDestination",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "destination": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Output only. ID is the globally unique ID of the destination.",
                      "readOnly": true
                    },
                    "owner_id": {
                      "type": "string",
                      "description": "Output only. OwnerId is the user or company ID of the owner of the destination.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name given to this destination."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional description given to this destination."
                    },
                    "s3": {
                      "type": "object",
                      "properties": {
                        "bucket_name": {
                          "type": "string",
                          "description": "BucketName is the name of the S3 Bucket."
                        },
                        "region": {
                          "description": "Region is the region of the S3 Bucket.",
                          "type": "string",
                          "enum": [
                            "UNKNOWN_REGION",
                            "US_EAST_1",
                            "US_EAST_2",
                            "US_WEST_1",
                            "US_WEST_2",
                            "CA_CENTRAL_1",
                            "EU_WEST_1",
                            "EU_WEST_2",
                            "EU_CENTRAL_1",
                            "AP_SOUTHEAST_1",
                            "AP_SOUTHEAST_2",
                            "AP_SOUTH_1",
                            "AP_NORTHEAST_1",
                            "AP_NORTHEAST_2",
                            "SA_EAST_1",
                            "CN_NORTH_1"
                          ],
                          "default": "UNKNOWN_REGION"
                        },
                        "default_push_overrides": {
                          "title": "DefaultPushOverrides",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "Path is the path in the s3 bucket to export data to."
                            }
                          },
                          "description": "S3Overrides are the values that can be overridden when pushing to s3."
                        },
                        "access_key": {
                          "type": "object",
                          "properties": {
                            "access_key_id": {
                              "type": "string",
                              "description": "AccessKeyId is the id of the access key to authenticate with AWS."
                            },
                            "secret": {
                              "type": "string",
                              "description": "Secret is the access key secret for authentication."
                            },
                            "session_token": {
                              "type": "string",
                              "description": "SessionToken is an optional STS session token.\nLeave blank if using an IAM User access key."
                            }
                          },
                          "description": "S3AccessKeyAuth holds the details needed for access key / secret authentication."
                        },
                        "cross_account": {
                          "type": "object",
                          "properties": {
                            "push_role_arn": {
                              "type": "string",
                              "description": "PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."
                            },
                            "session_name": {
                              "type": "string",
                              "description": "SessionName is the name of the IAM role session."
                            },
                            "external_id": {
                              "type": "string",
                              "description": "ExternalId is the aws ExternalId that must be set in your role's trust policy to enable cross account access. Output only.",
                              "readOnly": true
                            }
                          },
                          "description": "S3CrossAccount holds the details needed for cross account authentication."
                        }
                      },
                      "description": "S3Connector is the information required to define a destination using an S3 bucket."
                    },
                    "pubmatic": {
                      "type": "object",
                      "properties": {
                        "dpid": {
                          "type": "integer",
                          "format": "int32",
                          "description": "DPID is your PubMatic data partner ID."
                        }
                      },
                      "description": "PubmaticConnector is the information required to define a destination pushing to PubMatic."
                    },
                    "sftp": {
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "Host is the host address of the sftp server."
                        },
                        "port": {
                          "type": "integer",
                          "format": "int32",
                          "description": "port is the port number that gets used when connecting to the sftp server."
                        },
                        "password_config": {
                          "type": "object",
                          "properties": {
                            "username": {
                              "type": "string",
                              "description": "Username is the username of then user trying to connect to the sftp server."
                            },
                            "password": {
                              "type": "string",
                              "description": "Password is the password of the user."
                            }
                          },
                          "description": "SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."
                        },
                        "ssh_config": {
                          "type": "object",
                          "properties": {
                            "username": {
                              "type": "string",
                              "description": "Username is the username of then user trying to connect to the sftp server."
                            },
                            "ssh_key": {
                              "type": "string",
                              "description": "SshKey is the ssh key of the user."
                            }
                          },
                          "description": "SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."
                        },
                        "host_keys": {
                          "description": "HostKeys contains options for providing a public key to verify the host.",
                          "type": "object",
                          "properties": {
                            "authorized_keys": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."
                            },
                            "known_hosts": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "KnownHosts are the host public keys in OpenSSH known_hosts format."
                            },
                            "public_key_pem": {
                              "type": "string",
                              "description": "PublicKeyPem is the servers public PEM key."
                            }
                          }
                        },
                        "gpg_public_key": {
                          "type": "string",
                          "description": "GpgPublicKey is the GPG public key to use in encrypting the data. Optional."
                        },
                        "default_push_overrides": {
                          "description": "DefaultPushOverrides contain the default push time values. Optional.",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "Path is the path in the sftp server to export data to."
                            }
                          }
                        }
                      },
                      "description": "SftpConnector is the information required to define a destination pushing to a sftp server."
                    },
                    "gcs": {
                      "type": "object",
                      "properties": {
                        "bucket_name": {
                          "type": "string",
                          "description": "Bucket Name is the name of the GCS bucket."
                        },
                        "gcs_service_account_config": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type is the type of account e.g. service_account."
                            },
                            "project_id": {
                              "type": "string",
                              "description": "Project ID is the GCS project ID."
                            },
                            "private_key_id": {
                              "type": "string",
                              "description": "Private Key ID used to authenticate the service account."
                            },
                            "private_key": {
                              "type": "string",
                              "description": "Private Key is a PEM private key."
                            },
                            "client_email": {
                              "type": "string",
                              "description": "Client Email is the service account email."
                            },
                            "client_id": {
                              "type": "string",
                              "description": "Client ID is the user account ID."
                            },
                            "auth_uri": {
                              "type": "string",
                              "description": "Authentication URI is the oauth2 uri."
                            },
                            "token_uri": {
                              "type": "string",
                              "description": "Token URI is the oauth2 token."
                            },
                            "auth_provider_x509_cert_url": {
                              "type": "string",
                              "description": "Authentication Provider x509 Certificate URL is the oauth2 certificate."
                            },
                            "client_x509_cert_url": {
                              "type": "string",
                              "description": "Client x509 Certificate URL is the x509 metadata url containing the service account email."
                            }
                          },
                          "description": "GCSServiceAccountConfig credentials which are used for communicating with GCS."
                        },
                        "default_push_overrides": {
                          "description": "DefaultPushOverrides contain the default push time values. Optional.",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "Path is the path in the sftp server to export data to."
                            }
                          }
                        }
                      },
                      "description": "GCSConnector is the information required to define a destination pushing to a sftp server."
                    },
                    "creator_id": {
                      "type": "string",
                      "description": "Output only. CreatorId is the ID of the user who created the destination.",
                      "readOnly": true
                    },
                    "created_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedTime is the date and time the destination was created.",
                      "readOnly": true
                    },
                    "updated_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. UpdatedTime is the date and time the destination was last updated.",
                      "readOnly": true
                    },
                    "connector_type": {
                      "description": "Output only. ConnectorType states the type of connector used by the destination.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "S3_ACCESS_KEYS",
                        "PUBMATIC",
                        "S3_CROSS_ACCOUNT",
                        "SFTP",
                        "GCS"
                      ],
                      "default": "S3_ACCESS_KEYS"
                    }
                  },
                  "description": "Destination is the information required to define destinations."
                }
              },
              "description": "GetDestinationResponse is the output of the GetDestination method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the right to view Destinations.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Destination could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "destination_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Destinations"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Destination",
        "description": "Deletes a specific Destination.",
        "operationId": "DestinationsDeleteDestination",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the right to delete the Destination.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "destination_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Destinations"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/exports/execute": {
      "post": {
        "summary": "Push to a destination",
        "description": "Pushes a result into a destination.",
        "operationId": "DestinationsPushResults",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "push_id": {
                  "type": "string",
                  "description": "PushId is the unique identifier for the requested push."
                }
              },
              "description": "PushResultsResponse is the output of the PushResults request."
            }
          },
          "400": {
            "description": "Returned when the request is invalid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the right to push to the Destinations.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the destination, query or the dataset does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destination_id": {
                  "type": "string",
                  "description": "DestinationID is the unique identifier for destination."
                },
                "dataset_id": {
                  "type": "string",
                  "description": "DatasetId is the id of the dataset used for the query."
                },
                "activation_query_id": {
                  "type": "string",
                  "description": "ActivationQueryId is the id of the activation query."
                },
                "cohort_version": {
                  "type": "string",
                  "description": "CohortVersion is the version of the cohort to push."
                },
                "s3": {
                  "description": "S3 are the push time variable for the s3 connector type.",
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string",
                      "description": "Filename is the name used for file when pushing the results to a destination."
                    },
                    "overrides": {
                      "description": "Overrides contains the fields that can be overridden when pushing to s3.",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Path is the path in the s3 bucket to export data to."
                        }
                      }
                    }
                  }
                },
                "pubmatic": {
                  "description": "Pubmatic are the overrides for the PubMatic connector type.",
                  "type": "object",
                  "properties": {
                    "user_id_column": {
                      "type": "string",
                      "description": "UserIDColumn is the name of the output column you want mapping to PubMatic userid field."
                    },
                    "uid_type": {
                      "description": "UIDType is a value that determines what the identity partner's PubMatic user ID represents.",
                      "type": "string",
                      "enum": [
                        "COOKIE_ID",
                        "DEVICE_ID",
                        "BOUNCE_X",
                        "TTD",
                        "ID5",
                        "CRITEO_RTUS",
                        "IDENTITY_LINK",
                        "PUB_COMMON_ID",
                        "FIRST_PARTY_ID",
                        "LIVE_INTENT",
                        "BRITEPOOL",
                        "PARRABLE",
                        "CRITEO_ID",
                        "MERKLE_M1",
                        "TTD_UID",
                        "LOTAME_PANORAMA",
                        "QUANTCAST_ID",
                        "FABRICK_ID",
                        "NET_ID",
                        "ZEOTAP",
                        "SHARED_ID",
                        "NUID",
                        "IMUID"
                      ],
                      "default": "COOKIE_ID"
                    },
                    "country_code": {
                      "description": "CountryCode is the country code that the users belong to.",
                      "type": "string",
                      "enum": [
                        "US",
                        "AT",
                        "BE",
                        "CA",
                        "CN",
                        "CY",
                        "DK",
                        "EG",
                        "FJ",
                        "FI",
                        "FR",
                        "DE",
                        "GR",
                        "HK",
                        "HU",
                        "IS",
                        "IN",
                        "IE",
                        "IT",
                        "JP",
                        "LU",
                        "NL",
                        "NZ",
                        "NO",
                        "PL",
                        "PT",
                        "SG",
                        "ES",
                        "SE",
                        "CH",
                        "GB",
                        "AU"
                      ],
                      "default": "US"
                    },
                    "addseg": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Addseg is a  list of audiences to add users to."
                    }
                  }
                },
                "sftp": {
                  "description": "Sftp are the overrides for the sftp connector type.",
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string",
                      "description": "Filename is the name used for file when pushing the results to a destination."
                    },
                    "overrides": {
                      "description": "Overrides contains the fields that can be overridden when pushing to a sftp server.",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Path is the path in the sftp server to export data to."
                        }
                      }
                    }
                  }
                },
                "gcs": {
                  "description": "gcs are the overrides for the gcs connector type.",
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string",
                      "description": "Filename is the name used for file when pushing the results to a destination."
                    },
                    "gcs_sharding": {
                      "description": "GCS Sharding conatins file sharding configurations. Optional.",
                      "type": "object",
                      "properties": {
                        "suffix": {
                          "type": "string",
                          "description": "Suffix used when splitting large files (will be followed by the number of the file). Optional."
                        },
                        "sharding_size": {
                          "type": "string",
                          "description": "Sharding Size allows the user to select a Max file size in MB (if splitting large files). Optional - 1024 mb should be the default."
                        }
                      }
                    },
                    "overrides": {
                      "description": "Overrides contains the fields that can be overridden when pushing to a sftp server.",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Path is the path in the sftp server to export data to."
                        }
                      }
                    }
                  }
                }
              },
              "description": "PushResultsRequest is input to the PushResult request."
            }
          }
        ],
        "tags": [
          "Destinations"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/transforms/configs": {
      "get": {
        "summary": "List all transform configs.",
        "description": "List all transform configs",
        "operationId": "TransformServiceListTransformConfigs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "transform_configs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Output only. Id is the ID of the transform config.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Name is the display name of the transform config."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description is an optional decription given to the transform config."
                      },
                      "script": {
                        "type": "string",
                        "description": "Script is the transform script to be executed."
                      },
                      "cloud_vault_id": {
                        "type": "string",
                        "description": "CloudVaultId is the id of the Cloud Vault having source and destination file(s)."
                      },
                      "user_id": {
                        "type": "string",
                        "description": "Output only. UserId is the ID of the user who created the transform.",
                        "readOnly": true
                      },
                      "created_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Output only. CreatedDateTime is the creation date and time of the transform config.",
                        "readOnly": true
                      },
                      "updated_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Output only. UpdatedDateTime is the latest date and time the transform config was updated.",
                        "readOnly": true
                      },
                      "processing_speed": {
                        "type": "integer",
                        "format": "int64",
                        "description": "ProcessingSpeed effects how much processing speed a transformation will have when executed."
                      }
                    },
                    "description": "TransformConfig holds the information that can be retrieved for a transform config. Output only.",
                    "readOnly": true
                  },
                  "description": "Transforms is the list of requested transform configs."
                },
                "pagination": {
                  "description": "Pagination is the pagination details of the returned transform configs.",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Results is the count of the returned results."
                    },
                    "total_results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "TotalResults is the total number of results available."
                    },
                    "next_page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "NextPage is the next page to view."
                    }
                  }
                }
              },
              "description": "ListTransformConfigsResponse is the output from the ListTransformConfigs method."
            }
          },
          "400": {
            "description": "Returned when the ListTransformConfigs request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.page",
            "description": "Page is the page to view.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.per_page",
            "description": "PerPage is the number of items per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order_by",
            "description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter is a string containing logic that can specify a restricted set of Transform Configss to be returned.\ne.g. `name co 'Test' or name co 'Acme'`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "post": {
        "summary": "Create a transform config.",
        "description": "Create a transform config",
        "operationId": "TransformServiceCreateTransformConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "config_id": {
                  "type": "string"
                }
              },
              "title": "CreateTransformConfigResponse"
            }
          },
          "400": {
            "description": "Returned when the Transform Config was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "transform_config": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Output only. Id is the ID of the transform config.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name of the transform config."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional decription given to the transform config."
                    },
                    "script": {
                      "type": "string",
                      "description": "Script is the transform script to be executed."
                    },
                    "cloud_vault_id": {
                      "type": "string",
                      "description": "CloudVaultId is the id of the Cloud Vault having source and destination file(s)."
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Output only. UserId is the ID of the user who created the transform.",
                      "readOnly": true
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedDateTime is the creation date and time of the transform config.",
                      "readOnly": true
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. UpdatedDateTime is the latest date and time the transform config was updated.",
                      "readOnly": true
                    },
                    "processing_speed": {
                      "type": "integer",
                      "format": "int64",
                      "description": "ProcessingSpeed effects how much processing speed a transformation will have when executed."
                    }
                  },
                  "description": "TransformConfig holds the information that can be retrieved for a transform config. Output only.",
                  "readOnly": true
                }
              },
              "title": "CreateTransformConfigRequest"
            }
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/transforms/configs/{config.id}": {
      "patch": {
        "summary": "Update an Transform Config",
        "description": "Updates the provided fields in a specific Transform Config.",
        "operationId": "TransformServiceUpdateTransformConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Output only. Id is the ID of the transform config.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name of the transform config."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional decription given to the transform config."
                    },
                    "script": {
                      "type": "string",
                      "description": "Script is the transform script to be executed."
                    },
                    "cloud_vault_id": {
                      "type": "string",
                      "description": "CloudVaultId is the id of the Cloud Vault having source and destination file(s)."
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Output only. UserId is the ID of the user who created the transform.",
                      "readOnly": true
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedDateTime is the creation date and time of the transform config.",
                      "readOnly": true
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. UpdatedDateTime is the latest date and time the transform config was updated.",
                      "readOnly": true
                    },
                    "processing_speed": {
                      "type": "integer",
                      "format": "int64",
                      "description": "ProcessingSpeed effects how much processing speed a transformation will have when executed."
                    }
                  },
                  "description": "TransformConfig holds the information that can be retrieved for a transform config. Output only.",
                  "readOnly": true
                }
              },
              "description": "UpdateTransformConfigResponse is the output for the UpdateTransformConfig method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Transform Config could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "config.id",
            "description": "Output only. Id is the ID of the transform config.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "config",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name is the display name of the transform config."
                },
                "description": {
                  "type": "string",
                  "description": "Description is an optional decription given to the transform config."
                },
                "script": {
                  "type": "string",
                  "description": "Script is the transform script to be executed."
                },
                "cloud_vault_id": {
                  "type": "string",
                  "description": "CloudVaultId is the id of the Cloud Vault having source and destination file(s)."
                },
                "user_id": {
                  "type": "string",
                  "description": "Output only. UserId is the ID of the user who created the transform.",
                  "readOnly": true
                },
                "created_date_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Output only. CreatedDateTime is the creation date and time of the transform config.",
                  "readOnly": true
                },
                "updated_date_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Output only. UpdatedDateTime is the latest date and time the transform config was updated.",
                  "readOnly": true
                },
                "processing_speed": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ProcessingSpeed effects how much processing speed a transformation will have when executed."
                }
              },
              "description": "TransformConfig holds the information that can be retrieved for a transform config. Output only.",
              "readOnly": true
            }
          },
          {
            "name": "update_mask",
            "description": "UpdateMask is a field mask, allowing partial resource update.\nFor the `FieldMask` definition,\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/transforms/configs/{config_id}": {
      "get": {
        "summary": "Get a transform config.",
        "description": "Get a transform config",
        "operationId": "TransformServiceGetTransformConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "transform_config": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Output only. Id is the ID of the transform config.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the display name of the transform config."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description is an optional decription given to the transform config."
                    },
                    "script": {
                      "type": "string",
                      "description": "Script is the transform script to be executed."
                    },
                    "cloud_vault_id": {
                      "type": "string",
                      "description": "CloudVaultId is the id of the Cloud Vault having source and destination file(s)."
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Output only. UserId is the ID of the user who created the transform.",
                      "readOnly": true
                    },
                    "created_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. CreatedDateTime is the creation date and time of the transform config.",
                      "readOnly": true
                    },
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Output only. UpdatedDateTime is the latest date and time the transform config was updated.",
                      "readOnly": true
                    },
                    "processing_speed": {
                      "type": "integer",
                      "format": "int64",
                      "description": "ProcessingSpeed effects how much processing speed a transformation will have when executed."
                    }
                  },
                  "description": "TransformConfig holds the information that can be retrieved for a transform config. Output only.",
                  "readOnly": true
                }
              },
              "description": "GetTransformConfigResponse is the output to the GetTransformConfig method."
            }
          },
          "400": {
            "description": "Returned when the GetTransformConfig request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Transform Config could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Transform Config.",
        "description": "Deletes a specific Transform Config.",
        "operationId": "TransformServiceDeleteTransformConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "description": "DeleteTransformConfigResponse is the response from the DeleteTransfromConfig method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/transforms/configs/{config_id}/execute": {
      "post": {
        "summary": "Execute a Transform.",
        "description": "Start a transform using a transform config",
        "operationId": "TransformServiceExecuteTransformConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "execution_id": {
                  "type": "string"
                }
              },
              "description": "ExecuteTransformConfigResponse is the output of the ExecuteTransformConfig method."
            }
          },
          "400": {
            "description": "Returned when the Transform Config was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Transform Config could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/transforms/execute": {
      "post": {
        "summary": "Execute a Transform.",
        "description": "Start a transform using ephemeral compute instances to scale work horizontally",
        "operationId": "TransformServiceCreateScaledTransform",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "execution_id": {
                  "type": "string",
                  "description": "TransformId is the ID of the submitted transform."
                }
              },
              "description": "CreateScaledTransformResponse is the output from the CreateScaledTransform method."
            }
          },
          "400": {
            "description": "Returned when the Transform was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "script": {
                  "type": "string",
                  "description": "Script is the transform script to be executed."
                },
                "cloud_vault_id": {
                  "type": "string",
                  "description": "CloudVaultId is the id of the Cloud Vault having source and destination file(s)."
                },
                "processing_speed": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ProcessingSpeed is the amount of processing speed a transform has."
                }
              },
              "description": "CreateScaledTransformRequest is the input to the CreateScaledTransform method."
            }
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/transforms/executions": {
      "get": {
        "summary": "List all transforms.",
        "description": "List all transforms",
        "operationId": "TransformServiceListTransforms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "transforms": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id is the ID of the transform."
                      },
                      "current_status": {
                        "description": "CurrentStatus is the latest status of the transform aggregated from its constituent shards statuses.",
                        "type": "string",
                        "enum": [
                          "NO_STATUS",
                          "WAITING",
                          "INITIALIZING",
                          "RUNNING",
                          "FAILED",
                          "COMPLETED",
                          "CANCELING",
                          "CANCELED",
                          "STALE",
                          "PROVISIONING",
                          "PROVISIONED",
                          "PARTIALLY_COMPLETED"
                        ],
                        "default": "NO_STATUS"
                      },
                      "script": {
                        "type": "string",
                        "description": "Script is the transform script to be executed."
                      },
                      "cloud_vault_id": {
                        "type": "string",
                        "description": "CloudVaultId is the id of the Cloud Vault having source and destination file(s)."
                      },
                      "user_id": {
                        "type": "string",
                        "description": "UserId is the ID of the user who created the transform."
                      },
                      "created_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "CreatedDateTime is the creation date and time of the transform."
                      },
                      "updated_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "UpdatedDateTime is the latest date and time any transform shards were updated."
                      },
                      "progress": {
                        "description": "Progress holds the information of the progress of the transform as a whole.",
                        "type": "object",
                        "properties": {
                          "completion_percentage": {
                            "type": "number",
                            "format": "float",
                            "description": "CompletionPercentage is the current amount of data processed as a percentage."
                          }
                        }
                      },
                      "processing_speed": {
                        "type": "integer",
                        "format": "int64",
                        "description": "ProcessingSpeed is the amount of processing speed a transform has."
                      }
                    },
                    "description": "Transform holds global information about a transform."
                  },
                  "description": "Transforms is the list of requested transforms."
                },
                "pagination": {
                  "description": "Pagination is the pagination details of the returned transforms.",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Results is the count of the returned results."
                    },
                    "total_results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "TotalResults is the total number of results available."
                    },
                    "next_page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "NextPage is the next page to view."
                    }
                  }
                }
              },
              "description": "ListTransformsResponse is the output from the ListTransforms method."
            }
          },
          "400": {
            "description": "Returned when the ListTransforms request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.page",
            "description": "Page is the page to view.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.per_page",
            "description": "PerPage is the number of items per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order_by",
            "description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter is a string containing logic that can specify a restricted set of Transforms to be returned.\ne.g. `history.status co \"READY\"`.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/transforms/executions/{execution_id}": {
      "get": {
        "summary": "Get a transform.",
        "description": "Get a transform",
        "operationId": "TransformServiceGetTransform",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "transform_details": {
                  "description": "TransformDetails are details of the requested transform execution.",
                  "type": "object",
                  "properties": {
                    "transform": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Id is the ID of the transform."
                        },
                        "current_status": {
                          "description": "CurrentStatus is the latest status of the transform aggregated from its constituent shards statuses.",
                          "type": "string",
                          "enum": [
                            "NO_STATUS",
                            "WAITING",
                            "INITIALIZING",
                            "RUNNING",
                            "FAILED",
                            "COMPLETED",
                            "CANCELING",
                            "CANCELED",
                            "STALE",
                            "PROVISIONING",
                            "PROVISIONED",
                            "PARTIALLY_COMPLETED"
                          ],
                          "default": "NO_STATUS"
                        },
                        "script": {
                          "type": "string",
                          "description": "Script is the transform script to be executed."
                        },
                        "cloud_vault_id": {
                          "type": "string",
                          "description": "CloudVaultId is the id of the Cloud Vault having source and destination file(s)."
                        },
                        "user_id": {
                          "type": "string",
                          "description": "UserId is the ID of the user who created the transform."
                        },
                        "created_date_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "CreatedDateTime is the creation date and time of the transform."
                        },
                        "updated_date_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UpdatedDateTime is the latest date and time any transform shards were updated."
                        },
                        "progress": {
                          "description": "Progress holds the information of the progress of the transform as a whole.",
                          "type": "object",
                          "properties": {
                            "completion_percentage": {
                              "type": "number",
                              "format": "float",
                              "description": "CompletionPercentage is the current amount of data processed as a percentage."
                            }
                          }
                        },
                        "processing_speed": {
                          "type": "integer",
                          "format": "int64",
                          "description": "ProcessingSpeed is the amount of processing speed a transform has."
                        }
                      },
                      "description": "Transform holds global information about a transform."
                    },
                    "history": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Status is the status of the transform execution shard.",
                            "type": "string",
                            "enum": [
                              "NO_STATUS",
                              "WAITING",
                              "INITIALIZING",
                              "RUNNING",
                              "FAILED",
                              "COMPLETED",
                              "CANCELING",
                              "CANCELED",
                              "STALE",
                              "PROVISIONING",
                              "PROVISIONED",
                              "PARTIALLY_COMPLETED"
                            ],
                            "default": "NO_STATUS"
                          },
                          "date_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "DateTime is the created time of the shard."
                          },
                          "message": {
                            "type": "string",
                            "description": "Message is the reported message or error with status change."
                          }
                        },
                        "description": "History holds information about the status of a transform execution shard."
                      },
                      "description": "History is the status history of the transform execution."
                    }
                  }
                }
              },
              "description": "GetTransformResponse is the output from the GetTransform method."
            }
          },
          "400": {
            "description": "Returned when the GetTransform request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Transform could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "execution_id",
            "description": "TransformId is the id of the requested transform.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/transforms/executions/{execution_id}/cancel": {
      "post": {
        "summary": "Cancel a running transform.",
        "description": "Cancel a running transform",
        "operationId": "TransformServiceCancelTransform",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "description": "CancelTransformResponse is the response from the CancelTransform method."
            }
          },
          "400": {
            "description": "Returned when the CancelTransform request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Transform could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "execution_id",
            "description": "TransformId is the id of the transform to cancel all possible shards of.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/transforms/scripts/validate": {
      "post": {
        "summary": "Validate a Transform.",
        "description": "Validate a transform",
        "operationId": "TransformServiceValidateTransform",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "description": "ValidateTransformResponse is the output of the ValidateTransform method."
            }
          },
          "400": {
            "description": "Returned when the Transform Script was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "script": {
                  "type": "string",
                  "description": "Script is the transform script to be validated."
                }
              },
              "description": "ValidateTransformRequest is the input to the ValidateTransform method."
            }
          }
        ],
        "tags": [
          "TransformService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/files/{cloud_vault_id}": {
      "get": {
        "summary": "List files",
        "description": "List available files with any metadata",
        "operationId": "FilesServicelistFiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the file.",
                        "readOnly": true
                      },
                      "size": {
                        "type": "string",
                        "format": "int64",
                        "description": "The size of the file in bytes.",
                        "readOnly": true
                      },
                      "created_date_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The Cloud Vault timestamp for when this file was created.",
                        "readOnly": true
                      },
                      "metadata": {
                        "description": "The metadata associated with this file.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "updated_date_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which we most recently updated (or created) this Metadata.",
                            "readOnly": true
                          },
                          "origin": {
                            "description": "The details of the origin of the file.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "task_type": {
                                "type": "string",
                                "description": "The type of the task that caused this file to be created.",
                                "readOnly": true
                              },
                              "task_id": {
                                "type": "string",
                                "description": "The unique identifier of the task that caused this file to be created.",
                                "readOnly": true
                              },
                              "properties": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "A map of additional properties related to the creation of this file.",
                                "readOnly": true
                              }
                            }
                          },
                          "hidden": {
                            "type": "boolean",
                            "description": "A flag to indicate that this file is not shown by default."
                          },
                          "kind": {
                            "description": "The kind of record e.g folder, recordset or file",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "RESOURCE_KIND_UNSPECIFIED",
                              "RESOURCE_KIND_FILE",
                              "RESOURCE_KIND_FOLDER",
                              "RESOURCE_KIND_RECORDSET"
                            ],
                            "default": "RESOURCE_KIND_UNSPECIFIED"
                          }
                        }
                      }
                    },
                    "description": "File is the entity that is the combination of file attributes and file metadata."
                  },
                  "description": "Files are a list of data for files matching the list request."
                },
                "pagination": {
                  "description": "Pagination is the information on how the results were paginated.",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Results is the count of the returned results."
                    },
                    "total_results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "TotalResults is the total number of results available."
                    },
                    "next_page": {
                      "type": "integer",
                      "format": "int32",
                      "description": "NextPage is the next page to view."
                    }
                  }
                }
              },
              "description": "ListFilesResponse is the output of the List method."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "cloud_vault_id",
            "description": "CloudVaultId is the id of the Cloud Vault to list files from.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page",
            "description": "Page is the page to view.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.per_page",
            "description": "PerPage is the number of items per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order_by",
            "description": "OrderBy is a comma separated value to define sorting.\ne.g 'name,created_time DESC'.\nThe values are separated by space, '{column} {ASC/DESC}'.\nThese are the values that are sortable:\n  name\n  size\n  created_date_time (in RFC3339 format)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter is a string containing logic that can specify a restricted set of\nFiles to be returned. e.g. `name co 'Test' or name co 'Acme'`. These are\nthe supported fields for filtering:\n\nname\n  size\n  created_date_time                           (in RFC3339 format)\n  metadata.origin.task_type\n  metadata.origin.task_id\n  metadata.updated_date_time                  (in RFC3339 format)\n  metadata.hidden\n  metadata.origin.properties.{property_name}  (dynamic filtering based on the properties)",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "FilesService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "patch": {
        "summary": "Update or add metadata to multiple files in a Cloud Vault.",
        "description": "Update or add metadata to multiple files in a Cloud Vault.",
        "operationId": "FilesServiceupdateBulkFileMetadata",
        "responses": {
          "200": {
            "description": "Returned when the request is accepted",
            "schema": {
              "type": "object",
              "description": "UpdateBulkMetadataResponse is an empty response for the UpdateBulk request."
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "cloud_vault_id",
            "description": "The globally unique identifier for the Cloud Vault where the files to bulk apply metadata to are.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "update": {
                  "description": "The content of the update specifying the files to be updated and the metadata to apply to them.",
                  "type": "object",
                  "properties": {
                    "filenames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of the files in the Cloud Vault to bulk apply metadata to."
                    },
                    "metadata": {
                      "description": "The Metadata to apply to the listed files.",
                      "type": "object",
                      "properties": {
                        "updated_date_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time at which we most recently updated (or created) this Metadata.",
                          "readOnly": true
                        },
                        "origin": {
                          "description": "The details of the origin of the file.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "task_type": {
                              "type": "string",
                              "description": "The type of the task that caused this file to be created.",
                              "readOnly": true
                            },
                            "task_id": {
                              "type": "string",
                              "description": "The unique identifier of the task that caused this file to be created.",
                              "readOnly": true
                            },
                            "properties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "A map of additional properties related to the creation of this file.",
                              "readOnly": true
                            }
                          }
                        },
                        "hidden": {
                          "type": "boolean",
                          "description": "A flag to indicate that this file is not shown by default."
                        },
                        "kind": {
                          "description": "The kind of record e.g folder, recordset or file",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "RESOURCE_KIND_UNSPECIFIED",
                            "RESOURCE_KIND_FILE",
                            "RESOURCE_KIND_FOLDER",
                            "RESOURCE_KIND_RECORDSET"
                          ],
                          "default": "RESOURCE_KIND_UNSPECIFIED"
                        }
                      }
                    }
                  }
                },
                "update_mask": {
                  "type": "string",
                  "description": "The Update Mask used to update the correct metadata fields.",
                  "readOnly": true
                }
              },
              "description": "UpdateBulkMetadataRequest is the information provided when updating the metadata for multiple files"
            }
          }
        ],
        "tags": [
          "FilesService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    },
    "/api/v2/files/{cloud_vault_id}/{name}": {
      "get": {
        "summary": "Get information about a specific file",
        "description": "Gets information about a file along with any metadata",
        "operationId": "FilesServicegetFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the file.",
                  "readOnly": true
                },
                "size": {
                  "type": "string",
                  "format": "int64",
                  "description": "The size of the file in bytes.",
                  "readOnly": true
                },
                "created_date_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The Cloud Vault timestamp for when this file was created.",
                  "readOnly": true
                },
                "metadata": {
                  "description": "The metadata associated with this file.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which we most recently updated (or created) this Metadata.",
                      "readOnly": true
                    },
                    "origin": {
                      "description": "The details of the origin of the file.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "task_type": {
                          "type": "string",
                          "description": "The type of the task that caused this file to be created.",
                          "readOnly": true
                        },
                        "task_id": {
                          "type": "string",
                          "description": "The unique identifier of the task that caused this file to be created.",
                          "readOnly": true
                        },
                        "properties": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "A map of additional properties related to the creation of this file.",
                          "readOnly": true
                        }
                      }
                    },
                    "hidden": {
                      "type": "boolean",
                      "description": "A flag to indicate that this file is not shown by default."
                    },
                    "kind": {
                      "description": "The kind of record e.g folder, recordset or file",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "RESOURCE_KIND_UNSPECIFIED",
                        "RESOURCE_KIND_FILE",
                        "RESOURCE_KIND_FOLDER",
                        "RESOURCE_KIND_RECORDSET"
                      ],
                      "default": "RESOURCE_KIND_UNSPECIFIED"
                    }
                  }
                }
              },
              "description": "File is the entity that is the combination of file attributes and file metadata."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the File could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "cloud_vault_id",
            "description": "CloudVaultId is the id of the Cloud Vault where the file to get data about is\nstored.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name is the name of the file to get data about.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "tags": [
          "FilesService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "delete": {
        "summary": "Delete file",
        "description": "Delete the specified file",
        "operationId": "FilesServicedeleteFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "description": "DeleteFileResponse is an empty response for the Delete file request."
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "cloud_vault_id",
            "description": "The globally unique identifier for the Cloud Vault where the file to delete is.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the file to be deleted.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "tags": [
          "FilesService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      },
      "patch": {
        "summary": "Updates metadata for a file.",
        "description": "Updates the metadata for a file on a specific Cloud Vault.",
        "operationId": "FilesServiceupdateFileMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the file.",
                  "readOnly": true
                },
                "size": {
                  "type": "string",
                  "format": "int64",
                  "description": "The size of the file in bytes.",
                  "readOnly": true
                },
                "created_date_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The Cloud Vault timestamp for when this file was created.",
                  "readOnly": true
                },
                "metadata": {
                  "description": "The metadata associated with this file.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "updated_date_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which we most recently updated (or created) this Metadata.",
                      "readOnly": true
                    },
                    "origin": {
                      "description": "The details of the origin of the file.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "task_type": {
                          "type": "string",
                          "description": "The type of the task that caused this file to be created.",
                          "readOnly": true
                        },
                        "task_id": {
                          "type": "string",
                          "description": "The unique identifier of the task that caused this file to be created.",
                          "readOnly": true
                        },
                        "properties": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "A map of additional properties related to the creation of this file.",
                          "readOnly": true
                        }
                      }
                    },
                    "hidden": {
                      "type": "boolean",
                      "description": "A flag to indicate that this file is not shown by default."
                    },
                    "kind": {
                      "description": "The kind of record e.g folder, recordset or file",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "RESOURCE_KIND_UNSPECIFIED",
                        "RESOURCE_KIND_FILE",
                        "RESOURCE_KIND_FOLDER",
                        "RESOURCE_KIND_RECORDSET"
                      ],
                      "default": "RESOURCE_KIND_UNSPECIFIED"
                    }
                  }
                }
              },
              "description": "File is the entity that is the combination of file attributes and file metadata."
            }
          },
          "400": {
            "description": "Returned when the request was not valid.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the user could not be authorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "403": {
            "description": "Returned when the user does not have the required permission.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the Cloud Vault could not be found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message contains details about the error"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Metadata contains information that is used to flesh out the translated\nLocationisationId message"
                },
                "request_id": {
                  "type": "string",
                  "title": "RequestId is a unique ID for the request"
                },
                "error_code": {
                  "title": "ErrorCode is an error code which can be translated into an error message in\nthe user's language",
                  "type": "string",
                  "enum": [
                    "INTERNAL",
                    "UNAUTHENTICATED",
                    "ACCOUNTS_REQUIRE_FEATURE_FLAG",
                    "ACCOUNTS_REQUIRE_COMPANY_RIGHT",
                    "MISSING_REQUIRED_FIELD",
                    "ACCOUNTS_REQUIRE_COMPANY",
                    "EMPTY_PAYLOAD",
                    "ACTIVATION_QUERY_NOT_FOUND",
                    "COHORT_VERSION_NOT_FOUND",
                    "DATASET_NOT_FOUND",
                    "UNIMPLEMENTED",
                    "INVALID_ARGUMENT",
                    "DESTINATIONS_NOT_FOUND",
                    "DESTINATIONS_INVALID_CONNECTOR",
                    "DESTINATION_UNKNOWN_AUTH_TYPE",
                    "DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "DESTINATIONS_INVALID_PAGINATION_INPUT",
                    "DESTINATIONS_ALREADY_EXISTS",
                    "ICC_INVALID_ARGUMENT",
                    "ICC_MALFORMED_INPUT",
                    "ICC_NOT_FOUND",
                    "ICC_PERMISSION_DENIED",
                    "ICC_UNIQUE_NAME_VIOLATION",
                    "ICC_IN_USE_CANNOT_BE_DELETED",
                    "ICC_ID_MUST_BE_EMPTY",
                    "ICC_CANNOT_BE_UPDATED",
                    "TRANSFORM_FAILED",
                    "TRANSFORM_INVALID",
                    "TRANSFORM_FAILED_WRITE",
                    "TRANSFORM_EXCEEDED_ROW_ERRORS",
                    "TRANSFORM_NOT_FOUND",
                    "TRANSFORM_ALREADY_EXIST",
                    "TRANSFORM_NO_FILES_IN_CLOUD_VAULT",
                    "IMPORTS_ID_MUST_BE_EMPTY",
                    "IMPORTS_UNIQUE_NAME_VIOLATION",
                    "IMPORTS_NOT_FOUND",
                    "IMPORTS_EXECUTION_BUNKER_NOT_FOUND",
                    "IMPORTS_CANNOT_CANCEL_TASK",
                    "IMPORTS_EXECUTION_TASK_NOT_FOUND",
                    "IMPORTS_CANNOT_BE_DELETED",
                    "IMPORTS_CANNOT_BE_UPDATED",
                    "UNSUPPORTED_FILTER_FIELD_NAME",
                    "UNSUPPORTED_ORDER_BY_FIELD_NAME",
                    "INVALID_FILTER_INPUT",
                    "INVALID_UPDATE_MASK_FIELD_NAME",
                    "API_MALFORMED_INPUT",
                    "INVALID_INPUT_VALUE",
                    "BAD_PAGE_SIZE",
                    "FILE_METADATA_NOT_FOUND",
                    "FILE_METADATA_IN_USE",
                    "FILE_METADATA_DELETED",
                    "FILE_METADATA_ALREADY_STRUCTURED",
                    "FILE_NOT_FOUND",
                    "FILE_INVALID_REGION",
                    "TASK_NOT_FOUND",
                    "TASK_CANNOT_CANCEL",
                    "CLOUD_VAULT_NOT_FOUND",
                    "CLOUD_VAULT_IN_USE",
                    "BUNKER_NOT_FOUND",
                    "EXPORT_FAILED",
                    "EXPORT_FILE_EXISTS",
                    "EXPORT_TIMEOUT",
                    "EXPORT_S3_ERROR",
                    "EXPORT_S3_INVALID_ARGUMENT",
                    "EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS",
                    "EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT",
                    "EXPORT_S3_BUCKET_PUBLIC",
                    "EXPORT_TRADE_DESK_ERROR",
                    "EXPORT_TRADE_DESK_INVALID_ID",
                    "EXPORT_TRADE_DESK_INVALID_SECRET",
                    "EXPORT_SFTP_ERROR",
                    "EXPORT_SFTP_INVALID_CREDENTIALS",
                    "EXPORT_SFTP_INVALID_SSH_KEY",
                    "EXPORT_SFTP_CREATE_DIRECTORY_ERROR",
                    "EXPORT_SFTP_CREATE_FILE_ERROR",
                    "EXPORT_SFTP_NO_SUCH_HOST",
                    "EXPORT_SFTP_CONNECTION_REFUSED",
                    "EXPORT_GCS_ERROR",
                    "EXPORT_PUBMATIC_ERROR",
                    "EXPORT_PUBMATIC_PARTIAL_ERROR",
                    "EXPORT_PUBMATIC_UNREGISTERED_SEG",
                    "EXPORT_PUBMATIC_DPID_NOT_SUPPORTED",
                    "NORMALIZATIONS_CONFIG_NOT_FOUND",
                    "NORMALIZATIONS_TASK_NOT_FOUND",
                    "NORMALIZATIONS_CANNOT_CANCEL_TASK",
                    "NORMALIZATIONS_NO_INPUT_FILES"
                  ],
                  "default": "INTERNAL",
                  "description": "ErrorCode list possible api error codes.\n\n - INTERNAL: INTERNAL is used when no other error applies.\n - UNAUTHENTICATED: General errors\nUNAUTHENTICATED is used when the user is not authenticated.\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn't have the\nrequired feature flag enabled.\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn't have\nthe required RIGHT to perform the request. The required right should be\nincluded in the error metadata as \"required_right\"\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\nrequest. The name of the required field should be included in error\nmetadata as \"required_field\".\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\npart of a company\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\nfound.\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\nfound.\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\nThe name of the invalid field should be included in error metadata as\n\"invalid_field\". The reason why of the field is invalid should be included\nin error metadata as \"validation_message\".\n - DESTINATIONS_NOT_FOUND: Destination errors\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\nprovided for destinations.\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\ntype is provided for a destination.\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\nunsupported field name is provided to sort the results by. The name of the\nunsupported field should be included in error metadata as\n\"unsupported_field\".\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\npagination input is provided for listing.\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\ndestination that doesn't conform to the unique constraints.\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\nwhich the user has no access to\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an ICC with a duplicate name.\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\nICC while it's in use by an Import.\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\nnew ICC.\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\nthat cannot be updated. The details of the error should be included in\nerror metadata as \"error_details\".\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\nmapping\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\ntransformed row not matching the target output schema\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\na valid row to the output target\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\ndue to exceeding the maximum number of row errors permitted\n - TRANSFORM_NOT_FOUND: TRANSFORM_NOT_FOUND is returned when a transform config is not found\n - TRANSFORM_ALREADY_EXIST: TRANSFORM_ALREADY_EXIST is returned when a transform config already exists\n - TRANSFORM_NO_FILES_IN_CLOUD_VAULT: TRANSFORM_NO_FILES_IN_CLOUD_VAULT  is returned when a request for a Transformation\nfinds no files to process in Cloud Vault\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\ncreating a new Import.\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\nupdate an Import with a duplicate name.\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\nan Import is not found for a given user or team.\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\nis not found\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\nImport that cannot be deleted. The details of the error should be included\nin error metadata as \"error_details\".\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\nImport that cannot be updated. The details of the error should be included\nin error metadata as \"error_details\".\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\nthe result by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\nthe results by an unsupported field name. The name of the unsupported field\nshould be included in error metadata as \"field_name\".\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\nnot valid and can't be parsed. The details of the error should be included\nin error metadata as \"error_details\".\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\nan immutable/invalid field. The immutable/invalid field should be included\nin error metadata as \"field_name\".\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\na request. The details of the error should be included in error metadata as\n\"error_details\".\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\nfield. The details of the error should be included in error metadata as\n\"error_details\".\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\none that is not supported by the service\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\ncannot be found.\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\nfile metadata record.\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\nfile metadata record.\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\nattempted on a structured file metadata record.\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\n - FILE_INVALID_REGION: TASK_NOT_FOUND is returned when the task get request cannot be found.\n - TASK_NOT_FOUND: FILE_INVALID_REGION is returned when file operations ocurr on an unsupported region.\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - CLOUD_VAULT_NOT_FOUND: CLOUD_VAULT_NOT_FOUND is returned when the Cloud Vault cannot be found for the\nrequest.\n - CLOUD_VAULT_IN_USE: CLOUD_VAULT_IN_USE is returned when a deletion for a Cloud Vault that is\nassociated with a bunker has been requested.\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\nrequest.\n - EXPORT_FAILED: EXPORT errors\nEXPORT_FAILED is returned when an export fails.\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\ndestination already exists.\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\nThe aws error message should be included in error metadata as\n\"aws_error_message\".\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\ninvalid argument.\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\nand access to s3 bucket is denied.\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\naccount and access to s3 bucket is denied. The infosum aws role arn should\nbe included in error metadata as \"aws_role_arn\".\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\nfails due to the advertiser id not configured to accept data.\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\ndesk due to advertiser secret key being incorrect.\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\nusername/password is invalid.\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\ncreated directories.\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can't be found.\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\nfails.\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\nsent to pubmatic. The percentage of successful requests sent to pubmatic\nshould be included in error metadata as \"success_rate\".\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\nrequest are unregistered.\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\nnot supported.\n - NORMALIZATIONS_CONFIG_NOT_FOUND: NORMALIZATIONS_CONFIG_NOT_FOUND is returned when the provided\nnormalization configId cannot be found.\n - NORMALIZATIONS_TASK_NOT_FOUND: NORMALIZATIONS_NOT_FOUND is returned when the provided\nnormalizationId cannot be found.\n - NORMALIZATIONS_CANNOT_CANCEL_TASK: NORMALIZATIONS_CANNOT_CANCEL_TASK is returned when a task cannot be cancelled.\nThe details of the error should be included in error metadata as\n\"error_details\".\n - NORMALIZATIONS_NO_INPUT_FILES: NORMALIZATIONS_NO_INPUT_FILES is returned when the input files argument\ncannot produce a file from the specified Cloud Vault."
                },
                "translated_error": {
                  "type": "string",
                  "title": "TranslatedError is the english translation of the ErrorCode"
                }
              },
              "description": "An error with an explanation.",
              "title": "Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "cloud_vault_id",
            "description": "The globally unique identifier for the Cloud Vault where the file to delete is.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the file to be deleted.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "metadata",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The Metadata to apply to the file.",
              "type": "object",
              "properties": {
                "updated_date_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which we most recently updated (or created) this Metadata.",
                  "readOnly": true
                },
                "origin": {
                  "description": "The details of the origin of the file.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "task_type": {
                      "type": "string",
                      "description": "The type of the task that caused this file to be created.",
                      "readOnly": true
                    },
                    "task_id": {
                      "type": "string",
                      "description": "The unique identifier of the task that caused this file to be created.",
                      "readOnly": true
                    },
                    "properties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "A map of additional properties related to the creation of this file.",
                      "readOnly": true
                    }
                  }
                },
                "hidden": {
                  "type": "boolean",
                  "description": "A flag to indicate that this file is not shown by default."
                },
                "kind": {
                  "description": "The kind of record e.g folder, recordset or file",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "RESOURCE_KIND_UNSPECIFIED",
                    "RESOURCE_KIND_FILE",
                    "RESOURCE_KIND_FOLDER",
                    "RESOURCE_KIND_RECORDSET"
                  ],
                  "default": "RESOURCE_KIND_UNSPECIFIED"
                }
              }
            }
          },
          {
            "name": "update_mask",
            "description": "The Update Mask used to update the correct metadata fields.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "FilesService"
        ],
        "security": [
          {
            "API Keys": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "API Keys": {
      "type": "apiKey",
      "description": "Your API key.",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "CloudVaults",
      "description": "Create and manage Cloud Vaults which allow the storage of raw data."
    },
    {
      "name": "ImportConnectorConfigs",
      "description": "Define templates for the importing of data from various remote systems into the InfoSum platform."
    },
    {
      "name": "Imports",
      "description": "Create, Run and Manage import tasks; which are used to import data from a 3rd party system into a Cloud Vault."
    },
    {
      "name": "Destinations",
      "description": "Define how and where to send data when it is exported from the InfoSum platform."
    },
    {
      "name": "TransformService",
      "description": "Run transformation scripts against data stored in a Cloud Vault."
    },
    {
      "name": "FilesService",
      "description": "List, Delete and Manage metadata about files within a Cloud Vault."
    }
  ]
}