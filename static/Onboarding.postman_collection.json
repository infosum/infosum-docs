{
	"info": {
		"_postman_id": "d273c8a3-7c6b-44b8-b8e1-582789eaa812",
		"name": "Onboarding Guide",
		"description": "This page contains the documentation for the InfoSum Developer API. The methods allow you to try making requests and inspect the input and output formats.\n\nContact Support:\n Name: InfoSum Support\n Email: support@infosum.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38314644"
	},
	"item": [
		{
			"name": "1. Get a Cloud Vault.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status is AVAILABLE\", function () {var response = pm.response.json();\r",
							"pm.expect(response.cloud_vault.status).to.equal(\"AVAILABLE\");});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/cloud_vaults/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"cloud_vaults",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cloudVaultId (CLV)}}",
							"description": "(Required)"
						}
					]
				},
				"description": "Get the details of a specific Cloud Vault."
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud_vaults/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud_vaults",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"cloud_vault\": {\n    \"created_by\": \"<string>\",\n    \"created_date_time\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"owner_id\": \"<string>\",\n    \"region\": \"UNKNOWN\",\n    \"updated_date_time\": \"<dateTime>\"\n  }\n}"
				},
				{
					"name": "Returned when the request was not valid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud_vaults/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud_vaults",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud_vaults/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud_vaults",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud_vaults/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud_vaults",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the Cloud Vault could not be found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud_vaults/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud_vaults",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud_vaults/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud_vaults",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/cloud_vaults/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"cloud_vaults",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "2. Execute Import",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"ImportExecutionID (IMT)\", pm.response.json().execution_id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/imports/importers/:importID/execute",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"imports",
						"importers",
						":importID",
						"execute"
					],
					"variable": [
						{
							"key": "importID",
							"value": "{{ImportID (IMP)}}"
						}
					]
				},
				"description": "Executes an import for the specified import ID."
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/importers/:import_id/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"importers",
								":import_id",
								"execute"
							],
							"variable": [
								{
									"key": "import_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"execution_id\": \"<string>\"\n}"
				},
				{
					"name": "Returned when the request was not valid.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/importers/:import_id/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"importers",
								":import_id",
								"execute"
							],
							"variable": [
								{
									"key": "import_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/importers/:import_id/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"importers",
								":import_id",
								"execute"
							],
							"variable": [
								{
									"key": "import_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/importers/:import_id/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"importers",
								":import_id",
								"execute"
							],
							"variable": [
								{
									"key": "import_id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the Importer could not be found.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/importers/:import_id/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"importers",
								":import_id",
								"execute"
							],
							"variable": [
								{
									"key": "import_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/importers/:import_id/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"importers",
								":import_id",
								"execute"
							],
							"variable": [
								{
									"key": "import_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/importers/:import_id/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"importers",
								":import_id",
								"execute"
							],
							"variable": [
								{
									"key": "import_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "3. Gets Import Execution",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// \"current_status\" == \"COMPLETED\" & \"history\".\"message\" == \"Import finished. Successfully imported * out of * files.\"\r",
							"\r",
							"// Fixed the syntax error by using double quotes for property access\r",
							"pm.test(\"current_status is COMPLETED and history message is Import finished\", function () {    pm.expect(pm.response.json().execution_details.execution.current_status).to.equal(\"COMPLETED\");    pm.expect(pm.response.json().execution_details.history[0].message).to.include(\"Import finished\");});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/imports/executions/:execution_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"imports",
						"executions",
						":execution_id"
					],
					"variable": [
						{
							"key": "execution_id",
							"value": "{{ImportExecutionID (IMT)}}",
							"description": "(Required) The ID of the Import execution task to retrieve."
						}
					]
				},
				"description": "Gets a specific import execution."
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"execution_details\": {\n    \"execution\": {\n      \"cloud_vault_id\": \"<string>\",\n      \"created_date_time\": \"<dateTime>\",\n      \"current_status\": \"NO_STATUS\",\n      \"id\": \"<string>\",\n      \"import_id\": \"<string>\",\n      \"progress\": {\n        \"completion_percentage\": \"<float>\",\n        \"speed\": \"<int64>\",\n        \"total_bytes\": \"<int64>\",\n        \"transferred_bytes\": \"<int64>\"\n      },\n      \"updated_date_time\": \"<dateTime>\",\n      \"user_id\": \"<string>\"\n    },\n    \"history\": [\n      {\n        \"date_time\": \"<dateTime>\",\n        \"error\": {\n          \"details\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"error\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"help_url\": \"<string>\",\n          \"request_id\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"message\": \"<string>\",\n        \"status\": \"NO_STATUS\"\n      },\n      {\n        \"date_time\": \"<dateTime>\",\n        \"error\": {\n          \"details\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"error\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"help_url\": \"<string>\",\n          \"request_id\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"message\": \"<string>\",\n        \"status\": \"NO_STATUS\"\n      }\n    ]\n  }\n}"
				},
				{
					"name": "Returned when the request was not valid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the Execution could not be found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/imports/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"imports",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "4. Create a Recordset.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"recordSetExecutionID (MRC)\", pm.response.json().execution_id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"cloud_vault_id\": \"{{cloudVaultId (CLV)}}\",\n  \"recordset_name\": \"APIPlaybook1212\",\n  \"config_id\": \"{{recordSetConfigID (RSC 1)}}\",\n  \"filepaths\": [\"APIPlaybookv2.csv\"]\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v2/recordset-creation/execute",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"recordset-creation",
						"execute"
					]
				},
				"description": "Create a recordset from files on a cloud vault. Valid characters for recordset names: alphanumeric, '_', '-', ' '."
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"recordset_name\": \"<string>\",\n  \"config_id\": \"<string>\",\n  \"execution_config\": {\n    \"file_type\": \"AUTO\",\n    \"header_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"header_row\": \"<boolean>\",\n    \"primary_delimiter\": \"<string>\",\n    \"secondary_delimiter\": \"<string>\"\n  },\n  \"filepaths\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"execution_id\": \"<string>\"\n}"
				},
				{
					"name": "Returned when the request was not valid.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"recordset_name\": \"<string>\",\n  \"config_id\": \"<string>\",\n  \"execution_config\": {\n    \"file_type\": \"AUTO\",\n    \"header_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"header_row\": \"<boolean>\",\n    \"primary_delimiter\": \"<string>\",\n    \"secondary_delimiter\": \"<string>\"\n  },\n  \"filepaths\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"execute"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"recordset_name\": \"<string>\",\n  \"config_id\": \"<string>\",\n  \"execution_config\": {\n    \"file_type\": \"AUTO\",\n    \"header_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"header_row\": \"<boolean>\",\n    \"primary_delimiter\": \"<string>\",\n    \"secondary_delimiter\": \"<string>\"\n  },\n  \"filepaths\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"execute"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"recordset_name\": \"<string>\",\n  \"config_id\": \"<string>\",\n  \"execution_config\": {\n    \"file_type\": \"AUTO\",\n    \"header_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"header_row\": \"<boolean>\",\n    \"primary_delimiter\": \"<string>\",\n    \"secondary_delimiter\": \"<string>\"\n  },\n  \"filepaths\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"execute"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when a resource is not found.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"recordset_name\": \"<string>\",\n  \"config_id\": \"<string>\",\n  \"execution_config\": {\n    \"file_type\": \"AUTO\",\n    \"header_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"header_row\": \"<boolean>\",\n    \"primary_delimiter\": \"<string>\",\n    \"secondary_delimiter\": \"<string>\"\n  },\n  \"filepaths\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"execute"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when a recordset with the same name already exists.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"recordset_name\": \"<string>\",\n  \"config_id\": \"<string>\",\n  \"execution_config\": {\n    \"file_type\": \"AUTO\",\n    \"header_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"header_row\": \"<boolean>\",\n    \"primary_delimiter\": \"<string>\",\n    \"secondary_delimiter\": \"<string>\"\n  },\n  \"filepaths\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"execute"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"recordset_name\": \"<string>\",\n  \"config_id\": \"<string>\",\n  \"execution_config\": {\n    \"file_type\": \"AUTO\",\n    \"header_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"header_row\": \"<boolean>\",\n    \"primary_delimiter\": \"<string>\",\n    \"secondary_delimiter\": \"<string>\"\n  },\n  \"filepaths\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"execute"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"recordset_name\": \"<string>\",\n  \"config_id\": \"<string>\",\n  \"execution_config\": {\n    \"file_type\": \"AUTO\",\n    \"header_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"header_row\": \"<boolean>\",\n    \"primary_delimiter\": \"<string>\",\n    \"secondary_delimiter\": \"<string>\"\n  },\n  \"filepaths\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"execute"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "5. Get a Recordset Execution.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// \"current_status\" == \"COMPLETED\" & \"history\".\"message\" == \"Import finished. Successfully imported * out of * files.\"\r",
							"\r",
							"// Fixed the syntax error by using double quotes for property access\r",
							"pm.test(\"current_status is COMPLETED\", function () {    pm.expect(pm.response.json().execution_details.current_status).to.equal(\"COMPLETED\");});\r",
							"pm.collectionVariables.unset(\"recordSetID (RSC 2)\");\r",
							"pm.collectionVariables.set(\"recordSetID (RSC 2)\", pm.response.json().execution_details.recordset_id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/recordset-creation/executions/:execution_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"recordset-creation",
						"executions",
						":execution_id"
					],
					"variable": [
						{
							"key": "execution_id",
							"value": "{{recordSetExecutionID (MRC)}}",
							"description": "(Required) The ID of the execution to get."
						}
					]
				},
				"description": "Get the details of a specific recordset execution."
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"execution_details\": {\n    \"cloud_vault_id\": \"<string>\",\n    \"config_id\": \"<string>\",\n    \"created_date_time\": \"<dateTime>\",\n    \"current_status\": \"NO_STATUS\",\n    \"execution_config\": {\n      \"file_type\": \"AUTO\",\n      \"header_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"header_row\": \"<boolean>\",\n      \"primary_delimiter\": \"<string>\",\n      \"secondary_delimiter\": \"<string>\"\n    },\n    \"filepaths\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"history\": [\n      {\n        \"date_time\": \"<dateTime>\",\n        \"error\": {\n          \"details\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"error\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"help_url\": \"<string>\",\n          \"request_id\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"message\": \"<string>\",\n        \"status\": \"NO_STATUS\"\n      },\n      {\n        \"date_time\": \"<dateTime>\",\n        \"error\": {\n          \"details\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"error\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"help_url\": \"<string>\",\n          \"request_id\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"message\": \"<string>\",\n        \"status\": \"NO_STATUS\"\n      }\n    ],\n    \"id\": \"<string>\",\n    \"progress\": {\n      \"completion_percentage\": \"<float>\",\n      \"lines_processed\": \"<int64>\",\n      \"malformed_lines\": \"<int64>\",\n      \"total_lines\": \"<int64>\"\n    },\n    \"recordset_id\": \"<string>\",\n    \"recordset_name\": \"<string>\",\n    \"updated_date_time\": \"<dateTime>\",\n    \"user_id\": \"<string>\"\n  }\n}"
				},
				{
					"name": "Returned when the request was not valid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the recordset execution could not be found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/recordset-creation/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"recordset-creation",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "6. List company Normalization Configurations.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"normalizationConfigID (NMC)\", jsonData.configs[0].id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/normalizations/configs?filter=name eq {{normalization config name}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"normalizations",
						"configs"
					],
					"query": [
						{
							"key": "pagination.page",
							"value": "<integer>",
							"description": "The requested page of records. Default is 1.",
							"disabled": true
						},
						{
							"key": "pagination.per_page",
							"value": "<integer>",
							"description": "The number of records to return per page. Maximum is 500. Default is 100.",
							"disabled": true
						},
						{
							"key": "order_by",
							"value": "<string>",
							"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)",
							"disabled": true
						},
						{
							"key": "filter",
							"value": "name eq {{normalization config name}}",
							"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
						}
					]
				},
				"description": "List company normalization configurations"
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"configs\": [\n    {\n      \"created_date_time\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_date_time\": \"<dateTime>\"\n    },\n    {\n      \"created_date_time\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_date_time\": \"<dateTime>\"\n    }\n  ],\n  \"pagination\": {\n    \"next_page\": \"<integer>\",\n    \"results\": \"<integer>\",\n    \"total_results\": \"<integer>\"\n  }\n}"
				},
				{
					"name": "Returned when the ListConfigs request was not valid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "7. Start a Normalization.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"normalizationExecutionID (NMZ)\", pm.response.json().execution_id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"cloud_vault_id\": \"{{cloudVaultId (CLV)}}\",\n  \"input_recordset_id\": \"{{recordSetID (RSC 2)}}\",\n  \"normalization_config_id\": \"{{normalizationConfigID (NMC)}}\",\n  \"output_recordset_name\": \"APIPlaybook1211Normalv2\",\n  \"processing_speed\": 1\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v2/normalizations/execute",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"normalizations",
						"execute"
					]
				},
				"description": "Start a normalization"
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"input_recordset_id\": \"<string>\",\n  \"normalization_config_id\": \"<string>\",\n  \"output_recordset_name\": \"<string>\",\n  \"processing_speed\": \"<long>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"execution_id\": \"<string>\"\n}"
				},
				{
					"name": "Returned when the Normalize request was not valid.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"input_recordset_id\": \"<string>\",\n  \"normalization_config_id\": \"<string>\",\n  \"output_recordset_name\": \"<string>\",\n  \"processing_speed\": \"<long>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"execute"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"input_recordset_id\": \"<string>\",\n  \"normalization_config_id\": \"<string>\",\n  \"output_recordset_name\": \"<string>\",\n  \"processing_speed\": \"<long>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"execute"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"input_recordset_id\": \"<string>\",\n  \"normalization_config_id\": \"<string>\",\n  \"output_recordset_name\": \"<string>\",\n  \"processing_speed\": \"<long>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"execute"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when an Normalize request with the same prefix already exists.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"input_recordset_id\": \"<string>\",\n  \"normalization_config_id\": \"<string>\",\n  \"output_recordset_name\": \"<string>\",\n  \"processing_speed\": \"<long>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"execute"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"input_recordset_id\": \"<string>\",\n  \"normalization_config_id\": \"<string>\",\n  \"output_recordset_name\": \"<string>\",\n  \"processing_speed\": \"<long>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"execute"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"input_recordset_id\": \"<string>\",\n  \"normalization_config_id\": \"<string>\",\n  \"output_recordset_name\": \"<string>\",\n  \"processing_speed\": \"<long>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"execute"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "8. Get a Normalization.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// \"current_status\": \"COMPLETED\", \"message\": \"Normalization is completed\",\r",
							"pm.collectionVariables.set(\"normalizedRecordSetID (RCS 3)\", pm.response.json().normalization_details.normalization.output_recordset_id);\r",
							"pm.test(\"current_status is COMPLETED\", function () {    pm.expect(pm.response.json().normalization_details.normalization.current_status).to.equal(\"COMPLETED\");});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/normalizations/executions/:execution_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"normalizations",
						"executions",
						":execution_id"
					],
					"variable": [
						{
							"key": "execution_id",
							"value": "{{normalizationExecutionID (NMZ)}}",
							"description": "(Required) NormalizationID is the ID of the normalization."
						}
					]
				},
				"description": "Get a normalization"
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"normalization_details\": {\n    \"history\": [\n      {\n        \"date_time\": \"<dateTime>\",\n        \"error\": {\n          \"details\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"error\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"help_url\": \"<string>\",\n          \"request_id\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"message\": \"<string>\",\n        \"status\": \"NO_STATUS\"\n      },\n      {\n        \"date_time\": \"<dateTime>\",\n        \"error\": {\n          \"details\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"error\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"help_url\": \"<string>\",\n          \"request_id\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"message\": \"<string>\",\n        \"status\": \"NO_STATUS\"\n      }\n    ],\n    \"normalization\": {\n      \"cloud_vault_id\": \"<string>\",\n      \"config_id\": \"<string>\",\n      \"created_date_time\": \"<dateTime>\",\n      \"current_status\": \"NO_STATUS\",\n      \"id\": \"<string>\",\n      \"input_recordset_id\": \"<string>\",\n      \"output_recordset_id\": \"<string>\",\n      \"output_recordset_name\": \"<string>\",\n      \"processing_speed\": \"<long>\",\n      \"progress\": {\n        \"completion_percentage\": \"<float>\"\n      },\n      \"updated_date_time\": \"<dateTime>\",\n      \"user_id\": \"<string>\"\n    }\n  }\n}"
				},
				{
					"name": "Returned when the GetNormalization request was not valid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the Normalization ID isn't found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/normalizations/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"normalizations",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "9. List company Dataset Prepare Configurations.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"prepareConfigID (DPC)\", pm.response.json().configs.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/dataset-prepare-configs?filter=name eq '{{dataset prepare config name}}'",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"dataset-prepare-configs"
					],
					"query": [
						{
							"key": "pagination.page",
							"value": "<integer>",
							"description": "The requested page of records. Default is 1.",
							"disabled": true
						},
						{
							"key": "pagination.per_page",
							"value": "<integer>",
							"description": "The number of records to return per page. Maximum is 500. Default is 100.",
							"disabled": true
						},
						{
							"key": "order_by",
							"value": "<string>",
							"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)",
							"disabled": true
						},
						{
							"key": "filter",
							"value": "name eq '{{dataset prepare config name}}'",
							"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
						}
					]
				},
				"description": "List company dataset prepare configurations"
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/dataset-prepare-configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dataset-prepare-configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"configs\": [\n    {\n      \"created_date_time\": \"<dateTime>\",\n      \"dataset_publish_config_summary\": {\n        \"category_column_count\": \"<long>\",\n        \"export_column_count\": \"<long>\",\n        \"incremental_full_refresh\": \"<boolean>\",\n        \"key_column_count\": \"<long>\",\n        \"purge_expired_rows_only\": \"<boolean>\",\n        \"redaction_threshold\": \"<long>\",\n        \"rounding_threshold\": \"<long>\"\n      },\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_date_time\": \"<dateTime>\",\n      \"user_id\": \"<string>\"\n    },\n    {\n      \"created_date_time\": \"<dateTime>\",\n      \"dataset_publish_config_summary\": {\n        \"category_column_count\": \"<long>\",\n        \"export_column_count\": \"<long>\",\n        \"incremental_full_refresh\": \"<boolean>\",\n        \"key_column_count\": \"<long>\",\n        \"purge_expired_rows_only\": \"<boolean>\",\n        \"redaction_threshold\": \"<long>\",\n        \"rounding_threshold\": \"<long>\"\n      },\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_date_time\": \"<dateTime>\",\n      \"user_id\": \"<string>\"\n    }\n  ],\n  \"pagination\": {\n    \"next_page\": \"<integer>\",\n    \"results\": \"<integer>\",\n    \"total_results\": \"<integer>\"\n  }\n}"
				},
				{
					"name": "Returned when the ListConfigs request was not valid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/dataset-prepare-configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dataset-prepare-configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/dataset-prepare-configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dataset-prepare-configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/dataset-prepare-configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dataset-prepare-configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/dataset-prepare-configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dataset-prepare-configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/dataset-prepare-configs?pagination.page=<integer>&pagination.per_page=<integer>&order_by=<string>&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dataset-prepare-configs"
							],
							"query": [
								{
									"key": "pagination.page",
									"value": "<integer>",
									"description": "The requested page of records. Default is 1."
								},
								{
									"key": "pagination.per_page",
									"value": "<integer>",
									"description": "The number of records to return per page. Maximum is 500. Default is 100."
								},
								{
									"key": "order_by",
									"value": "<string>",
									"description": "OrderBy is a comma seperated value to define sorting.\ne.g 'name,created_time DESC'\nThe values are seperated by space, '{column} {ASC/DESC}'\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter is a string containing logic that can specify a restricted set of\nCloud Vaults to be returned. e.g. `name co 'Test' or name co 'Acme'`\n\nThe following values are permitted:\n    name\n    created_date_time (RFC3339 format)\n    updated_date_time (RFC3339 format)"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "10. Start a Prepare on normalized data.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"prepareExecutionID (PUB)\", pm.response.json().execution_id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"cloud_vault_id\": \"{{cloudVaultId (CLV)}}\",\n  \"config_id\": \"{{prepareConfigID (DPC)}}\",\n  \"dataset_id\": \"{{datasetID (AWS REGION)}}\",\n  \"recordset_id\": \"{{normalizedRecordSetID (RCS 3)}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v2/prepares/execute",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"prepares",
						"execute"
					]
				},
				"description": "Start a Prepare Operation"
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"config_embedded\": {\n    \"category_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"export_column_selection\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"incremental_full_refresh\": \"<boolean>\",\n    \"key_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"purge_expired_rows_only\": \"<boolean>\",\n    \"redaction_threshold\": \"<long>\",\n    \"rounding_threshold\": \"<long>\"\n  },\n  \"config_id\": \"<string>\",\n  \"dataset_id\": \"<string>\",\n  \"recordset_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"execution_id\": \"<string>\"\n}"
				},
				{
					"name": "Returned when the Prepare request was not valid.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"config_embedded\": {\n    \"category_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"export_column_selection\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"incremental_full_refresh\": \"<boolean>\",\n    \"key_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"purge_expired_rows_only\": \"<boolean>\",\n    \"redaction_threshold\": \"<long>\",\n    \"rounding_threshold\": \"<long>\"\n  },\n  \"config_id\": \"<string>\",\n  \"dataset_id\": \"<string>\",\n  \"recordset_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"execute"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"config_embedded\": {\n    \"category_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"export_column_selection\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"incremental_full_refresh\": \"<boolean>\",\n    \"key_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"purge_expired_rows_only\": \"<boolean>\",\n    \"redaction_threshold\": \"<long>\",\n    \"rounding_threshold\": \"<long>\"\n  },\n  \"config_id\": \"<string>\",\n  \"dataset_id\": \"<string>\",\n  \"recordset_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"execute"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"config_embedded\": {\n    \"category_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"export_column_selection\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"incremental_full_refresh\": \"<boolean>\",\n    \"key_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"purge_expired_rows_only\": \"<boolean>\",\n    \"redaction_threshold\": \"<long>\",\n    \"rounding_threshold\": \"<long>\"\n  },\n  \"config_id\": \"<string>\",\n  \"dataset_id\": \"<string>\",\n  \"recordset_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"execute"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when an Prepare request with the same prefix already exists.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"config_embedded\": {\n    \"category_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"export_column_selection\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"incremental_full_refresh\": \"<boolean>\",\n    \"key_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"purge_expired_rows_only\": \"<boolean>\",\n    \"redaction_threshold\": \"<long>\",\n    \"rounding_threshold\": \"<long>\"\n  },\n  \"config_id\": \"<string>\",\n  \"dataset_id\": \"<string>\",\n  \"recordset_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"execute"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"config_embedded\": {\n    \"category_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"export_column_selection\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"incremental_full_refresh\": \"<boolean>\",\n    \"key_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"purge_expired_rows_only\": \"<boolean>\",\n    \"redaction_threshold\": \"<long>\",\n    \"rounding_threshold\": \"<long>\"\n  },\n  \"config_id\": \"<string>\",\n  \"dataset_id\": \"<string>\",\n  \"recordset_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"execute"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud_vault_id\": \"<string>\",\n  \"config_embedded\": {\n    \"category_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"export_column_selection\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"incremental_full_refresh\": \"<boolean>\",\n    \"key_selection\": [\n      \"<int64>\",\n      \"<int64>\"\n    ],\n    \"purge_expired_rows_only\": \"<boolean>\",\n    \"redaction_threshold\": \"<long>\",\n    \"rounding_threshold\": \"<long>\"\n  },\n  \"config_id\": \"<string>\",\n  \"dataset_id\": \"<string>\",\n  \"recordset_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/execute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"execute"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "11. Get details on a Prepare operation.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"current_status is COMPLETED\", function () {pm.expect(pm.response.json().prepare_details.prepare.current_status).to.equal(\"COMPLETED\");});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"prepares",
						"executions",
						":execution_id"
					],
					"variable": [
						{
							"key": "execution_id",
							"value": "{{prepareExecutionID (PUB)}}",
							"description": "(Required) ExecutionID is the ID of the prepare execution to fetch."
						}
					]
				},
				"description": "Get details on a Prepare operation."
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"prepare_details\": {\n    \"history\": [\n      {\n        \"date_time\": \"<dateTime>\",\n        \"error\": {\n          \"details\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"error\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"help_url\": \"<string>\",\n          \"request_id\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"message\": \"<string>\",\n        \"prepare_status\": \"NO_STATUS\",\n        \"status\": \"NO_STATUS\"\n      },\n      {\n        \"date_time\": \"<dateTime>\",\n        \"error\": {\n          \"details\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"error\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"help_url\": \"<string>\",\n          \"request_id\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"message\": \"<string>\",\n        \"prepare_status\": \"NO_STATUS\",\n        \"status\": \"NO_STATUS\"\n      }\n    ],\n    \"prepare\": {\n      \"cloud_vault_id\": \"<string>\",\n      \"config\": {\n        \"category_selection\": [\n          \"<int64>\",\n          \"<int64>\"\n        ],\n        \"export_column_selection\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_full_refresh\": \"<boolean>\",\n        \"key_selection\": [\n          \"<int64>\",\n          \"<int64>\"\n        ],\n        \"purge_expired_rows_only\": \"<boolean>\",\n        \"redaction_threshold\": \"<long>\",\n        \"rounding_threshold\": \"<long>\"\n      },\n      \"config_embedded\": {\n        \"category_selection\": [\n          \"<int64>\",\n          \"<int64>\"\n        ],\n        \"export_column_selection\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_full_refresh\": \"<boolean>\",\n        \"key_selection\": [\n          \"<int64>\",\n          \"<int64>\"\n        ],\n        \"purge_expired_rows_only\": \"<boolean>\",\n        \"redaction_threshold\": \"<long>\",\n        \"rounding_threshold\": \"<long>\"\n      },\n      \"config_id\": \"<string>\",\n      \"created_date_time\": \"<dateTime>\",\n      \"current_status\": \"NO_STATUS\",\n      \"dataset_id\": \"<string>\",\n      \"expiration_date_time\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"prepare_status\": \"NO_STATUS\",\n      \"progress\": {\n        \"completion_percentage\": \"<float>\"\n      },\n      \"recordset_id\": \"<string>\",\n      \"updated_date_time\": \"<dateTime>\",\n      \"user_id\": \"<string>\"\n    }\n  }\n}"
				},
				{
					"name": "Returned when the GetPrepare request was not valid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the dataset ID isn't found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "12. Publishes prepared data to a dataset.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/prepares/:execution_id/publish",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"prepares",
						":execution_id",
						"publish"
					],
					"variable": [
						{
							"key": "execution_id",
							"value": "{{prepareExecutionID (PUB)}}",
							"description": "(Required) ExecutionID is the id of the prepare execution to publish to the dataset."
						}
					]
				},
				"description": "Publishes prepared data to a dataset."
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/:execution_id/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								":execution_id",
								"publish"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"execution_id\": \"<string>\"\n}"
				},
				{
					"name": "Returned when the Publish request was not valid.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/:execution_id/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								":execution_id",
								"publish"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/:execution_id/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								":execution_id",
								"publish"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/:execution_id/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								":execution_id",
								"publish"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/:execution_id/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								":execution_id",
								"publish"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/:execution_id/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								":execution_id",
								"publish"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		},
		{
			"name": "13. Get details on a Publish operation.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"current_status is COMPLETED\", function () {pm.expect(pm.response.json().prepare_details.prepare.prepare_status).to.equal(\"PUBLISHED\");});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v2",
						"prepares",
						"executions",
						":execution_id"
					],
					"variable": [
						{
							"key": "execution_id",
							"value": "{{prepareExecutionID (PUB)}}",
							"description": "(Required) ExecutionID is the ID of the prepare execution to fetch."
						}
					]
				},
				"description": "Get details on a Prepare operation."
			},
			"response": [
				{
					"name": "A successful response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"prepare_details\": {\n    \"history\": [\n      {\n        \"date_time\": \"<dateTime>\",\n        \"error\": {\n          \"details\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"error\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"help_url\": \"<string>\",\n          \"request_id\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"message\": \"<string>\",\n        \"prepare_status\": \"NO_STATUS\",\n        \"status\": \"NO_STATUS\"\n      },\n      {\n        \"date_time\": \"<dateTime>\",\n        \"error\": {\n          \"details\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"error\": {\n            \"code\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          \"help_url\": \"<string>\",\n          \"request_id\": \"<string>\",\n          \"time\": \"<dateTime>\"\n        },\n        \"message\": \"<string>\",\n        \"prepare_status\": \"NO_STATUS\",\n        \"status\": \"NO_STATUS\"\n      }\n    ],\n    \"prepare\": {\n      \"cloud_vault_id\": \"<string>\",\n      \"config\": {\n        \"category_selection\": [\n          \"<int64>\",\n          \"<int64>\"\n        ],\n        \"export_column_selection\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_full_refresh\": \"<boolean>\",\n        \"key_selection\": [\n          \"<int64>\",\n          \"<int64>\"\n        ],\n        \"purge_expired_rows_only\": \"<boolean>\",\n        \"redaction_threshold\": \"<long>\",\n        \"rounding_threshold\": \"<long>\"\n      },\n      \"config_embedded\": {\n        \"category_selection\": [\n          \"<int64>\",\n          \"<int64>\"\n        ],\n        \"export_column_selection\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"incremental_full_refresh\": \"<boolean>\",\n        \"key_selection\": [\n          \"<int64>\",\n          \"<int64>\"\n        ],\n        \"purge_expired_rows_only\": \"<boolean>\",\n        \"redaction_threshold\": \"<long>\",\n        \"rounding_threshold\": \"<long>\"\n      },\n      \"config_id\": \"<string>\",\n      \"created_date_time\": \"<dateTime>\",\n      \"current_status\": \"NO_STATUS\",\n      \"dataset_id\": \"<string>\",\n      \"expiration_date_time\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"prepare_status\": \"NO_STATUS\",\n      \"progress\": {\n        \"completion_percentage\": \"<float>\"\n      },\n      \"recordset_id\": \"<string>\",\n      \"updated_date_time\": \"<dateTime>\",\n      \"user_id\": \"<string>\"\n    }\n  }\n}"
				},
				{
					"name": "Returned when the GetPrepare request was not valid.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user could not be authorized.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the user does not have the required permission.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Returned when the dataset ID isn't found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				},
				{
					"name": "An unexpected error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/prepares/executions/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"prepares",
								"executions",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"details\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"error\": {\n    \"code\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"help_url\": \"<string>\",\n  \"request_id\": \"<string>\",\n  \"time\": \"<dateTime>\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.infosum.com"
		},
		{
			"key": "apiKey",
			"value": "",
			"type": "string"
		},
		{
			"key": "pagination.page",
			"value": "1",
			"type": "string",
			"disabled": true
		},
		{
			"key": "pagination.per_page",
			"value": "100",
			"type": "string",
			"disabled": true
		},
		{
			"key": "filter",
			"value": "created_date_time gt '2023-10-01T10:50:42-04:00'",
			"type": "string",
			"disabled": true
		},
		{
			"key": "orderBy",
			"value": "'{column} {ASC/DESC}'",
			"type": "string",
			"disabled": true
		},
		{
			"key": "cloudVaultId (CLV)",
			"value": "CLV.AWS_US_EAST_1.xxx",
			"type": "string"
		},
		{
			"key": "ImportID (IMP)",
			"value": "IMP.xxx",
			"type": "string"
		},
		{
			"key": "ImportExecutionID (IMT)",
			"value": "IMT.xxx",
			"type": "string"
		},
		{
			"key": "recordSetConfigID (RSC 1)",
			"value": "RSC.xxx",
			"type": "string"
		},
		{
			"key": "recordSetID (RSC 2)",
			"value": ""
		},
		{
			"key": "recordSetExecutionID (MRC)",
			"value": "MRC.xxx",
			"type": "string"
		},
		{
			"key": "normalization config name",
			"value": "",
			"type": "string"
		},
		{
			"key": "normalizationConfigID (NMC)",
			"value": "",
			"type": "string"
		},
		{
			"key": "normalizationExecutionID (NMZ)",
			"value": "",
			"type": "string"
		},
		{
			"key": "normalizedRecordSetID (RCS 3)",
			"value": "",
			"type": "string"
		},
		{
			"key": "datasetID (AWS REGION)",
			"value": "AWS_US_EAST_1.xxx",
			"type": "string"
		},
		{
			"key": "dataset prepare config name",
			"value": "",
			"type": "string"
		},
		{
			"key": "prepareConfigID (DPC)",
			"value": "DPC.xxx",
			"type": "string"
		},
		{
			"key": "prepareExecutionID (PUB)",
			"value": "",
			"type": "string"
		}
	]
}