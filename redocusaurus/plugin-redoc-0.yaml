openapi: 3.0.0
info:
  title: InfoSum Developer Documentation
  description: >-
    This page contains the documentation for the InfoSum Developer API. The
    methods allow you to try making requests and inspect the input and output
    formats.


    # Authentication


    <!-- ReDoc-Inject: <security-definitions> -->
  termsOfService: https://www.infosum.com/legals/website-terms
  version: '1.0'
  contact:
    name: InfoSum Support
    email: support@infosum.com
  x-logo:
    url: banner-logo.svg
    backgroundColor: '#13294B'
    altText: infosum
tags:
  - name: Tyrael
paths:
  /api/v1/activations:
    get:
      summary: List Activations
      description: List current activations, subject to the optional request filters.
      operationId: ListActivations
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelListActivationsResponse'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '403':
          description: >-
            Returned when the user does not have access to activations via the
            InfoSum API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: filter.campaign_name
          description: >-
            Campaign Name. The filter to be applied to the campaign name. Case
            insensitive. Supports partial names.
          in: query
          required: false
          schema:
            type: string
        - name: filter.submitted_at_filter.start_time
          description: >-
            Start. Defines the earliest time the filter is applied from. The
            filter

            matches all dates after this point in time, inclusive.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.submitted_at_filter.end_time
          description: >-
            End. Defines the time the filter is applied until. The filter
            matches all

            dates before this point in time, inclusive.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.query_successful
          description: >-
            Query Successful. Filters activations that were successfully
            completed or not.
          in: query
          required: false
          schema:
            type: boolean
        - name: filter.results_expired
          description: Results Expired. Filters activations that have expired or not.
          in: query
          required: false
          schema:
            type: boolean
        - name: filter.push_destinations
          description: >-
            Push Destinations. Filters queries that have been pushed to the
            specified

            destinations.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.output_columns
          description: >-
            Output Columns. Filters activations by the selected output columns.
            Activations which contain any of the specified output columns are
            included in the result
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.activation_dataset_private_ids
          description: >-
            Activation Dataset Private IDs. Filters queries by the activation
            dataset private ID used in

            the query. Activations for any of the dataset private IDs specified
            are included in the result.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.project_ids
          description: >-
            Project IDs. Filters queries by the projects that the activation
            dataset

            belongs to. Activations whose dataset belongs to any of the
            specified projects are included in the result.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: sort.by
          description: By is the field to sort by.
          in: query
          required: false
          schema:
            type: string
        - name: sort.order
          description: |-
            Order is the order to sort in. Defaults
            to ascending.

             - ASCENDING: Sort in ascending order.
             - DESCENDING: Sort in descending order.
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
            default: ASCENDING
      tags:
        - Activations
    post:
      summary: Queue an Activation
      description: >-
        Create an Activation and queue the query for execution. Returns
        immediately with an ID of the Activation created. Use the Get Activation
        endpoint to see if the query has run. Only available for use with
        Activation Datasets.
      operationId: CreateActivationQuery
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelActivationQueryStatus'
        '400':
          description: Returned when the Activation Query could not be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '403':
          description: >-
            Returned when the user does not have access to activations via the
            InfoSum API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when the dataset(s) in the query could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tyraelCreateActivationQueryRequest'
        required: true
      tags:
        - Activations
  /api/v1/activations/validate:
    post:
      summary: Validates an Activation Query
      description: Performs validation of an Activation Query without executing it.
      operationId: ValidateActivationQuery
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelValidateActivationQueryResponse'
        '400':
          description: Returned when the Activation Query is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '403':
          description: >-
            Returned when the user does not have access to activations via the
            InfoSum API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tyraelValidateActivationQueryRequest'
        required: true
      tags:
        - Activations
  /api/v1/activations/{activation_id}:
    get:
      summary: Get an Activation
      description: >-
        Get detailed information about an Activation, including query and push
        statuses.
      operationId: GetActivation
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelGetActivationResponse'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '403':
          description: >-
            Returned when the user does not have access to activations via the
            InfoSum API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when the requested Activation Query could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: activation_id
          description: |-
            Activation ID

            The unique ID of the activation to get.
          in: path
          required: true
          schema:
            type: string
      tags:
        - Activations
  /api/v1/activations/{activation_id}/push:
    post:
      summary: Pushes the activation query results to the specified push connector
      description: Pushes the result of an activation query to the specified push connector
      operationId: PushActivationResult
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelPushActivationResultResponse'
        '400':
          description: Returned when the Activation Query results could not be pushed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '403':
          description: >-
            Returned when the user does not have access to activations via the
            InfoSum API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when the Activation Query can not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: activation_id
          description: |-
            Activation ID

            The ID of the activation to push the results of.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                push_connector_id:
                  type: string
                  description: Is the ID of the Push Connector to push the results to.
                  title: Push Connector ID
                push_connector_config:
                  type: object
                  additionalProperties:
                    type: string
                  description: >-
                    The push connector map of Configuration Form field IDs to
                    their values for configuring the push connector.
                  title: PushConnectorConfig
              description: >-
                PushActivationResultRequest is the input for the
                PushActivationResult endpoints.
              title: Push activation query results request
        required: true
      tags:
        - Activations
  /api/v1/activations/{activation_id}/push_connectors:
    get:
      summary: List the permitted Push Connectors for an Activation Query
      description: >-
        Returns a list of all the Push Connectors that can be used with the
        specified Activation Query.
      operationId: ListActivationPushConnectors
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tyraelListActivationPushConnectorsResponse
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '403':
          description: >-
            Returned when the user does not have access to activations via the
            InfoSum API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when the Activation Query can not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: activation_id
          description: >-
            Activation ID


            Is the ID of the activation to list the permitted push connectors
            for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - Activations
  /api/v1/base_push_connectors:
    get:
      summary: List all base Push Connectors
      description: >-
        List all Push Connectors that can be used to create a new Push
        Connector.
      operationId: ListBasePushConnectors
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelListBasePushConnectorsResponse'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - Push Connectors
  /api/v1/connections:
    get:
      summary: List all available Connections
      description: >-
        List all Connections available from user owned Datasets to Datasets
        which the user has been granted access.
      operationId: ListConnections
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelListConnectionsResponse'
        '400':
          description: Returned when an invalid request filter is used.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: filter.origin_private_ids
          description: >-
            Origin Private Dataset IDs. The private IDs of the Datasets to
            display all connections from.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.connected_datasets.private_ids
          description: >-
            PrivateIds. The filter to be applied to the private IDs of the
            returned

            Datasets. Only Datasets with private IDs containing one of the
            strings

            specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.connected_datasets.public_names
          description: >-
            PublicNames. The filter to be applied to the public names of the

            returned Datasets. Only Datasets with public names containing one of
            the

            string specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.connected_datasets.public_description
          description: >-
            PublicDescription. The filter to be applied to the public
            descriptions

            of the returned Datasets. Only Datasets with public descriptions

            containing the string specified in this filter will be returned.
            Case

            insensitive.
          in: query
          required: false
          schema:
            type: string
        - name: filter.connected_datasets.create_time_filter.start_time
          description: >-
            Start. Defines the earliest time the filter is applied from. The
            filter

            matches all dates after this point in time, inclusive.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.connected_datasets.create_time_filter.end_time
          description: >-
            End. Defines the time the filter is applied until. The filter
            matches all

            dates before this point in time, inclusive.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.connected_datasets.owner_ids
          description: Owner User IDs. Filters Datasets on the specified owner user IDs.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.connected_datasets.categories.ids
          description: Ids. The IDs of the Categories that must be present in the Dataset.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              format: int64
        - name: filter.connected_datasets.categories.min_fill_rates
          description: >-
            MinFillRates. The minimum fill rates for each category specified in
            Ids.

            These are inclusive of the bound. A value must be specified for each

            Category. If the user doesn't want to filter by fill rate, they can
            set

            the minimum fill rate to 0, which will match all fill rate values.

            Values should be in the range 0 to 1, inclusive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: number
              format: double
        - name: filter.connected_datasets.project_ids
          description: >-
            ProjectIds. The filter to be applied to the projects associated with
            the returned

            Datasets. Only Datasets within projects matching one of the project
            ids

            specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.min_intersection
          description: >-
            Min Intersection. The lowest acceptable intersection relative to the

            size of the connected Dataset. This is calculated by taking the
            number

            of rows in the from Dataset that are also in the to Dataset when
            using

            the 'best' key, and diving by the total number of rows in the from

            Dataset.  Values can be between 0 and 1, inclusive. If ommitted, any

            intersection will be allowed.
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: sort.by
          description: By is the field to sort by.
          in: query
          required: false
          schema:
            type: string
        - name: sort.order
          description: |-
            Order is the order to sort in. Defaults
            to ascending.

             - ASCENDING: Sort in ascending order.
             - DESCENDING: Sort in descending order.
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
            default: ASCENDING
      tags:
        - Connections
  /api/v1/connections/{first_private_id}/{second_private_id}:
    get:
      summary: Get metadata for a Connection
      description: Gets metadata for a specific Connection between two Datasets.
      operationId: GetConnection
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelGetConnectionResponse'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when one or both of the Datasets could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: first_private_id
          description: |-
            First Private Datasets ID

            The Private ID of the first Dataset in this Connection.
          in: path
          required: true
          schema:
            type: string
        - name: second_private_id
          description: |-
            Second Datasets ID

            The Private ID of the second Dataset in this Connection.
          in: path
          required: true
          schema:
            type: string
      tags:
        - Connections
  /api/v1/datasets:
    get:
      summary: List Datasets
      description: Lists Datasets the user has access to.
      operationId: ListDatasets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelListDatasetsResponse'
        '400':
          description: Returned when an invalid filter is used.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: filter.ownership
          description: >-
            OwnershipFilter. Specifies whether to return all Datasets, or only
            those that are

            owned or not owned by the requesting user.

             - ANY_OWNERSHIP: Returns all Datasets the user has access to.
             - OWNED: Only returns Datasets owned by the user.
             - NOT_OWNED: Only returns Datasets not owned by the user.
          in: query
          required: false
          schema:
            type: string
            enum:
              - ANY_OWNERSHIP
              - OWNED
              - NOT_OWNED
            default: ANY_OWNERSHIP
        - name: filter.datasets.private_ids
          description: >-
            PrivateIds. The filter to be applied to the private IDs of the
            returned

            Datasets. Only Datasets with private IDs containing one of the
            strings

            specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.datasets.public_names
          description: >-
            PublicNames. The filter to be applied to the public names of the

            returned Datasets. Only Datasets with public names containing one of
            the

            string specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.datasets.public_description
          description: >-
            PublicDescription. The filter to be applied to the public
            descriptions

            of the returned Datasets. Only Datasets with public descriptions

            containing the string specified in this filter will be returned.
            Case

            insensitive.
          in: query
          required: false
          schema:
            type: string
        - name: filter.datasets.create_time_filter.start_time
          description: >-
            Start. Defines the earliest time the filter is applied from. The
            filter

            matches all dates after this point in time, inclusive.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.datasets.create_time_filter.end_time
          description: >-
            End. Defines the time the filter is applied until. The filter
            matches all

            dates before this point in time, inclusive.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.datasets.owner_ids
          description: Owner User IDs. Filters Datasets on the specified owner user IDs.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.datasets.categories.ids
          description: Ids. The IDs of the Categories that must be present in the Dataset.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              format: int64
        - name: filter.datasets.categories.min_fill_rates
          description: >-
            MinFillRates. The minimum fill rates for each category specified in
            Ids.

            These are inclusive of the bound. A value must be specified for each

            Category. If the user doesn't want to filter by fill rate, they can
            set

            the minimum fill rate to 0, which will match all fill rate values.

            Values should be in the range 0 to 1, inclusive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: number
              format: double
        - name: filter.datasets.project_ids
          description: >-
            ProjectIds. The filter to be applied to the projects associated with
            the returned

            Datasets. Only Datasets within projects matching one of the project
            ids

            specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: sort.by
          description: By is the field to sort by.
          in: query
          required: false
          schema:
            type: string
        - name: sort.order
          description: |-
            Order is the order to sort in. Defaults
            to ascending.

             - ASCENDING: Sort in ascending order.
             - DESCENDING: Sort in descending order.
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
            default: ASCENDING
      tags:
        - Datasets
  /api/v1/datasets/{private_id}:
    get:
      summary: Get Dataset metadata
      description: Gets metadata for a specific Dataset the user owns or has access to.
      operationId: GetDataset
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelGetDatasetResponse'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when the requested Dataset could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: private_id
          description: |-
            Private Dataset ID

            The Private ID of the Dataset to retrieve, as assigned by the user.
          in: path
          required: true
          schema:
            type: string
      tags:
        - Datasets
  /api/v1/demo_datasets:
    delete:
      summary: Remove access to the Demo Datasets
      description: Remove access to the Demo Datasets.
      operationId: RemoveDemoDatasets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelRemoveDemoDatasetsResponse'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - Demo Datasets
    post:
      summary: Add access to the Demo Datasets
      description: Add access to the Demo Datasets for querying.
      operationId: AddDemoDatasets
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelAddDemoDatasetsResponse'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: One or more Demo Datasets could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tyraelAddDemoDatasetsRequest'
        required: true
      tags:
        - Demo Datasets
  /api/v1/explain:
    post:
      summary: ExplainQuery explains how a query will be executed.
      description: >-
        Provides information about the choices made by the platfrom before
        executing a query.
      operationId: ExplainQuery
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelExplainQueryResponse'
        '400':
          description: Returned when the Query could not be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tyraelExplainQueryRequest'
        required: true
      tags:
        - Queries
  /api/v1/identity_queries:
    post:
      summary: Create an Identity Query
      description: >-
        Queue an Identity Query for execution. Returns immediately with an ID of
        the Identity Query created. Only available for use with Identity
        Datasets.
      operationId: CreateIdentityQuery
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelIdentityQueryStatus'
        '400':
          description: Returned when the IdentityQuery could not be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tyraelCreateIdentityQueryRequest'
        required: true
      tags:
        - Identity Queries
      deprecated: true
  /api/v1/identity_queries/push_connectors:
    post:
      summary: Get a list of Push Connectors permitted for an Identity Query
      description: >-
        Returns a list of all the Push Connectors that can be used with this
        Identity Query.
      operationId: GetPermittedPushConnectors
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelGetPermittedPushConnectorsResponse'
        '400':
          description: Returned when the Identity Query could not be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tyraelGetPermittedPushConnectorsRequest'
        required: true
      tags:
        - Identity Queries
      deprecated: true
  /api/v1/identity_queries/validate:
    post:
      summary: Validates an Identity Query
      description: >-
        Performs validation of an Identity Query without actually executing it.
        Good for testing that your queries are correctly formatted.
      operationId: ValidateIdentityQuery
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelValidateIdentityQueryResponse'
        '400':
          description: Returned when the Identity Query could not be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tyraelValidateIdentityQueryRequest'
        required: true
      tags:
        - Identity Queries
      deprecated: true
  /api/v1/identity_queries/{identity_query_id}:
    get:
      summary: Get an Identity Query
      description: Get the current status of the Identity Query.
      operationId: GetIdentityQuery
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelIdentityQueryStatus'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when the requested Identity Query could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: identity_query_id
          description: >-
            Identity Query ID


            The ID of the Identity Query, as returned from the
            CreateIdentityQuery method.
          in: path
          required: true
          schema:
            type: string
      tags:
        - Identity Queries
      deprecated: true
  /api/v1/permissions:
    get:
      summary: List all Permissions associated with the User.
      description: List all Permissions the user has offered or been offered.
      operationId: ListPermissions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelListPermissionsResponse'
        '400':
          description: Returned when an invalid request filter is used.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: filter.direction
          description: >-
            Direction. Specifies whether to return all Permissions, or only
            those that

            are incoming or outgoing.

             - ANY_DIRECTION: Shows all Permissions.
             - INCOMING: Only shows incoming Permissions.
             - OUTGOING: Only shows outgoing Permissions.
          in: query
          required: false
          schema:
            type: string
            enum:
              - ANY_DIRECTION
              - INCOMING
              - OUTGOING
            default: ANY_DIRECTION
        - name: filter.accepted
          description: |-
            Accepted. Specifies whether to return all Permissions, or only those
            that have or have not been accepted by the recipient.

             - ANY_ACCEPTED: Shows all Permissions.
             - INACTIVE: Only shows inactive Permissions.
             - ACTIVE: Only shows active Permissions.
          in: query
          required: false
          schema:
            type: string
            enum:
              - ANY_ACCEPTED
              - INACTIVE
              - ACTIVE
            default: ANY_ACCEPTED
        - name: filter.owned_datasets.private_ids
          description: >-
            PrivateIds. The filter to be applied to the private IDs of the
            returned

            Datasets. Only Datasets with private IDs containing one of the
            strings

            specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.owned_datasets.public_names
          description: >-
            PublicNames. The filter to be applied to the public names of the

            returned Datasets. Only Datasets with public names containing one of
            the

            string specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.owned_datasets.public_description
          description: >-
            PublicDescription. The filter to be applied to the public
            descriptions

            of the returned Datasets. Only Datasets with public descriptions

            containing the string specified in this filter will be returned.
            Case

            insensitive.
          in: query
          required: false
          schema:
            type: string
        - name: filter.owned_datasets.create_time_filter.start_time
          description: >-
            Start. Defines the earliest time the filter is applied from. The
            filter

            matches all dates after this point in time, inclusive.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.owned_datasets.create_time_filter.end_time
          description: >-
            End. Defines the time the filter is applied until. The filter
            matches all

            dates before this point in time, inclusive.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.owned_datasets.owner_ids
          description: Owner User IDs. Filters Datasets on the specified owner user IDs.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.owned_datasets.categories.ids
          description: Ids. The IDs of the Categories that must be present in the Dataset.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              format: int64
        - name: filter.owned_datasets.categories.min_fill_rates
          description: >-
            MinFillRates. The minimum fill rates for each category specified in
            Ids.

            These are inclusive of the bound. A value must be specified for each

            Category. If the user doesn't want to filter by fill rate, they can
            set

            the minimum fill rate to 0, which will match all fill rate values.

            Values should be in the range 0 to 1, inclusive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: number
              format: double
        - name: filter.owned_datasets.project_ids
          description: >-
            ProjectIds. The filter to be applied to the projects associated with
            the returned

            Datasets. Only Datasets within projects matching one of the project
            ids

            specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.other_datasets.private_ids
          description: >-
            PrivateIds. The filter to be applied to the private IDs of the
            returned

            Datasets. Only Datasets with private IDs containing one of the
            strings

            specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.other_datasets.public_names
          description: >-
            PublicNames. The filter to be applied to the public names of the

            returned Datasets. Only Datasets with public names containing one of
            the

            string specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.other_datasets.public_description
          description: >-
            PublicDescription. The filter to be applied to the public
            descriptions

            of the returned Datasets. Only Datasets with public descriptions

            containing the string specified in this filter will be returned.
            Case

            insensitive.
          in: query
          required: false
          schema:
            type: string
        - name: filter.other_datasets.create_time_filter.start_time
          description: >-
            Start. Defines the earliest time the filter is applied from. The
            filter

            matches all dates after this point in time, inclusive.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.other_datasets.create_time_filter.end_time
          description: >-
            End. Defines the time the filter is applied until. The filter
            matches all

            dates before this point in time, inclusive.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: filter.other_datasets.owner_ids
          description: Owner User IDs. Filters Datasets on the specified owner user IDs.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: filter.other_datasets.categories.ids
          description: Ids. The IDs of the Categories that must be present in the Dataset.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              format: int64
        - name: filter.other_datasets.categories.min_fill_rates
          description: >-
            MinFillRates. The minimum fill rates for each category specified in
            Ids.

            These are inclusive of the bound. A value must be specified for each

            Category. If the user doesn't want to filter by fill rate, they can
            set

            the minimum fill rate to 0, which will match all fill rate values.

            Values should be in the range 0 to 1, inclusive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: number
              format: double
        - name: filter.other_datasets.project_ids
          description: >-
            ProjectIds. The filter to be applied to the projects associated with
            the returned

            Datasets. Only Datasets within projects matching one of the project
            ids

            specified in this filter will be returned. Case insensitive.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: sort.by
          description: By is the field to sort by.
          in: query
          required: false
          schema:
            type: string
        - name: sort.order
          description: |-
            Order is the order to sort in. Defaults
            to ascending.

             - ASCENDING: Sort in ascending order.
             - DESCENDING: Sort in descending order.
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
            default: ASCENDING
      tags:
        - Permissions
  /api/v1/push_connectors:
    get:
      summary: List all Push Connectors
      description: >-
        List all Push Connectors that the recipient can use to push the results
        from an Identity Query.
      operationId: ListPushConnectors
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelListPushConnectorsResponse'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: recipient_id
          description: >-
            RecipientId. The ListPushConnectors method will return all
            PushConnectors that can be

            used by the user with this ID.
          in: query
          required: false
          schema:
            type: string
      tags:
        - Push Connectors
  /api/v1/push_connectors/{base_id}:
    post:
      summary: Create a Push Connector
      description: >-
        Create a new Push Connector, based on an existing type of Push
        Connector, that can be used to push the results from an Identity Query.
      operationId: CreatePushConnector
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelCreatePushConnectorResponse'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: base_id
          description: >-
            BaseId


            The ID of the base Push Connector that the new Push Connector is
            based on.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: A descriptive name for the new Push Connector.
                  title: Name
                recipient_ids:
                  type: array
                  items:
                    type: string
                  description: >-
                    A list of the user IDs of users who can use the new Push
                    Connector. Only

                    users in this list will be allowed to use the new template.
                    If left empty,

                    any user will be allowed to use the new template if the
                    owner specifies it

                    in a permission shared with them.
                  title: RecipientIds
                values:
                  type: array
                  items:
                    $ref: '#/components/schemas/tyraelCreatePushConnectorRequestValue'
                  description: >-
                    Values is a list of modified fields for the new Push
                    Connector. Any fields

                    present in the base Push Connector that aren't in this list
                    will be left

                    unchanged in the new Push Connector.
                  title: Values
              description: >-
                Used to create a new Push Connector with the CreatePushConnector
                method.
              title: Create Push Connectors Request
        required: true
      tags:
        - Push Connectors
  /api/v1/push_connectors/{push_connector_id}:
    get:
      summary: Get a Form for a Push Connector
      description: >-
        Returns a Form which describes the values that need to be specified in
        order to configure a Push Connector.
      operationId: GetPushConnectorForm
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelGetPushConnectorFormResponse'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when the Push Connector could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: push_connector_id
          description: |-
            PushConnectorId

            The ID of the Push Connector.
          in: path
          required: true
          schema:
            type: string
        - name: user_email_domain
          description: >-
            UserEmailDomain is the domain part only of the requesting user's
            email address.
          in: query
          required: false
          schema:
            type: string
      tags:
        - Push Connectors
  /api/v1/queries:
    post:
      summary: Create a Query
      description: >-
        Queue a Query for execution. Returns immediately with an ID of the Query
        created.
      operationId: CreateQuery
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelQuery'
        '400':
          description: Returned when the Query could not be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tyraelCreateQueryRequest'
        required: true
      tags:
        - Queries
  /api/v1/queries/{query_id}:
    get:
      summary: Get a Query
      description: Get the current status of the Query.
      operationId: GetQuery
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelQuery'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when the requested Query could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: query_id
          description: |-
            Query ID

            The ID of the Query, as returned from the CreateQuery method.
          in: path
          required: true
          schema:
            type: string
      tags:
        - Queries
  /api/v1/queries/{query_id}/result:
    get:
      summary: Get a Result
      description: Get the Result of a Query, when it is available.
      operationId: GetQueryResult
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelQueryResult'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: >-
            Returned when the requested Result could not be found or was not yet
            ready.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: query_id
          description: |-
            Query ID

            The ID of the Query, as returned from the CreateQuery method.
          in: path
          required: true
          schema:
            type: string
      tags:
        - Queries
  /api/v1/usage/datasets/{private_id}:
    get:
      summary: Get Dataset credit usage
      description: Gets a time series of credit usage on the specified Dataset.
      operationId: GetDatasetUsage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelGetDatasetUsageResponse'
        '400':
          description: Returned when an invalid request filter is used.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when the requested Dataset could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: private_id
          description: |-
            Private Dataset ID

            The Private ID of the Dataset to return usage data for.
          in: path
          required: true
          schema:
            type: string
        - name: start_time
          description: >-
            Start Time. The timestamp from which to return usage data. If not
            specified,

            will default to the beginning of the current month. If specified,
            the

            StartTime will be rounded down to the next group boundary as
            specified

            by Grouping.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: end_time
          description: >-
            End Time. The timestamp up to which to return usage data. If not
            specified,

            will return all data up to the present moment. The EndTime will be

            rounded up to the next group boundary as specified by Grouping.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: grouping
          description: >-
            Grouping. Specifies how to roll up a time series into discrete
            groups.

             - TIME_GROUPING_UNSPECIFIED: Default value - should not be used.
             - DAY: All values within a single day will be rolled up into a single
            datapoint.
             - WEEK: All values within a single week (Monday - Sunday) will be
            rolled up into a single datapoint.
             - MONTH: All values within a single calendar month will be rolled up
            into a single datapoint.
             - YEAR: All values within a single calendar year will be rolled up into
            a single datapoint.
          in: query
          required: false
          schema:
            type: string
            enum:
              - TIME_GROUPING_UNSPECIFIED
              - DAY
              - WEEK
              - MONTH
              - YEAR
            default: TIME_GROUPING_UNSPECIFIED
      tags:
        - Datasets
  /api/v1/usage/permissions/{private_id}/{recipient_id}:
    get:
      summary: Get Permission credit usage
      description: Gets a time series of credit usage on the specified Dataset.
      operationId: GetPermissionUsage
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelGetPermissionUsageResponse'
        '400':
          description: Returned when an invalid request filter is used.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '404':
          description: Returned when the requested Permission could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: private_id
          description: >-
            Private Dataset ID


            The Private ID of the Dataset that the Permission is from,

            which identifies the Permission to return usage data for when
            combined

            with RecipientId.
          in: path
          required: true
          schema:
            type: string
        - name: recipient_id
          description: >-
            Recipient user ID


            The user ID of the recipient of the Permission to return usage data
            for,

            which identifies a single Permission when combined with Dataset ID.
          in: path
          required: true
          schema:
            type: string
        - name: start_time
          description: >-
            Start Time. The timestamp from which to return usage data. If not
            specified,

            will default to the beginning of the current month. If specified,
            the

            StartTime will be rounded down to the next group boundary as
            specified

            by Grouping.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: end_time
          description: >-
            End Time. The timestamp up to which to return usage data. If not
            specified,

            will return all data up to the present moment. The EndDate will be

            rounded up to the next group boundary as specified by Grouping.
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: grouping
          description: >-
            Grouping. Specifies how to roll up a time series into discrete
            groups.

             - TIME_GROUPING_UNSPECIFIED: Default value - should not be used.
             - DAY: All values within a single day will be rolled up into a single
            datapoint.
             - WEEK: All values within a single week (Monday - Sunday) will be
            rolled up into a single datapoint.
             - MONTH: All values within a single calendar month will be rolled up
            into a single datapoint.
             - YEAR: All values within a single calendar year will be rolled up into
            a single datapoint.
          in: query
          required: false
          schema:
            type: string
            enum:
              - TIME_GROUPING_UNSPECIFIED
              - DAY
              - WEEK
              - MONTH
              - YEAR
            default: TIME_GROUPING_UNSPECIFIED
      tags:
        - Permissions
  /api/v1/validate:
    post:
      summary: ValidateQuery validates a query
      description: >-
        Performs validation of a query without actually executing it. Good for
        testing that your queries are correctly formatted.
      operationId: ValidateQuery
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelValidateQueryResponse'
        '400':
          description: Returned when the Query could not be parsed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        '401':
          description: Returned when the user could not be authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tyraelError'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tyraelValidateQueryRequest'
        required: true
      tags:
        - Queries
security:
  - API_Keys: []
externalDocs:
  description: Official documentation
  url: https://support.infosum.com/
servers:
  - url: https://api.infosum.com
components:
  securitySchemes:
    API_Keys:
      type: apiKey
      description: >-
        Your Public and Private key, separated by /, like so:
        <tt>public_key/private_key</tt>.
      name: Authorization
      in: header
  schemas:
    SortOrder:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
      default: ASCENDING
      description: |-
        Order defines the options for sorting the list results.

         - ASCENDING: Sort in ascending order.
         - DESCENDING: Sort in descending order.
    protobufAny:
      type: object
      properties:
        type_url:
          type: string
          description: >-
            A URL/resource name that uniquely identifies the type of the
            serialized

            protocol buffer message. This string must contain at least

            one "/" character. The last segment of the URL's path must represent

            the fully qualified name of the type (as in

            `path/google.protobuf.Duration`). The name should be in a canonical
            form

            (e.g., leading "." is not accepted).


            In practice, teams usually precompile into the binary all types that
            they

            expect it to use in the context of Any. However, for URLs which use
            the

            scheme `http`, `https`, or no scheme, one can optionally set up a
            type

            server that maps type URLs to message definitions as follows:


            * If no scheme is provided, `https` is assumed.

            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official

            protobuf release, and it is not used for type URLs beginning with

            type.googleapis.com.


            Schemes other than `http`, `https` (or the empty scheme) might be

            used with implementation specific semantics.
        value:
          type: string
          format: byte
          description: >-
            Must be a valid serialized protocol buffer of the above specified
            type.
      description: >-
        `Any` contains an arbitrary serialized protocol buffer message along
        with a

        URL that describes the type of the serialized message.


        Protobuf library provides support to pack/unpack Any values in the form

        of utility functions or additional generated methods of the Any type.


        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use

        'type.googleapis.com/full.type.name' as the type URL and the unpack

        methods only use the fully qualified type name after the last '/'

        in the type URL, for example "foo.bar.com/x/y.z" will yield type

        name "y.z".



        JSON

        ====

        The JSON representation of an `Any` value uses the regular

        representation of the deserialized, embedded message, with an

        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON

        representation, that representation will be embedded adding a field

        `value` which holds the custom JSON in addition to the `@type`

        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: >-
            The status code, which should be an enum value of
            [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any

            user-facing error message should be localized and sent in the

            [google.rpc.Status.details][google.rpc.Status.details] field, or
            localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It
        is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in
        the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
    tyraelAcceptedFilter:
      type: string
      enum:
        - ANY_ACCEPTED
        - INACTIVE
        - ACTIVE
      default: ANY_ACCEPTED
      description: >-
        AcceptedFilter specifies whether to return all Permissions, or only
        those that

        have or have not been accepted by the Recipient.

         - ANY_ACCEPTED: Shows all Permissions.
         - INACTIVE: Only shows inactive Permissions.
         - ACTIVE: Only shows active Permissions.
    tyraelActivation:
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/tyraelActivationSummary'
        query_error:
          $ref: '#/components/schemas/rpcStatus'
        output_columns:
          type: array
          items:
            type: string
          description: The output columns that were requested.
          title: Output Columns
        pushes:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPush'
          description: The list of pushes for this activation.
          title: Pushes
        query_string:
          type: string
          description: The raw IQL query string representation of the query.
          title: Query String
      description: Activation describes information about an activation.
    tyraelActivationQueryExecutionStatus:
      type: string
      enum:
        - QUERY_PENDING
        - QUERY_RUNNING
        - QUERY_COMPLETED
      default: QUERY_PENDING
      description: >-
        ActivationQueryExecutionStatus defines the different states that an
        activation Query can

        be in.

         - QUERY_PENDING: QUERY_PENDING indicates that the query is waiting to be executed.
         - QUERY_RUNNING: QUERY_RUNNING indicates that the query is currently being executed.
         - QUERY_COMPLETED: QUERY_COMPLETED indicates that the query has completed execution.
    tyraelActivationQueryStatus:
      type: object
      properties:
        activation_id:
          type: string
          description: The ID of the Activation.
          title: Activation ID
        query_completed:
          type: boolean
          description: Whether the Query has finished or not.
          title: Query Completed
        query_error:
          $ref: '#/components/schemas/rpcStatus'
        query_response:
          $ref: '#/components/schemas/tyraelIdentityResponse'
      description: Status of an Activation Query.
      title: Activation Status
    tyraelActivationStringLiteral:
      type: object
      properties:
        column_name:
          type: string
          description: The name of the column.
          title: Column Name
        column_literal:
          type: string
          description: |-
            The string literal that will be used for every row of
            activation data.
          title: Column Literal
      description: |-
        ActivationStringLiteral contains information about a string literal
        activation column.
    tyraelActivationSummary:
      type: object
      properties:
        activation_id:
          type: string
          description: A unique identifier of the activation.
          title: Activation ID
        campaign_name:
          type: string
          description: The optional name that is associated with a campaign.
          title: Campaign Name
        status:
          $ref: '#/components/schemas/tyraelActivationQueryExecutionStatus'
        total_rows:
          type: integer
          format: int64
          description: The total number of rows in the result.
          title: Total Rows
        submitted_at:
          type: string
          format: date-time
          description: The time when the activation was submitted.
          title: Submitted At
        query_successful:
          type: boolean
          description: Indicates whether the activation query successfully completed.
          title: Query Successful
        results_expired:
          type: boolean
          description: >-
            Indicates whether the cached results for the activation query have
            expired.
          title: Results Expired
        dataset_id:
          type: string
          description: The ID of the dataset that was used in the activation query.
          title: Dataset ID
        project_ids:
          type: array
          items:
            type: string
          description: The projects that the Activation dataset belongs to.
          title: ProjectIDs
        column_separator:
          type: string
          description: |-
            The separator to be used to delimit activation data
            columns.
          title: Column Separator
        string_literal_column:
          $ref: '#/components/schemas/tyraelActivationStringLiteral'
        original_record_count:
          type: integer
          format: int64
          description: A count of the records before de-duplication
          title: Original Record Count
      description: ActivationSummary describes summary information about an activation.
    tyraelActivationsFilter:
      type: object
      properties:
        campaign_name:
          type: string
          description: >-
            The filter to be applied to the campaign name. Case insensitive.
            Supports partial names.
          title: Campaign Name
        submitted_at_filter:
          $ref: '#/components/schemas/tyraelTimeRangeFilter'
        query_successful:
          type: boolean
          description: Filters activations that were successfully completed or not.
          title: Query Successful
        results_expired:
          type: boolean
          description: Filters activations that have expired or not.
          title: Results Expired
        push_destinations:
          type: array
          items:
            type: string
          description: |-
            Filters queries that have been pushed to the specified
            destinations.
          title: Push Destinations
        output_columns:
          type: array
          items:
            type: string
          description: >-
            Filters activations by the selected output columns. Activations
            which contain any of the specified output columns are included in
            the result
          title: Output Columns
        activation_dataset_private_ids:
          type: array
          items:
            type: string
          description: >-
            Filters queries by the activation dataset private ID used in

            the query. Activations for any of the dataset private IDs specified
            are included in the result.
          title: Activation Dataset Private IDs
        project_ids:
          type: array
          items:
            type: string
          description: >-
            Filters queries by the projects that the activation dataset

            belongs to. Activations whose dataset belongs to any of the
            specified projects are included in the result.
          title: Project IDs
      description: |-
        ActivationsFilter contains parameters for filtering Activations
        based on user visible properties.
    tyraelAddDemoDatasetsRequest:
      type: object
      description: Used to add Demo Datasets with the AddDemoDatasets method.
      title: Add Demo Datasets Request
    tyraelAddDemoDatasetsResponse:
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPermission'
          description: Details of the permissions to the Demo Datasets.
          title: Permissions
      description: Permission details of the Demo Datasets.
      title: Add Demo Datasets Response
    tyraelAggregationPlan:
      type: object
      properties:
        private_id:
          type: string
          description: >-
            PrivateId is the private ID of the Dataset on which the aggregation
            will take place.
          title: PrivateId
        representation:
          $ref: '#/components/schemas/tyraelRepresentationPlan'
        aggregation_joins:
          $ref: '#/components/schemas/tyraelJoinPlan'
        filter_joins:
          $ref: '#/components/schemas/tyraelJoinPlan'
      description: Aggregation Plan is the top level aggregation of the query plan.
      title: Aggregation Plan
    tyraelBunkerState:
      type: string
      enum:
        - CLAIMED
        - UPLOADING
        - UPLOADED
        - UPLOAD_FAILED
        - CONVERTING
        - CONVERTED
        - CONVERSION_FAILED
        - NORMALISING
        - NORMALISED
        - NORMALISATION_FAILED
        - ONLINE
        - UPGRADING
        - PROVISIONING
      default: CLAIMED
      description: |-
        BunkerState represents the state that a Bunker is in.

         - CLAIMED: The initial value when a Bunker is claimed but has not had
        data imported. Bunkers cannot return to this state after others have
        been entered.
         - UPLOADING: Set while data is being uploaded to the Bunker.
         - UPLOADED: Set when the data successfully finished UPLOADING.
         - UPLOAD_FAILED: Set when the UPLOADING stage failed.
         - CONVERTING: Set when the data is being converted into the intermediate database.
         - CONVERTED: Set when the data successfully finished CONVERTING.
         - CONVERSION_FAILED: Set when the CONVERTING stage failed.
         - NORMALISING: Set when the data is being normalised.
         - NORMALISED: Set when NORMALISING completed successfully.
         - NORMALISATION_FAILED: Set when the NORMALISING stage failed.
         - ONLINE: Set when a Bunker is ready to be queried.
         - UPGRADING: UPGRADING is set when a bunker is performing an upgrade and is inaccessible until finished
         - PROVISIONING: PROVISIONING is set when a bunker is allocated to the user but is provisioning still
    tyraelCategory:
      type: object
      properties:
        label:
          type: string
          description: The text label of the Category, such as "Age" or "Gender".
          title: Label
        representations:
          type: array
          items:
            $ref: '#/components/schemas/tyraelRepresentation'
          description: An array of all Representations of this Category in this Dataset.
          title: Representations
        version:
          type: string
          format: int64
          description: The Category version number.
          title: Version
        unit:
          type: string
          description: The unit that this Category should be be displayed in.
          title: Unit
      description: An InfoSum data Category, such as "Age" or "Gender".
      title: Category
    tyraelCategoryFilter:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            format: int64
          description: The IDs of the Categories that must be present in the Dataset.
          title: Ids
        min_fill_rates:
          type: array
          items:
            type: number
            format: double
          description: >-
            The minimum fill rates for each category specified in Ids.

            These are inclusive of the bound. A value must be specified for each

            Category. If the user doesn't want to filter by fill rate, they can
            set

            the minimum fill rate to 0, which will match all fill rate values.

            Values should be in the range 0 to 1, inclusive.
          title: MinFillRates
      description: >-
        Contains parameters for specifying categories that must be present in a
        Dataset. For a Dataset to match the filter, it only needs to match one
        of the categories specified in the CategoryFilter. The Ids and
        MinFillRates fields should be considered together - the ID at a given
        index in the Ids field corresponds to the minimum fill rate at the same
        index in the MinFillRates field. For this reason, the same number of Ids
        and MinFillRates must be specified.
      title: Category Filter
    tyraelCombinator:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/tyraelCombinatorType'
        joins:
          type: array
          items:
            $ref: '#/components/schemas/tyraelJoinPlan'
          description: Joins is a list of expected joins between two datasets.
          title: Joins
      description: Combinator describes how joins are combined.
      title: Combinator
    tyraelCombinatorType:
      type: string
      enum:
        - AND
        - OR
        - NOT
        - TRANSLATE
      default: AND
      description: |-
        CombinatorType is the type of operation that is performed on sub joins.

         - AND: AND indicates that the sets are intersected.
         - OR: OR indicates that the sets are unioned.
         - NOT: NOT indicates that the sets are negated.
         - TRANSLATE: TRANSLATE indicates a key conversion is being applied.
    tyraelConnection:
      type: object
      properties:
        from_dataset_private_id:
          type: string
          description: The private ID of the origin Dataset for the Connection.
          title: From Dataset Private ID
        to_dataset_private_id:
          type: string
          description: The private ID of the Dataset connected to the origin Dataset.
          title: To Dataset Private ID
        keys:
          type: array
          items:
            $ref: '#/components/schemas/tyraelConnectionKey'
          description: |-
            Contains the intersection and duplicates for each key
            that the Datasets have in common.
          title: Keys
        selected_key_name:
          type: string
          description: |-
            The name of the key that we might select for a simple
            query that moves the FromDataset to the ToDataset.
          title: Selected Key Name
      description: A Connection between two Datasets.
      title: Connection
    tyraelConnectionKey:
      type: object
      properties:
        name:
          type: string
          description: The name for the key.
          title: Name
        intersection:
          type: string
          format: uint64
          description: |-
            The number of rows in the FromDataset that are present in
            the ToDataset when using this key.
          title: Intersection
        duplicates:
          type: string
          format: uint64
          description: |-
            Duplicates
            The number of duplicates from the FromDataset that are
            found in the ToDataset when using this key.
        bad_estimate:
          type: boolean
          description: |-
            BadEstimate
            Flag, is true when the estimated 'Intersection' and 'Duplicates'
            are expected to be bad. More accurate values are calculated
            in the background and should be available in a future request.
            The Time depends on the size of the involved datasets and on the
            amount of permitted connections.
        union:
          type: string
          format: uint64
          title: >-
            Union is the number of rows in the FromDataset and the ToDataset
            minus the

            intersection when using this key
        exclude:
          type: string
          format: uint64
          title: >-
            Exclude is the number of rows in the FromDataset minus the
            intersection

            when using this key
        intersection_expansion_count:
          type: string
          format: int64
          description: >-
            Fields 7 and 8 have been removed as they have been deprecated and
            are not in use (non nullable intersection expansion/reduction
            counts).

            A combination of a multi value to a single will be result in an
            expansion (intersection). This value needs to be nullable.
        intersection_reduction_count:
          type: string
          format: int64
          description: >-
            A combination of a single value to a multi value will result in a
            reduction (intersection). This value needs to be nullable.
      description: >-
        Describes the intersection and duplicates from one Dataset to another
        when using this key.
      title: Graph Connection
    tyraelConnectionsFilter:
      type: object
      properties:
        origin_private_ids:
          type: array
          items:
            type: string
          description: The private IDs of the Datasets to display all connections from.
          title: Origin Private Dataset IDs
        connected_datasets:
          $ref: '#/components/schemas/tyraelDatasetFilter'
        min_intersection:
          type: number
          format: double
          description: >-
            The lowest acceptable intersection relative to the

            size of the connected Dataset. This is calculated by taking the
            number

            of rows in the from Dataset that are also in the to Dataset when
            using

            the 'best' key, and diving by the total number of rows in the from

            Dataset.  Values can be between 0 and 1, inclusive. If ommitted, any

            intersection will be allowed.
          title: Min Intersection
      description: Contains the filter expressions for listing Connections.
      title: Connections Filter
    tyraelCreateActivationQueryRequest:
      type: object
      properties:
        query:
          type: string
          description: |-
            The Query that should be executed. This takes the
            format of an InfoSum Activation Query. See
            the documentation of the InfoSum Activation Query Language
            for more information.
          title: Query
        path_overrides:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPathOverride'
          description: >-
            A list of instructions on how to connect two datasets, overriding
            the automatic choices

            made by the core engine.
          title: Path Overrides
        campaign_name:
          type: string
          description: A name that a user can associate with an activation query.
          title: CampaignName
        column_separator:
          type: string
          description: The separator to be used to delimit activation data columns.
          title: Column Separator
        string_literal_column:
          $ref: '#/components/schemas/tyraelActivationStringLiteral'
      description: >-
        Used to queue an Activation Query with the CreateActivationQuery
        endpoint.
      title: Create Activation Query Request
    tyraelCreateIdentityQueryRequest:
      type: object
      properties:
        query:
          type: string
          description: |-
            The Query that should be queued. This takes the
            format of an InfoSum Identity Query. See
            the documentation of the InfoSum Identity Query Language
            for more information.
          title: Query
        path_overrides:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPathOverride'
          description: >-
            A list of instructions on how to connect two datasets, overriding
            the automatic choices

            made by the core engine.
          title: Path Overrides
        push_connector_config:
          $ref: '#/components/schemas/tyraelPushConnectorConfig'
        campaign_id:
          type: string
          description: A name that a user can associate with an identity query.
          title: CampaignId
      description: Used to create an Identity Query with the CreateIdentityQuery method.
      title: Create Identity Query Request
    tyraelCreatePushConnectorRequestValue:
      type: object
      properties:
        field_id:
          type: string
          description: >-
            Idenitifies which field from the base Push Connector is being
            referred

            to with this Value.
          title: FieldId
        value:
          type: string
          description: The default value for this field in the new Push Connector.
          title: Value
        user_editable:
          type: boolean
          description: >-
            If true, Value can be considered a default value, and anyone using
            the

            Push Connector will be able to change the value for that field.

            If false, users will not be able to change or see this value, and

            whatever Value is set to will be used when pushing Identity Results.
          title: UserEditable
      description: Value defines the value of a field in a Push Connector.
    tyraelCreatePushConnectorResponse:
      type: object
      properties:
        push_connector:
          $ref: '#/components/schemas/tyraelPushConnector'
      description: The ID and name of the new Push Connector.
      title: Create Push Connector Response
    tyraelCreateQueryRequest:
      type: object
      properties:
        query:
          type: string
          description: |-
            The Query that should be queued. This takes the
            format of an InfoSum Query Language Query. See
            the documentation of the InfoSum Query Language
            for more information.
          title: Query
        path_overrides:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPathOverride'
          description: >-
            A list of instructions on how to connect two datasets, overriding
            the automatic choices

            made by the core engine.
          title: Path Overrides
        sample:
          type: boolean
          description: >-
            A flag that can be used to execute the query against a smaller
            sample

            of the data. Can be used to reduce the execution time for a less
            accurate

            result.
          title: Sample
      description: Used to create a Query with the CreateQuery method.
      title: Create Query Request
    tyraelCreditShare:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/tyraelUser'
        allowance:
          type: integer
          format: int64
          description: The number of credits allocated to this Share per billing cycle.
          title: Allowance
        current_allowance:
          type: integer
          format: int64
          description: |-
            The number of credits that may be used on this Share in
            the current billing cycle.
          title: CurrentAllowance
        used:
          type: integer
          format: int64
          description: The number of credits used by this User in this billing cycle.
          title: Used
        uses_parent_allocation:
          type: boolean
          description: >-
            Indicates whether this User was allocated a specific

            number of credits, or if they consume credits directly from the
            Dataset.

            If true, Allowance and CurrentAllowance may be ignored.
          title: UsesParentAllocation
      description: The credits allowance and usage on a specific Permission.
      title: Credit Share
    tyraelCredits:
      type: object
      properties:
        allocation:
          type: integer
          format: int64
          description: >-
            The number of credits that may be used per billing cycle.

            This field is only returned if the requesting user is the owner of
            the Dataset.
          title: Allocation
        current_allocation:
          type: integer
          format: int64
          description: >-
            The maximum number of credits that may be used in

            This field is only returned if the requesting user is the owner of
            the Dataset.

            the current billing cycle.
          title: CurrentAllocation
        used:
          type: integer
          format: int64
          description: >-
            The number of credits used in the this billing cycle.

            This field is only returned if the requesting user is the owner of
            the Dataset.
          title: Used
        shares:
          type: array
          items:
            $ref: '#/components/schemas/tyraelCreditShare'
          description: |-
            A breakdown of how many credits have been allocated and
            used for each Permission. For non-owners, only the share
            related to their Permission is shown.
          title: Shares
      description: The credits allocation and usage for a Dataset.
      title: Credits
    tyraelDataType:
      type: string
      enum:
        - STRINGS
        - BOOLEANS
        - INTEGERS
        - INTEGER_RANGES
        - STRING_SET
        - INTEGER_SET
      default: STRINGS
      description: >-
        DataType defines the different types of data a Representation can take.

         - STRINGS: String values. Representations of this type are suitable for use with
        a BARCHART aggregation.
         - BOOLEANS: Either True or False. Representations of this type are suitable for use with
        a BARCHART aggregation.
         - INTEGERS: Signed integer values. Representations of this type are suitable for use with
        a HISTOGRAM aggregation.
         - INTEGER_RANGES: Ranges of signed integer values, expressed as tuples of [low, high).
        The lower value is inclusive and the higher value is exclusive.

        Representations of this type are suitable for use with a HISTOGRAM
        aggregation.
         - STRING_SET: String set represents unique list of string.
         - INTEGER_SET: Integer set represents unique list of integers.
    tyraelDataset:
      type: object
      properties:
        private_id:
          type: string
          description: |-
            The private ID assigned to the Dataset.
            This is assigned by the user and unique to them.
          title: Private ID
        owner:
          $ref: '#/components/schemas/tyraelUser'
        public_name:
          type: string
          description: The public name assigned to the Dataset by the Owner.
          title: Public Name
        public_description:
          type: string
          description: The description assigned to the Dataset by the Owner.
          title: Public Description
        create_time:
          type: string
          format: date-time
          description: The time when the Owner created the Dataset.
          title: Create time
        last_queried_time:
          type: string
          format: date-time
          description: >-
            The time when the Dataset was last queried.

            This field is only returned if the requesting user is the owner of
            the Dataset.
          title: Time Last Queried
        expire_time:
          type: string
          format: date-time
          description: >-
            The time when this Dataset expires.

            This field is only returned if the requesting user is the owner of
            the Dataset.
          title: Expire Time
        state:
          $ref: '#/components/schemas/tyraelDatasetState'
        latest_access:
          $ref: '#/components/schemas/tyraelDatasetAccess'
        stats:
          $ref: '#/components/schemas/tyraelDatasetDescription'
        credits:
          $ref: '#/components/schemas/tyraelCredits'
        product:
          $ref: '#/components/schemas/tyraelProduct'
      description: A Dataset.
      title: Dataset
    tyraelDatasetAccess:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/tyraelUser'
        access_time:
          type: string
          format: date-time
          description: The time at which the Dataset was accessed.
          title: Access Time
      description: Access information about a Dataset.
      title: Dataset Access
    tyraelDatasetDescription:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/tyraelDatasetVersion'
        row_count:
          type: string
          format: uint64
          description: The number of queryable rows in the Dataset.
          title: RowCount
        redaction_threshold:
          type: integer
          format: int64
          description: |-
            The minimum number of results required for a bin
            to be included in the results returned when querying this Dataset.
          title: RedactionThreshold
        keys:
          type: array
          items:
            $ref: '#/components/schemas/tyraelKey'
          description: Describes all key columns.
          title: Keys
        categories:
          type: array
          items:
            $ref: '#/components/schemas/tyraelCategory'
          description: Describes all categories.
          title: Categories
        identities:
          type: array
          items:
            $ref: '#/components/schemas/tyraelIdentity'
          description: Describes all Identities.
          title: Identities
      description: >-
        Contains statistical information about the Columns and Categories of the
        Dataset, and the Dataset itself.
      title: Dataset Description
    tyraelDatasetFilter:
      type: object
      properties:
        private_ids:
          type: array
          items:
            type: string
          description: >-
            The filter to be applied to the private IDs of the returned

            Datasets. Only Datasets with private IDs containing one of the
            strings

            specified in this filter will be returned. Case insensitive.
          title: PrivateIds
        public_names:
          type: array
          items:
            type: string
          description: >-
            The filter to be applied to the public names of the

            returned Datasets. Only Datasets with public names containing one of
            the

            string specified in this filter will be returned. Case insensitive.
          title: PublicNames
        public_description:
          type: string
          description: >-
            The filter to be applied to the public descriptions

            of the returned Datasets. Only Datasets with public descriptions

            containing the string specified in this filter will be returned.
            Case

            insensitive.
          title: PublicDescription
        create_time_filter:
          $ref: '#/components/schemas/tyraelTimeRangeFilter'
        owner_ids:
          type: array
          items:
            type: string
          description: Filters Datasets on the specified owner user IDs.
          title: Owner User IDs
        categories:
          $ref: '#/components/schemas/tyraelCategoryFilter'
        project_ids:
          type: array
          items:
            type: string
          description: >-
            The filter to be applied to the projects associated with the
            returned

            Datasets. Only Datasets within projects matching one of the project
            ids

            specified in this filter will be returned. Case insensitive.
          title: ProjectIds
      description: Used to configure filtering of Datasets in List methods.
      title: Dataset Filter
    tyraelDatasetPermissionUsage:
      type: object
      properties:
        recipient:
          $ref: '#/components/schemas/tyraelUser'
        allowance:
          type: integer
          format: int64
          description: |-
            The number of credits that can be used on this Permission
            per billing cycle.
          title: Allowance
        current_allowance:
          type: integer
          format: int64
          description: |-
            The number of credits that can be used on this
            Permission in the current billing cycle.
          title: CurrentAllowance
        used:
          type: integer
          format: int64
          description: The number of credits used by the User in this billing cycle.
          title: Used
        uses_parent_allocation:
          type: boolean
          description: >-
            False if the User has been given their own restricted allowance,

            true if they consume directly from the Dataset's unallocated
            credits.
          title: UsesParentAllocation
      description: Specifies the usage and allowance for a specific Permission.
      title: Permission Usage
    tyraelDatasetSchema:
      type: object
      properties:
        version:
          type: string
          description: |-
            The version of this Dataset. This is based on the number
            of revisions the user has made to their Dataset.
          title: Version
        update_time:
          type: string
          format: date-time
          description: The time when the Dataset was last updated.
          title: Update Time
        categories:
          type: array
          items:
            $ref: '#/components/schemas/tyraelCategory'
          description: The Categories that belong to this Dataset.
          title: Categories
        num_rows:
          type: string
          format: uint64
          description: The number of rows in the Dataset.
          title: NumRows
        redaction_threshold:
          type: integer
          format: int64
          description: >-
            The minimum number of results required for a bin to be included in
            the results

            returned from this Dataset.
          title: RedactionThreshold
        keys:
          type: array
          items:
            $ref: '#/components/schemas/tyraelKey'
          description: The Keys in this Dataset.
          title: Keys
      description: Metadata about a Dataset, such as what Categories it contains.
      title: Dataset Schema
    tyraelDatasetState:
      type: object
      properties:
        bunker_state:
          $ref: '#/components/schemas/tyraelBunkerState'
        progress:
          type: number
          format: double
          description: >-
            Indicates how far through the current state the Bunker is.

            This is valid for UPLOADING, CONVERTING, and NORMALISING states
            only.

            Values start at 0.0 for 0% progress, through to 1.0 for 100%
            complete.
          title: Progress
      description: The state of a Dataset.
      title: Dataset State
    tyraelDatasetThreshold:
      type: object
      properties:
        private_id:
          type: string
          description: Identifies a Dataset.
          title: Private Dataset ID
        threshold:
          type: integer
          format: int32
          description: Threshold is the threshold for the Dataset.
          title: Threshold
      description: DatasetThreshold represents a threshold associated with a dataset.
      title: Dataset Threshold
    tyraelDatasetUsage:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/tyraelUser'
        allocation:
          type: integer
          format: int64
          description: |-
            The total credits available for this Dataset
            per billing cycle.
          title: Allocation
        current_allocation:
          type: integer
          format: int64
          description: |-
            The number of credits available for this Dataset
            in the current billing cycle.
          title: CurrentAllocation
        used:
          type: integer
          format: int64
          description: |-
            The number of credits used for this Dataset in
            the current billing cycle.
          title: Used
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/tyraelDatasetPermissionUsage'
          description: |-
            Contains Usage information for all Permissions on this
            Dataset.
          title: Permissions
      description: The Dataset and metadata for the Dataset.
      title: Dataset Usage
    tyraelDatasetUsageTimeValue:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: >-
            The time at which Usage was at the levels described in Usage.

            If usage is grouped, this will be the timestamp of the end of the
            interval.
          title: Timestamp
        usage:
          $ref: '#/components/schemas/tyraelDatasetUsage'
      description: A single Dataset usage datapoint.
      title: Dataset Usage Value
    tyraelDatasetVersion:
      type: object
      properties:
        version:
          type: string
          description: |-
            A version string to represent the installed software
            version of the Bunker.
          title: Version
        last_normalised_time:
          type: string
          format: date-time
          description: The timestamp of the last normalisation run.
          title: Last Normalised Time
        global_schema_id:
          type: string
          format: int64
          description: The ID of the used global schema version.
          title: Global Schema ID
        global_schema_name:
          type: string
          description: The version/name of the used global schema.
          title: Global Schema Name
        global_schema_status:
          type: string
          description: |-
            The status of the used global schema,
            e.g. "beta-1", "release".
          title: Global Schema Status
        dataset_version:
          type: string
          description: >-
            The version for the internal dataset held by the Bunker that should
            be used

            when querying the Bunker.
          title: Dataset Version
      description: >-
        Information about the version of the Bunker software, the global schema
        in use and the Dataset.
      title: Dataset Version
    tyraelDatasetWithKeys:
      type: object
      properties:
        private_id:
          type: string
          description: Is the private ID of the Dataset.
          title: Private ID
        keys:
          type: array
          items:
            type: string
          description: >-
            Is an ordered list of keys that can be used when joining this
            dataset to another dataset.

            When this dataset is joined to another dataset each row in the
            datasets is joined using the key order defined here.

            If a key is missing from a specific row, the next key in the order
            is used.
          title: Keys
      description: >-
        Represents a dataset private id with an associated list of keys to be
        used when joining the dataset.
      title: Dataset With Keys
    tyraelDimension:
      type: object
      properties:
        value:
          type: string
          description: |-
            The value associated with this Dimension.
            This can take several different forms, including:

            1. String values, e.g. `"Engineer"`.
            1. Integer values, e.g. `"144"`.
            1. Boolean values, e.g. `"true"`.
            1. Integer Ranges, e.g. `"[5, 10)"`.
                This is a value which contains a lower and an upper value in a single string,
                of the format `"[x, y)"`, where `x` is the lower value, and `y` is the upper value.
                `[` means the value is inclusive and `)` means the value is exclusive. For example:
                `"[5, 10)"` means an integer range including the values `5`, `6`, `7`, `8` and `9`.
                Note that `10` is _not_ included.
          title: Value
        category:
          type: string
          description: The name of the Category that this Dimension describes.
          title: Category
        count:
          type: integer
          format: int64
          description: The number of results in this Dimension.
          title: Count
        continuous:
          type: boolean
          description: >-
            Indicates whether the values represent continuous or discrete data.
            Values of the form Integer Ranges

            will have this value set to true. Values of the form String values
            will have this value set to false.
          title: Continuous
        private_id:
          type: string
          description: The private ID of the Dataset this Category comes from.
          title: Dataset Private ID
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/tyraelDimension'
          description: Child dimensions of this Dimension.
          title: Child dimensions
      description: >-
        A hierarchy of dimensional data broken down by labels. The result of an
        InfoSum Insight query or a child of another dimension.
      title: Dimension
    tyraelDimensionPlan:
      type: object
      properties:
        private_id:
          type: string
          description: Identifies a Dataset.
          title: Private Dataset ID
        category:
          type: string
          description: Category is the category this Dimension describes.
          title: Category
        bins:
          type: array
          items:
            type: string
          description: Bins is the list of expected bins which this Dimension will contain.
          title: Bins
        inferred_bins:
          type: boolean
          description: >-
            It indicates whether the bins in the results we inferred by the
            platform or explicitly specified by the

            user in the query.
          title: InferredBins
      description: Dimension Plan describes a Dimension of the expected result.
      title: Dimension Plan
    tyraelDirectionFilter:
      type: string
      enum:
        - ANY_DIRECTION
        - INCOMING
        - OUTGOING
      default: ANY_DIRECTION
      description: >-
        DirectionFilter specifies whether to return all Permissions, or only
        those that

        are incoming or outgoing.

         - ANY_DIRECTION: Shows all Permissions.
         - INCOMING: Only shows incoming Permissions.
         - OUTGOING: Only shows outgoing Permissions.
    tyraelError:
      type: object
      properties:
        message:
          type: string
          description: The error message explaining the error.
          title: Error Message
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Any error metadata that may be relevant.
          title: Error Metadata
      description: An error with an explanation.
      title: Error
    tyraelExplainQueryRequest:
      type: object
      properties:
        query:
          type: string
          description: |-
            The Query whose execution will be explained. This takes the
            format of an InfoSum Query Language Query. See
            the documentation of the InfoSum Query Language
            for more information.
          title: Query
        path_overrides:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPathOverride'
          description: >-
            A list of instructions on how to connect two datasets, overriding
            the automatic choices

            made by the core engine.
          title: Path Overrides
      description: >-
        Used to explain the choices made by the platform before executing a
        query.
      title: Explain Query Request
    tyraelExplainQueryResponse:
      type: object
      properties:
        query_plan:
          $ref: '#/components/schemas/tyraelQueryPlan'
        hop_table:
          type: array
          items:
            $ref: '#/components/schemas/tyraelHop'
          description: >-
            HopTable is the list of all joins that have taken place between
            datasets.
          title: HopTable
      description: >-
        An explanation of the choices made by the platform before executing the
        query.
      title: Explain Query Response
    tyraelFormField:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the field.
          title: Id
        label:
          type: string
          description: A human readable label for the field.
          title: Label
        options:
          type: array
          items:
            type: string
          description: |-
            A suggestion for possible values for this field. Not all fields will
            specify Options.
          title: Options
      description: >-
        Fields specify the values that must be specified to configurea Push
        Connector.
      title: Form Field
    tyraelFormPanel:
      type: object
      properties:
        label:
          type: string
          description: A human readable label for the panel.
          title: Label
        fields:
          type: array
          items:
            $ref: '#/components/schemas/tyraelFormField'
          description: A list of fields for the panel.
          title: Fields
      description: Panels make up the Form for a Push Connector.
      title: Form Panel
    tyraelGetActivationResponse:
      type: object
      properties:
        activation:
          $ref: '#/components/schemas/tyraelActivation'
      description: |-
        GetActivationResponse is the response from the GetActivation
        method.
      title: Get Activation Response
    tyraelGetConnectionResponse:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/tyraelConnection'
      description: Metadata for a single Connection between two Datasets.
      title: Connection Response
    tyraelGetDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/tyraelDataset'
        schema:
          $ref: '#/components/schemas/tyraelDatasetSchema'
      description: The Dataset and metadata for the Dataset.
      title: Dataset Response
    tyraelGetDatasetUsageResponse:
      type: object
      properties:
        timeseries:
          type: array
          items:
            $ref: '#/components/schemas/tyraelDatasetUsageTimeValue'
          description: >-
            An array of datapoints that describe the Usage for a Dataset over
            time.
          title: Timeseries
      description: The credit usage information for the Dataset.
      title: Dataset Usage Response
    tyraelGetPermissionUsageResponse:
      type: object
      properties:
        timeseries:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPermissionUsageTimeValue'
          description: >-
            An array of datapoints that describe the Usage for a Permission over
            time.
          title: Timeseries
      description: The response from the GetPermissionUsage method.
      title: Get Permissions Usage Response
    tyraelGetPermittedPushConnectorsRequest:
      type: object
      properties:
        private_id:
          type: string
          description: The Private ID of the Dataset to retrieve, as assigned by the user.
          title: Private Dataset ID
      description: The dataset to return a list of permitted Push Connectors for.
      title: Get Permitted Push Connectors Request
    tyraelGetPermittedPushConnectorsResponse:
      type: object
      properties:
        push_connectors:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPushConnector'
          description: A list of the permitted Push Connectors.
          title: PushConnectors
      description: The list of permitted Push Connectors.
      title: Get Permitted Push Connectors Response
    tyraelGetPushConnectorFormResponse:
      type: object
      properties:
        form:
          $ref: '#/components/schemas/tyraelPushConnectorForm'
      description: The Form for a Push Connector.
      title: Get Push Connector Form Response
    tyraelHop:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The ID of the Hop.
          title: Id
        join_id:
          type: integer
          format: int32
          description: The ID of the Join that this hop is part of.
          title: JoinID
        from_private_id:
          type: string
          description: The Private ID of the dataset on which the join starts.
          title: From Private Dataset ID
        to_private_id:
          type: string
          description: The Private ID of the dataset on which the join ends.
          title: To Private Dataset ID
        key_name:
          type: string
          description: The name of the Key used for the join.
          title: Key Name
        overlap:
          type: string
          format: int64
          description: The approximate overlap of keys between the from and to datasets.
          title: Overlap
        duplicates:
          type: string
          format: int64
          description: >-
            The approximate number of duplicate keys we expect when joining the
            from and to datasets

            on the specified key.
          title: Duplicates
        from_dataset_size:
          type: string
          format: int64
          description: The size of the from dataset.
          title: FromDatasetSize
        to_dataset_size:
          type: string
          format: int64
          description: The size of the to dataset.
          title: ToDatasetSize
        max_overcounted_values:
          type: integer
          format: int32
          description: >-
            The maximum number of additional keys (and as a result additional
            values) that can be

            expected due to errors in the Bloom Filter used when joining the two
            datasets.
          title: MaxOvercountedValues
        representation:
          $ref: '#/components/schemas/tyraelRepresentationPlan'
      description: >-
        Hop represents a join that will take place between two datasets as part
        of executing a query.
      title: Hop
    tyraelIdentity:
      type: object
      properties:
        name:
          type: string
          description: The user-assigned name of the contents of the Output Data.
          title: Name
      description: An Identity column in an Identity Dataset.
      title: Identity
    tyraelIdentityQualityMeasures:
      type: object
      properties:
        redaction_threshold_outlier:
          type: number
          format: float
          description: >-
            Indicates if one or more datasets may be obscuring the resolution of
            the results by

            being significantly different from the others.
          title: Redaction Threshold Outlier
        model_accuracy:
          type: number
          format: float
          description: >-
            This is an indication of how accurately the engine represented the
            datasets involved when executing the query.

            Small errors are introduced in the query results due to internal
            statistical representations of the data during query execution.
          title: Model Accuracy
      description: >-
        A list of statistics that provide an indication of the quality of the
        Identity query.
      title: Identity Quality Measures
    tyraelIdentityQueryStatus:
      type: object
      properties:
        identity_query_id:
          type: string
          description: The ID of the Identity Query.
          title: Identity Query ID
        query_completed:
          type: boolean
          description: Whether the Query has finished or not.
          title: Query Completed
        query_error:
          $ref: '#/components/schemas/rpcStatus'
        query_response:
          $ref: '#/components/schemas/tyraelIdentityResponse'
        push_completed:
          type: boolean
          description: Indicates whether or not the Push is still in progress.
          title: Push Completed
        push_error:
          $ref: '#/components/schemas/rpcStatus'
      description: Status of a started Identity Query.
      title: Indentity Query Status
    tyraelIdentityResponse:
      type: object
      properties:
        identities:
          type: array
          items:
            type: string
          description: The identity types that were requested.
          title: Identities
        total_rows:
          type: integer
          format: int64
          description: |-
            Total Rows
            The total number of rows in the result.
        quality_measures:
          $ref: '#/components/schemas/tyraelIdentityQualityMeasures'
      description: Information about the result of an Identity Query.
      title: Indentity Response
    tyraelInsightQualityMeasures:
      type: object
      properties:
        redaction_threshold_outlier:
          type: number
          format: float
          description: >-
            Indicates if one or more datasets may be obscuring the resolution of
            the results by

            being significantly different from the others.
          title: Redaction Threshold Outlier
        rounding_threshold_outlier:
          type: number
          format: float
          description: >-
            Indicates if one or more datasets may be obscuring the resolution of
            the results by

            being significantly different from the others.
          title: Rounding Threshold Outlier
        model_accuracy:
          type: number
          format: float
          description: >-
            This is an indication of how accurately the engine represented the
            datasets involved when executing the query.

            Small errors are introduced in the query results due to internal
            statistical representations of the data during query execution.

            Typically these errors are small and obscured by rounding.
          title: Model Accuracy
        result_precision_include_empty_bins:
          type: number
          format: float
          description: This includes empty bins when calculating the average bin size.
          title: Result Precision Include Empty Bins
        result_precision_exclude_empty_bins:
          type: number
          format: float
          description: This excludes empty bins when calculating the average bin size.
          title: Result Precision Exclude Empty Bins
      description: >-
        A list of statistics that provide an indication of the quality of the
        Insight query.
      title: Insight Quality Measures
    tyraelJoinPlan:
      type: object
      properties:
        combinator:
          $ref: '#/components/schemas/tyraelCombinator'
        id:
          type: integer
          format: int32
          description: >-
            ID is the unique ID of the join within the scope of a single
            response.
          title: ID
        from_private_id:
          type: string
          description: >-
            FromPrivateId is the private ID of the Dataset from which the join
            will originate.
          title: FromPrivateId
        to_private_id:
          type: string
          description: >-
            ToPrivateId is the private ID of the Dataset on which the join will
            terminate.
          title: ToPrivateId
        representation:
          $ref: '#/components/schemas/tyraelRepresentationPlan'
        keys:
          $ref: '#/components/schemas/tyraelKeyPlan'
      description: JoinPlan describes a tree of joins between datasets.
      title: Join Plan
    tyraelKey:
      type: object
      properties:
        label:
          type: string
          description: The Keys' display name.
          title: Label
        null_fraction:
          type: number
          format: double
          description: >-
            The fraction of the values in this Key that are `null`,

            in the range (0, 1], representating a percentage value between 0%
            and 100%.
          title: NullFraction
        num_distinct:
          type: number
          format: double
          description: >-
            An estimated number of distinct values in the Key, if positive, or

            the number of distinct values divided by the number of rows, if
            negative.


            Sign  | Negative     | Positive

            ----- | ------------ | --------

            Value | Uniques/Rows | Uniques
          title: NumDistinct
      description: A Dataset Key, for joining between Datasets.
      title: Key
    tyraelKeyJoinStats:
      type: object
      properties:
        key_name:
          type: string
          description: KeyName is the name of the Key used for the join.
          title: KeyName
        overlap:
          type: string
          format: int64
          description: >-
            Overlap is the approximate overlap of keys between the from and to
            datasets.
          title: Overlap
        duplicates:
          type: string
          format: int64
          description: >-
            Duplicates is the approximate number of duplicate keys we expect
            when joining the from and to datasets

            on the specified key.
          title: Duplicates
        from_dataset_size:
          type: string
          format: int64
          description: >-
            FromDatasetSize is the approximate number of keys in the dataset
            from which the join will originate.
          title: FromDatasetSize
        to_dataset_size:
          type: string
          format: int64
          description: >-
            ToDatasetSize is the approximate number of keys in the dataset on
            which the join will terminate.
          title: ToDatasetSize
      description: Key Join Stats contains information about a join for a given Key.
      title: Key Join Stats
    tyraelKeyPlan:
      type: object
      properties:
        max_overcounted:
          type: integer
          format: int32
          description: >-
            MaxOvercounted is the total maximum number of additional keys (and
            as a result additional values) that can be

            expected due to errors in the Bloom Filter used when joining the two
            datasets using the specified keys.
          title: MaxOvercounted
        used:
          type: array
          items:
            type: string
          description: The list of all the key names that participated in the join.
          title: Used
        keys:
          type: array
          items:
            $ref: '#/components/schemas/tyraelKeyJoinStats'
          description: The list of keys that could participate in the join.
          title: Keys
        inferred:
          type: boolean
          description: >-
            It indicates whether the Key was inferred by the platform or
            explicitly specified by the

            user in the query.
          title: Inferred
      description: >-
        Key Plan is a description of the keys that have participated in the join
        and any remaining keys that did not participate in the join.
      title: Key Plan
    tyraelListActivationPushConnectorsResponse:
      type: object
      properties:
        push_connectors:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPushConnector'
          description: >-
            Is a list of permitted push connector IDs for the specified
            activation query,

            and their associated display names.
          title: PushConnectors
      description: >-
        ListActivationPushConnectorsResponse is the output of the
        ListActivationPushConnectors endpoint.
      title: >-
        List Push Connectors Response is the output of the
        ListActivationPushConnectors endpoint
    tyraelListActivationsResponse:
      type: object
      properties:
        activations:
          type: array
          items:
            $ref: '#/components/schemas/tyraelActivationSummary'
          description: >-
            The list of activations which met the activation filter
            requirements.
          title: Activations
      description: >-
        ListActivationsResponse is the response from the ListActivations
        endpoint.
      title: List Activation Queries Response
    tyraelListBasePushConnectorsResponse:
      type: object
      properties:
        push_connectors:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPushConnector'
          description: A list of base Push Connector IDs and their associated names.
          title: PushConnectors
      description: >-
        The list of Push Connectors that can be used to create new Push
        Connectors.
      title: List Base Push Connectors Response
    tyraelListConnectionsResponse:
      type: object
      properties:
        connections:
          type: array
          items:
            $ref: '#/components/schemas/tyraelConnection'
          description: |-
            A list of all Connections between the users Datasets and
            those the user has been granted access to.
          title: Connections
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/tyraelDataset'
          description: A is a list of Datasets included.
          title: Datasets
      description: A list of Connections, as returned by the ListConnections method.
      title: Connections List
    tyraelListDatasetsFilter:
      type: object
      properties:
        ownership:
          $ref: '#/components/schemas/tyraelOwnershipFilter'
        datasets:
          $ref: '#/components/schemas/tyraelDatasetFilter'
      description: Used to filter which Datasets to return in ListDatasets.
      title: List Dataset Filter
    tyraelListDatasetsResponse:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/tyraelDataset'
          description: The Datasets returned by the ListDatasets method.
          title: Datasets
      description: A list of Datasets, as returned from the ListDatasets method.
      title: Datasets List
    tyraelListPermissionsFilter:
      type: object
      properties:
        direction:
          $ref: '#/components/schemas/tyraelDirectionFilter'
        accepted:
          $ref: '#/components/schemas/tyraelAcceptedFilter'
        owned_datasets:
          $ref: '#/components/schemas/tyraelDatasetFilter'
        other_datasets:
          $ref: '#/components/schemas/tyraelDatasetFilter'
      description: >-
        Contains the filter expressions used to filter the Listing of
        Permissions.
      title: List Permissions Filter
    tyraelListPermissionsResponse:
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPermission'
          description: Contains the requested Permissions.
          title: Permissions
      description: The response from the ListPermissions method.
      title: List Permissions Response
    tyraelListPushConnectorsResponse:
      type: object
      properties:
        push_connectors:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPushConnector'
          description: A list of Push Connector IDs and their associated names.
          title: PushConnectors
      description: The list of Push Connectors that the recipient can use.
      title: List Push Connectors Response
    tyraelOccurrence:
      type: object
      properties:
        value:
          type: string
          description: The Value, as a string.
          title: Value
        frequency:
          type: number
          format: double
          description: >-
            The frequency with which this Value appears in the Representation,

            in the range (0, 1], representating a percentage value between 0%
            and 100%.
          title: Frequency
      description: >-
        An occurrence of a value, and with what frequency it appears in the
        Representation.
      title: Occurrence
    tyraelOwnershipFilter:
      type: string
      enum:
        - ANY_OWNERSHIP
        - OWNED
        - NOT_OWNED
      default: ANY_OWNERSHIP
      description: >-
        OwnershipFilter specifies whether to return all Datasets, or only those
        that are

        owned or not owned by the user.

         - ANY_OWNERSHIP: Returns all Datasets the user has access to.
         - OWNED: Only returns Datasets owned by the user.
         - NOT_OWNED: Only returns Datasets not owned by the user.
    tyraelPathOverride:
      type: object
      properties:
        source_dataset:
          $ref: '#/components/schemas/tyraelDatasetWithKeys'
        destination_private_id:
          type: string
          description: Is the private ID of the Dataset that the path ends at.
          title: Destination Private ID
      description: >-
        Contains instructions on how to join two datasets, overriding the
        automatic choices made by the core engine.
      title: Path Override
    tyraelPermission:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/tyraelUser'
        private_id:
          type: string
          description: Private ID of the Dataset for the requesting User.
          title: Private ID
        recipient:
          $ref: '#/components/schemas/tyraelUser'
        create_time:
          type: string
          format: date-time
          description: Time when the owner offered Permission to the Recipient.
          title: Create Time
        accept_time:
          type: string
          format: date-time
          description: Time when the Permission was accepted by the Recipient.
          title: Accept Time
        accepted:
          type: boolean
          description: Indicates whether the Permission has been accpeted by the Recipient.
          title: Accepted
        credits:
          $ref: '#/components/schemas/tyraelCreditShare'
        dataset_public_name:
          type: string
          description: Indicates the name of the Dataset the Permission references.
          title: DatasetPublicName
        dataset_public_desc:
          type: string
          description: Indicates the name of the Dataset the Permission references.
          title: DatasetPublicDesc
      description: >-
        An explicit Permission to access a Dataset given by a user to another
        user.
      title: Permission
    tyraelPermissionUsage:
      type: object
      properties:
        allowance:
          type: integer
          format: int64
          description: |-
            The number of credits that can be used on this Permission
            per billing cycle.
          title: Allowance
        current_allowance:
          type: integer
          format: int64
          description: |-
            The number of credits that can be used on this
            Permission in the current billing cycle.
          title: CurrentAllowance
        used:
          type: integer
          format: int64
          description: The number of credits used on this Permission in this billing cycle.
          title: Used
        uses_parent_allocation:
          type: boolean
          description: >-
            UsesParentAllocation is false if the User has been given their own

            restricted allowance, or true if they consume directly from the
            Dataset's

            unallocated credits.
        parent_allocation:
          type: integer
          format: int64
          description: >-
            The number of credits allocated to the parent Dataset

            per billing cycle.

            This field is only returned if the requesting user is the owner of
            the Dataset.
          title: ParentAllocation
        current_parent_allocation:
          type: integer
          format: int64
          description: >-
            The number of credits currently allocated to

            the parent Dataset in the current billing cycle.

            This field is only returned if the requesting user is the owner of
            the Dataset.
          title: CurrentParentAllocation
      description: Contains credit usage for a specific Permission.
      title: Permission Usage
    tyraelPermissionUsageTimeValue:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: >-
            The time at which Usage was at the levels described in Usage.

            If usage is grouped, this will be the timestamp of the end of the
            interval.
          title: Timestamp
        usage:
          $ref: '#/components/schemas/tyraelPermissionUsage'
      description: A single Permission usage datapoint.
      title: Permission Usage Value
    tyraelProduct:
      type: string
      enum:
        - INSIGHT
        - IDENTITY
      default: INSIGHT
      description: |-
        Product enumerates the different Dataset Product types supported.

         - INSIGHT: An Insight Dataset which can be used in Insight queries.
         - IDENTITY: An Identity Dataset which can be used in Identity queries.
    tyraelPush:
      type: object
      properties:
        push_id:
          type: string
          description: The unique identifier for the push.
          title: Push ID
        status:
          $ref: '#/components/schemas/tyraelPushStatus'
        connector_type:
          type: string
          description: The type of the connector used for the push.
          title: Connector Type
        pushed_at:
          type: string
          format: date-time
          description: The time when the push was executed.
          title: Pushed At
        completed_at:
          type: string
          format: date-time
          description: The time when the push completed.
          title: Completed At
        push_error:
          $ref: '#/components/schemas/rpcStatus'
        push_successful:
          type: boolean
          description: Indicates whether the push successfully completed.
          title: Push Successful
      description: Push contains details about a specific push of an activation.
    tyraelPushActivationResultResponse:
      type: object
      properties:
        push_id:
          type: string
          description: Is the unique identifier for the push request.
          title: Push ID
      description: >-
        PushActivationResultResponse is the output of the PushActivationResult
        endpoint.
      title: Push activation query results request
    tyraelPushConnector:
      type: object
      properties:
        id:
          type: string
          description: The ID of the push connector.
          title: Id
        name:
          type: string
          description: The display name of the push connector.
          title: Name
      description: The Name and ID for a Push Connector.
      title: Push Connector
    tyraelPushConnectorConfig:
      type: object
      properties:
        id:
          type: string
          description: The ID of the Push Connector.
          title: Id
        config:
          type: object
          additionalProperties:
            type: string
          description: A map of Configuration Form field IDs to their values.
          title: Config
      description: The configuration for a Push Connector.
      title: Push Connector Config
    tyraelPushConnectorForm:
      type: object
      properties:
        panels:
          type: array
          items:
            $ref: '#/components/schemas/tyraelFormPanel'
          description: >-
            A list of panels. Panels contain fields which should be set to
            configure

            the Push Connector.
          title: Panels
      description: The Form for a Push Connector.
      title: Push Connector Form
    tyraelPushStatus:
      type: string
      enum:
        - PUSH_PENDING
        - PUSH_RUNNING
        - PUSH_COMPLETED
      default: PUSH_PENDING
      description: |-
        PushStatus defines the different states that a Push request can be in.

         - PUSH_PENDING: PUSH_PENDING indicates that the push is waiting to be executed.
         - PUSH_RUNNING: PUSH_RUNNING indicates that the push is currently being executed.
         - PUSH_COMPLETED: PUSH_COMPLETED indicates that the push has completed execution.
    tyraelQuery:
      type: object
      properties:
        query_id:
          type: string
          description: The ID of the Query.
          title: Query ID
        done:
          type: boolean
          description: Whether the Query has finished or not.
          title: Done
      description: A started Query.
      title: Query
    tyraelQueryPlan:
      type: object
      properties:
        query:
          type: string
          description: Query is the query to be explained
          title: Query
        plan:
          $ref: '#/components/schemas/tyraelAggregationPlan'
        results:
          $ref: '#/components/schemas/tyraelResultPlan'
      description: >-
        QueryPlan is the representation of how the query will be executed and
        the decisions made by the platform as part of the execution.
      title: Query Plan
    tyraelQueryResult:
      type: object
      properties:
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/tyraelDimension'
          description: A hierarchical result of an InfoSum Query Language SELECT statement.
          title: Result Dimensions
        audience:
          type: integer
          format: int64
          description: |-
            The total number of audience members contained in
            this result set.
          title: Audience
        quality_measures:
          $ref: '#/components/schemas/tyraelInsightQualityMeasures'
      description: The Result of a Query.
      title: Query Result
    tyraelRedactionThreshold:
      type: object
      properties:
        threshold:
          type: integer
          format: int32
          description: >-
            Threshold is the redaction threshold that will be applied to all
            bins in the results.
          title: Threshold
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/tyraelDatasetThreshold'
          description: >-
            Datasets is a list of redaction thresholds for each dataset involved
            in the query.
          title: Datasets
      description: >-
        Redaction Threshold describes the redaction threshold that will be used
        for the values in the bins. It also contains the redaction thresholds
        for all the Datasets involved in the query.
      title: Redaction Threshold
    tyraelRemoveDemoDatasetsResponse:
      type: object
      description: Response from the RemoveDemoDatasets method.
      title: Remove Demo Datasets Response
    tyraelRepresentation:
      type: object
      properties:
        label:
          type: string
          description: The text label of the Representation, such as "Binary Gender".
          title: Label
        data_type:
          $ref: '#/components/schemas/tyraelDataType'
        precision:
          type: number
          format: double
          description: >-
            How accurate this Representation is to the source data. It is

            in the range (0, 1], representating a percentage value between 0%
            and 100%.

            Things that affect the Precision of a Representation include any
            data transformations

            that had to be performed to match the source data into this
            Representation.
          title: Precision
        statistics:
          $ref: '#/components/schemas/tyraelStatistics'
        possible_values:
          type: array
          items:
            type: string
          description: >-
            Contains the list of values or ranges that this representation can
            contain. If the

            PossibleValues contains an empty list then it represents that it can
            be any value defined by

            the DataType value.
          title: PossibleValues
      description: A Representation of a Category, such as "Binary Gender".
      title: Representation
    tyraelRepresentationPlan:
      type: object
      properties:
        category:
          type: string
          description: Category is the name of the category
          title: Category
        selected_representation:
          type: string
          description: SelectedRepresentation is the name of the selected representation.
          title: SelectedRepresentation
        inferred:
          type: boolean
          description: >-
            Inferred indicate whether the representation was inferred by the
            platform or explicitly specified by the

            user in the query.
          title: Inferred
        bins:
          type: array
          items:
            type: string
          description: The bins specified in the query.
          title: Bins
        filter:
          type: string
          description: The Filter specified in the query.
          title: Filter
        representations:
          type: array
          items:
            $ref: '#/components/schemas/tyraelRepresentationStats'
          description: >-
            RepresentationStats is the list of all possible representations for
            the category.
          title: RepresentationStats
      description: >-
        Representation Plan is the representation of the Category used when
        performing an aggregation or filter.
      title: Representation Plan
    tyraelRepresentationStats:
      type: object
      properties:
        name:
          type: string
          description: Name is the name of the representation.
          title: Name
        type:
          type: string
          description: Type is the type of the representation.
          title: Type
        score:
          type: number
          format: float
          description: Score is the score associated with the representation.
          title: Score
        precision:
          type: number
          format: float
          description: Precision is the precision of the representation.
          title: Precision
        bins:
          type: array
          items:
            type: string
          description: >-
            The list of bins that is expected to be used with this
            Representation.
          title: Bins
        filter:
          type: string
          description: The Filter that would be applied for this representation.
          title: Filter
      description: Representation Stats contains information about a representation.
      title: Representation Stats
    tyraelResultPlan:
      type: object
      properties:
        max_overcounted_values:
          type: integer
          format: int32
          description: >-
            MaxOvercountedValues is the maximum number of additional keys (and
            as a result additional values) that can be

            expected due to errors in the Bloom Filter used when joining the two
            datasets.
          title: MaxOvercountedValues
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/tyraelDimensionPlan'
          description: Dimensions describes the expected Dimensions in the results
          title: Dimensions
        filter:
          type: string
          description: The filter that has been applied to the results.
          title: Filter
        rounding_threshold:
          $ref: '#/components/schemas/tyraelRoundingThreshold'
        redaction_threshold:
          $ref: '#/components/schemas/tyraelRedactionThreshold'
      description: >-
        Result Plan is the expected format of the results from the query and
        decisions made by the platform when generating the results.
      title: Result Plan
    tyraelRoundingThreshold:
      type: object
      properties:
        threshold:
          type: integer
          format: int32
          description: >-
            Threshold is the rounding threshold that will be applied to all bins
            in the results.
          title: Threshold
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/tyraelDatasetThreshold'
          description: >-
            Datasets is a list of rounding thresholds for each dataset involved
            in the query.
          title: Datasets
      description: >-
        Rounding Threshold describes the rounding threshold that will be used
        for the values in the bins. It also contains the rounding thresholds for
        all the Datasets involved in the query.
      title: Rounding Threshold
    tyraelSort:
      type: object
      properties:
        by:
          type: string
          description: By is the field to sort by.
        order:
          $ref: '#/components/schemas/SortOrder'
      description: User to configure sorting of results.
      title: Sort
    tyraelStatistics:
      type: object
      properties:
        average:
          type: number
          format: double
          description: |-
            The average value of the column.
            Only populated if the type of the Representation is numeric.
          title: Average
        standard_deviation:
          type: number
          format: double
          description: |-
            The standard deviation of the column-
            Only populated if the type of the Representation is numeric.
          title: StandardDeviation
        percentiles:
          type: array
          items:
            type: number
            format: double
          description: >-
            Array of 101 elements representing percentiles from 0 to 100 with
            stepsize 1.

            The first element is the minimum value found and the last element is
            the maximum value found.

            Only populated if the type of the Representation is numeric.
          title: Percentiles
        null_fraction:
          type: number
          format: double
          description: >-
            The fraction of the values in this Representation that are `null`,

            in the range (0, 1], representating a percentage value between 0%
            and 100%.
          title: NullFraction
        num_distinct:
          type: number
          format: double
          description: >-
            An estimated number of distinct values in the Representation, if
            positive, or

            the number of distinct values divided by the number of rows, if
            negative.


            Sign  | Negative     | Positive

            ----- | ------------ | --------

            Value | Uniques/Rows | Uniques
          title: NumDistinct
        most_common:
          type: array
          items:
            $ref: '#/components/schemas/tyraelOccurrence'
          description: |-
            An array of the most common elements in the Representation, if there
            are any that occur with greater frequency than others.
          title: MostCommon
      description: >-
        Statistical information for a Representation. Numerical statistics are
        only supplied for numerical Representations.
      title: Statistics
    tyraelTimeGrouping:
      type: string
      enum:
        - TIME_GROUPING_UNSPECIFIED
        - DAY
        - WEEK
        - MONTH
        - YEAR
      default: TIME_GROUPING_UNSPECIFIED
      description: |-
        TimeGrouping specifies how a time series should be grouped.

         - TIME_GROUPING_UNSPECIFIED: Default value - should not be used.
         - DAY: All values within a single day will be rolled up into a single
        datapoint.
         - WEEK: All values within a single week (Monday - Sunday) will be
        rolled up into a single datapoint.
         - MONTH: All values within a single calendar month will be rolled up
        into a single datapoint.
         - YEAR: All values within a single calendar year will be rolled up into
        a single datapoint.
    tyraelTimeRangeFilter:
      type: object
      properties:
        start_time:
          type: string
          format: date-time
          description: |-
            Defines the earliest time the filter is applied from. The filter
            matches all dates after this point in time, inclusive.
          title: Start
        end_time:
          type: string
          format: date-time
          description: |-
            Defines the time the filter is applied until. The filter matches all
            dates before this point in time, inclusive.
          title: End
      description: >-
        Used to filter events to those that occurred between two timestamps.
        Both Start and End are optional. If either is not specified, the time
        range is open-ended in that direction.
      title: Timerange Filter
    tyraelUser:
      type: object
      properties:
        id:
          type: string
          description: |-
            The ID of the User. This is often used as a parameter to endpoints.
            It uniquely identifies this user in the Platform.
          title: ID
        display_name:
          type: string
          description: The display name of the user, as chosen by themselves.
          title: Display name
      description: Describes a user in the InfoSum Platform.
      title: User
    tyraelValidateActivationQueryRequest:
      type: object
      properties:
        query:
          type: string
          description: |-
            The query to be validated. This takes the format of an IQL Query.
            See the documentation of the IQL for more information.
          title: Query
        path_overrides:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPathOverride'
          description: |-
            A list of instructions on how to connect two datasets,
            overriding the automatic choices made by the core engine.
          title: Path Overrides
        string_literal_column:
          $ref: '#/components/schemas/tyraelActivationStringLiteral'
      description: >-
        ValidateActivationQueryRequest is the output of the
        ValidateActivationQuery endpoint.
      title: Validate activation query request
    tyraelValidateActivationQueryResponse:
      type: object
      properties:
        success:
          type: boolean
          description: True if the Activation Query was successfully validated.
          title: Success
      description: >-
        ValidateActivationQueryResponse is the output of the
        ValidateActivationQuery method.
      title: Validate activation query response
    tyraelValidateIdentityQueryRequest:
      type: object
      properties:
        query:
          type: string
          description: |-
            The Query that should be queued. This takes the
            format of an InfoSum Identity Query. See
            the documentation of the InfoSum Identity Query Language
            for more information.
          title: Query
        path_overrides:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPathOverride'
          description: >-
            A list of instructions on how to connect two datasets, overriding
            the automatic choices

            made by the core engine.
          title: Path Overrides
        push_connector_config:
          $ref: '#/components/schemas/tyraelPushConnectorConfig'
      description: Used to validate an Identity Query before executing it.
      title: Validate Identity Request
    tyraelValidateIdentityQueryResponse:
      type: object
      properties:
        success:
          type: boolean
          description: True if the Identity Query was successully validated.
          title: Success
      description: Whether the Identity Query was successfully validated.
      title: Validate Identity Query Response
    tyraelValidateQueryRequest:
      type: object
      properties:
        query:
          type: string
          description: |-
            The Query that should be validated. This takes the
            format of an InfoSum Query Language Query. See
            the documentation of the InfoSum Query Language
            for more information.
          title: Query
        path_overrides:
          type: array
          items:
            $ref: '#/components/schemas/tyraelPathOverride'
          description: >-
            A list of instructions on how to connect two datasets, overriding
            the automatic choices

            made by the core engine.
          title: Path Overrides
      description: Used to validate a Query before executing it.
      title: Validate Request
    tyraelValidateQueryResponse:
      type: object
      properties:
        success:
          type: boolean
          description: True if the Query was successfully validated.
          title: Success
      description: Whether the Query was successfully validated.
      title: Validate Query Response
