/*! For license information please see main.897a622e.js.LICENSE.txt */
(self.webpackChunkinfosum_docs=self.webpackChunkinfosum_docs||[]).push([[179],{723:function(e,t,n){"use strict";n.d(t,{Z:function(){return u}});var r=n(67294),a=n(87462),_=n(68356),i=n.n(_),s=n(16887),E={"01a85c17":[function(){return Promise.all([n.e(532),n.e(13)]).then(n.bind(n,91223))},"@theme/BlogTagsListPage",91223],"031cd6c4":[function(){return n.e(107).then(n.t.bind(n,91421,19))},"~blog/default/infosum-docs-blog-tags-developer-008-list.json",91421],"0a2b248b":[function(){return Promise.all([n.e(532),n.e(887)]).then(n.bind(n,776))},"@site/docs/getting-started/uploading-a-file-to-a-filevault.mdx",776],"0e384e19":[function(){return n.e(671).then(n.bind(n,59881))},"@site/docs/intro.md",59881],17896441:[function(){return Promise.all([n.e(532),n.e(142),n.e(918)]).then(n.bind(n,88043))},"@theme/DocItem",88043],"1be78505":[function(){return Promise.all([n.e(532),n.e(514)]).then(n.bind(n,47994))},"@theme/DocPage",47994],"1cf37229":[function(){return n.e(186).then(n.t.bind(n,91137,19))},"~blog/default/infosum-docs-blog-tags-infosum-6fc.json",91137],"1df93b7f":[function(){return Promise.all([n.e(532),n.e(237)]).then(n.bind(n,78391))},"@site/src/pages/index.tsx",78391],"1e8ffffe":[function(){return n.e(720).then(n.t.bind(n,4479,19))},"~blog/default/infosum-docs-blog-tags-welcome-ec1-list.json",4479],"26dbebdc":[function(){return n.e(577).then(n.t.bind(n,69162,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/plugin-route-context-module-100.json",69162],"2c0aace0":[function(){return n.e(569).then(n.t.bind(n,41837,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/redocApiSpecV1.2-plugin-redoc-0.json",41837],"3ab16766":[function(){return n.e(318).then(n.t.bind(n,63140,19))},"~blog/default/infosum-docs-blog-tags-documentation-ee8-list.json",63140],"414b77a9":[function(){return n.e(842).then(n.bind(n,20149))},"@site/docs/transform/index.md",20149],"44cec8cd":[function(){return n.e(14).then(n.t.bind(n,51765,19))},"~blog/default/infosum-docs-blog-archive-7d8.json",51765],"4e23c930":[function(){return n.e(386).then(n.t.bind(n,53341,19))},"~blog/default/infosum-docs-blog-tags-welcome-ec1.json",53341],"54c82979":[function(){return n.e(329).then(n.bind(n,15262))},"@site/docs/getting-started/index.md",15262],"5e9f5e1a":[function(){return Promise.resolve().then(n.bind(n,36809))},"@generated/docusaurus.config",36809],"625b1ed7":[function(){return n.e(168).then(n.bind(n,71245))},"@site/docs/authentication.md",71245],"6875c492":[function(){return Promise.all([n.e(532),n.e(142),n.e(610)]).then(n.bind(n,41714))},"@theme/BlogTagsPostsPage",41714],"7661071f":[function(){return n.e(642).then(n.bind(n,36911))},"@site/blog/2021-08-26-welcome/index.md?truncated=true",36911],"814f3328":[function(){return n.e(535).then(n.t.bind(n,45641,19))},"~blog/default/blog-post-list-prop-default.json",45641],"838d8878":[function(){return n.e(925).then(n.bind(n,1291))},"@site/docs/filevaults/index.md",1291],"935f2afb":[function(){return n.e(53).then(n.t.bind(n,1109,19))},"~docs/default/version-current-metadata-prop-751.json",1109],"9de40055":[function(){return n.e(240).then(n.t.bind(n,57495,19))},"~blog/default/infosum-docs-blog-tags-developer-008.json",57495],"9e4087bc":[function(){return n.e(608).then(n.bind(n,63169))},"@theme/BlogArchivePage",63169],a3fb953e:[function(){return n.e(705).then(n.t.bind(n,65201,19))},"~blog/default/infosum-docs-blog-75e.json",65201],a6aa9e1f:[function(){return Promise.all([n.e(532),n.e(142),n.e(89)]).then(n.bind(n,80046))},"@theme/BlogListPage",80046],af23092a:[function(){return n.e(94).then(n.t.bind(n,39206,19))},"~blog/default/infosum-docs-blog-tags-tags-f2f.json",39206],b53cb62d:[function(){return n.e(264).then(n.t.bind(n,24469,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-content-blog/default/plugin-route-context-module-100.json",24469],b8de503b:[function(){return n.e(873).then(n.t.bind(n,35855,19))},"~blog/default/infosum-docs-blog-tags-documentation-ee8.json",35855],ba5a679b:[function(){return n.e(975).then(n.t.bind(n,15745,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-content-pages/default/plugin-route-context-module-100.json",15745],ccc49370:[function(){return Promise.all([n.e(532),n.e(142),n.e(103)]).then(n.bind(n,48166))},"@theme/BlogPostPage",48166],cd14c842:[function(){return n.e(703).then(n.t.bind(n,83769,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-content-docs/default/plugin-route-context-module-100.json",83769],d9f32620:[function(){return n.e(914).then(n.bind(n,62900))},"@site/blog/2021-08-26-welcome/index.md",62900],e9674ec5:[function(){return n.e(331).then(n.t.bind(n,21294,19))},"/home/runner/work/infosum-docs/infosum-docs/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/redocApiLayoutV1-plugin-redoc-0.json",21294],ef1f2a58:[function(){return n.e(429).then(n.t.bind(n,23814,19))},"~blog/default/infosum-docs-blog-tags-infosum-6fc-list.json",23814],f0ad3fbb:[function(){return Promise.all([n.e(532),n.e(527),n.e(612)]).then(n.bind(n,83527))},"@theme/ApiDoc",83527]};function o(e){var t=e.error,n=e.retry,a=e.pastDelay;return t?r.createElement("div",{style:{textAlign:"center",color:"#fff",backgroundColor:"#fa383e",borderColor:"#fa383e",borderStyle:"solid",borderRadius:"0.25rem",borderWidth:"1px",boxSizing:"border-box",display:"block",padding:"1rem",flex:"0 0 50%",marginLeft:"25%",marginRight:"25%",marginTop:"5rem",maxWidth:"50%",width:"100%"}},r.createElement("p",null,String(t)),r.createElement("div",null,r.createElement("button",{type:"button",onClick:n},"Retry"))):a?r.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",height:"100vh"}},r.createElement("svg",{id:"loader",style:{width:128,height:110,position:"absolute",top:"calc(100vh - 64%)"},viewBox:"0 0 45 45",xmlns:"http://www.w3.org/2000/svg",stroke:"#61dafb"},r.createElement("g",{fill:"none",fillRule:"evenodd",transform:"translate(1 1)",strokeWidth:"2"},r.createElement("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0"},r.createElement("animate",{attributeName:"r",begin:"1.5s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-opacity",begin:"1.5s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-width",begin:"1.5s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})),r.createElement("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0"},r.createElement("animate",{attributeName:"r",begin:"3s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-opacity",begin:"3s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),r.createElement("animate",{attributeName:"stroke-width",begin:"3s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})),r.createElement("circle",{cx:"22",cy:"22",r:"8"},r.createElement("animate",{attributeName:"r",begin:"0s",dur:"1.5s",values:"6;1;2;3;4;5;6",calcMode:"linear",repeatCount:"indefinite"}))))):null}var T=n(99670),d=n(30226);function I(e,t){if("*"===e)return i()({loading:o,loader:function(){return n.e(972).then(n.bind(n,4972))},modules:["@theme/NotFound"],webpack:function(){return[4972]},render:function(e,t){var n=e.default;return r.createElement(d.z,{value:{plugin:{name:"native",id:"default"}}},r.createElement(n,t))}});var _=s[e+"-"+t],I={},u=[],N=[],R=(0,T.Z)(_);return Object.entries(R).forEach((function(e){var t=e[0],n=e[1],r=E[n];r&&(I[t]=r[0],u.push(r[1]),N.push(r[2]))})),i().Map({loading:o,loader:I,modules:u,webpack:function(){return N},render:function(t,n){var i=JSON.parse(JSON.stringify(_));Object.entries(t).forEach((function(t){var n=t[0],r=t[1],a=r.default;if(!a)throw new Error("The page component at "+e+" doesn't have a default export. This makes it impossible to render anything. Consider default-exporting a React component.");"object"!=typeof a&&"function"!=typeof a||Object.keys(r).filter((function(e){return"default"!==e})).forEach((function(e){a[e]=r[e]}));var _=i,s=n.split(".");s.slice(0,-1).forEach((function(e){_=_[e]})),_[s[s.length-1]]=a}));var s=i.__comp;delete i.__comp;var E=i.__context;return delete i.__context,r.createElement(d.z,{value:E},r.createElement(s,(0,a.Z)({},i,n)))}})}var u=[{path:"/infosum-docs/api/",component:I("/infosum-docs/api/","654"),exact:!0},{path:"/infosum-docs/blog",component:I("/infosum-docs/blog","57b"),exact:!0},{path:"/infosum-docs/blog/archive",component:I("/infosum-docs/blog/archive","f7a"),exact:!0},{path:"/infosum-docs/blog/tags",component:I("/infosum-docs/blog/tags","c2c"),exact:!0},{path:"/infosum-docs/blog/tags/developer",component:I("/infosum-docs/blog/tags/developer","e69"),exact:!0},{path:"/infosum-docs/blog/tags/documentation",component:I("/infosum-docs/blog/tags/documentation","6db"),exact:!0},{path:"/infosum-docs/blog/tags/infosum",component:I("/infosum-docs/blog/tags/infosum","144"),exact:!0},{path:"/infosum-docs/blog/tags/welcome",component:I("/infosum-docs/blog/tags/welcome","263"),exact:!0},{path:"/infosum-docs/blog/welcome",component:I("/infosum-docs/blog/welcome","545"),exact:!0},{path:"/infosum-docs/docs",component:I("/infosum-docs/docs","99f"),routes:[{path:"/infosum-docs/docs/authentication",component:I("/infosum-docs/docs/authentication","0bf"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/filevaults/",component:I("/infosum-docs/docs/filevaults/","e31"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/getting-started/",component:I("/infosum-docs/docs/getting-started/","a70"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/getting-started/uploading-a-file-to-a-filevault",component:I("/infosum-docs/docs/getting-started/uploading-a-file-to-a-filevault","d2c"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/intro",component:I("/infosum-docs/docs/intro","5c3"),exact:!0,sidebar:"tutorialSidebar"},{path:"/infosum-docs/docs/transform/",component:I("/infosum-docs/docs/transform/","770"),exact:!0,sidebar:"tutorialSidebar"}]},{path:"/infosum-docs/",component:I("/infosum-docs/","eea"),exact:!0},{path:"*",component:I("*")}]},98934:function(e,t,n){"use strict";n.d(t,{_:function(){return a},t:function(){return _}});var r=n(67294),a=r.createContext(!1);function _(e){var t=e.children,n=(0,r.useState)(!1),_=n[0],i=n[1];return(0,r.useEffect)((function(){i(!0)}),[]),r.createElement(a.Provider,{value:_},t)}},49383:function(e,t,n){"use strict";var r=n(67294),a=n(73935),_=n(73727),i=n(70405),s=n(10412),E=[n(32497),n(3310),n(36743),n(18320),n(52295),n(41304),n(4750),n(58968)],o=n(723),T=n(76775),d=n(18790);function I(e){var t=e.children;return r.createElement(r.Fragment,null,t)}var u=n(87462),N=n(35742),R=n(52263),O=n(44996),A=n(94711),l=n(86668),D=n(19727),h=n(1944),S=n(43320),p=n(90197);function c(){var e=(0,R.Z)().i18n,t=e.defaultLocale,n=e.localeConfigs,a=(0,A.l)();return r.createElement(N.Z,null,Object.entries(n).map((function(e){var t=e[0],n=e[1].htmlLang;return r.createElement("link",{key:t,rel:"alternate",href:a.createUrl({locale:t,fullyQualified:!0}),hrefLang:n})})),r.createElement("link",{rel:"alternate",href:a.createUrl({locale:t,fullyQualified:!0}),hrefLang:"x-default"}))}function P(e){var t=e.permalink,n=(0,R.Z)().siteConfig.url,a=function(){var e=(0,R.Z)().siteConfig.url,t=(0,T.TH)().pathname;return e+(0,O.Z)(t)}(),_=t?""+n+t:a;return r.createElement(N.Z,null,r.createElement("meta",{property:"og:url",content:_}),r.createElement("link",{rel:"canonical",href:_}))}function C(){var e=(0,R.Z)().i18n.currentLocale,t=(0,l.L)(),n=t.metadata,a=t.image;return r.createElement(r.Fragment,null,r.createElement(N.Z,null,r.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),r.createElement("body",{className:D.h})),a&&r.createElement(h.d,{image:a}),r.createElement(P,null),r.createElement(c,null),r.createElement(p.Z,{tag:S.HX,locale:e}),r.createElement(N.Z,null,n.map((function(e,t){return r.createElement("meta",(0,u.Z)({key:t},e))}))))}var U=new Map;function f(e){if(U.has(e.pathname))return Object.assign({},e,{pathname:U.get(e.pathname)});if((0,d.f)(o.Z,e.pathname).some((function(e){return!0===e.route.exact})))return U.set(e.pathname,e.pathname),e;var t=e.pathname.trim().replace(/(?:\/index)?\.html$/,"")||"/";return U.set(e.pathname,t),Object.assign({},e,{pathname:t})}var m=n(98934),L=n(58940),F=n(94578);function M(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var a=E.map((function(t){var r,a,_=null!=(r=null==(a=t.default)?void 0:a[e])?r:t[e];return null==_?void 0:_.apply(void 0,n)}));return function(){return a.forEach((function(e){return null==e?void 0:e()}))}}var w=function(e){var t=e.children,n=e.location,a=e.previousLocation;return(0,r.useLayoutEffect)((function(){a!==n&&(a&&function(e){var t=e.hash;if(t){var n=decodeURIComponent(t.substring(1)),r=document.getElementById(n);null==r||r.scrollIntoView()}else window.scrollTo(0,0)}(n),M("onRouteDidUpdate",{previousLocation:a,location:n}))}),[a,n]),t};function g(e){var t=(0,d.f)(o.Z,e);return Promise.all(t.map((function(e){return null==e.route.component.preload?void 0:e.route.component.preload()})))}var b=function(e){function t(t){var n;return(n=e.call(this,t)||this).previousLocation=void 0,n.routeUpdateCleanupCb=void 0,n.previousLocation=null,n.routeUpdateCleanupCb=s.default.canUseDOM?M("onRouteUpdate",{previousLocation:null,location:n.props.location}):function(){},n.state={nextRouteHasLoaded:!0},n}(0,F.Z)(t,e);var n=t.prototype;return n.shouldComponentUpdate=function(e,t){var n=this;if(e.location===this.props.location)return t.nextRouteHasLoaded;var r=e.location;return this.previousLocation=this.props.location,this.setState({nextRouteHasLoaded:!1}),this.routeUpdateCleanupCb=M("onRouteUpdate",{previousLocation:this.previousLocation,location:r}),g(r.pathname).then((function(){n.routeUpdateCleanupCb(),n.setState({nextRouteHasLoaded:!0})})).catch((function(e){return console.warn(e)})),!1},n.render=function(){var e=this.props,t=e.children,n=e.location;return r.createElement(w,{previousLocation:this.previousLocation,location:n},r.createElement(T.AW,{location:n,render:function(){return t}}))},t}(r.Component),y="docusaurus-base-url-issue-banner-container",X="docusaurus-base-url-issue-banner-suggestion-container",v="__DOCUSAURUS_INSERT_BASEURL_BANNER";function V(e){return"\nwindow['"+v+"'] = true;\n\ndocument.addEventListener('DOMContentLoaded', maybeInsertBanner);\n\nfunction maybeInsertBanner() {\n  var shouldInsert = window['"+v+"'];\n  shouldInsert && insertBanner();\n}\n\nfunction insertBanner() {\n  var bannerContainer = document.getElementById('"+y+"');\n  if (!bannerContainer) {\n    return;\n  }\n  var bannerHtml = "+JSON.stringify(function(e){return'\n<div id="docusaurus-base-url-issue-banner" style="border: thick solid red; background-color: rgb(255, 230, 179); margin: 20px; padding: 20px; font-size: 20px;">\n   <p style="font-weight: bold; font-size: 30px;">Your Docusaurus site did not load properly.</p>\n   <p>A very common reason is a wrong site <a href="https://docusaurus.io/docs/docusaurus.config.js/#baseurl" style="font-weight: bold;">baseUrl configuration</a>.</p>\n   <p>Current configured baseUrl = <span style="font-weight: bold; color: red;">'+e+"</span> "+("/"===e?" (default value)":"")+'</p>\n   <p>We suggest trying baseUrl = <span id="'+X+'" style="font-weight: bold; color: green;"></span></p>\n</div>\n'}(e)).replace(/</g,"\\<")+";\n  bannerContainer.innerHTML = bannerHtml;\n  var suggestionContainer = document.getElementById('"+X+"');\n  var actualHomePagePath = window.location.pathname;\n  var suggestedBaseUrl = actualHomePagePath.substr(-1) === '/'\n        ? actualHomePagePath\n        : actualHomePagePath + '/';\n  suggestionContainer.innerHTML = suggestedBaseUrl;\n}\n"}function B(){var e=(0,R.Z)().siteConfig.baseUrl;return(0,r.useLayoutEffect)((function(){window[v]=!1}),[]),r.createElement(r.Fragment,null,!s.default.canUseDOM&&r.createElement(N.Z,null,r.createElement("script",null,V(e))),r.createElement("div",{id:y}))}function Y(){var e=(0,R.Z)().siteConfig,t=e.baseUrl,n=e.baseUrlIssueBanner,a=(0,T.TH)().pathname;return n&&a===t?r.createElement(B,null):null}function K(){var e=(0,R.Z)(),t=e.siteConfig,n=t.favicon,a=t.title,_=e.i18n,i=_.currentLocale,s=_.localeConfigs,E=(0,O.Z)(n),o=s[i],T=o.htmlLang,d=o.direction;return r.createElement(N.Z,null,r.createElement("html",{lang:T,dir:d}),r.createElement("title",null,a),r.createElement("meta",{property:"og:title",content:a}),n&&r.createElement("link",{rel:"icon",href:E}))}var G=n(44763);function q(){var e=(0,d.H)(o.Z),t=(0,T.TH)();return r.createElement(G.Z,null,r.createElement(L.M,null,r.createElement(m.t,null,r.createElement(I,null,r.createElement(K,null),r.createElement(C,null),r.createElement(Y,null),r.createElement(b,{location:f(t)},e)))))}var k=n(16887);var x=function(e){try{return document.createElement("link").relList.supports(e)}catch(t){return!1}}("prefetch")?function(e){return new Promise((function(t,n){var r,a;if("undefined"!=typeof document){var _=document.createElement("link");_.setAttribute("rel","prefetch"),_.setAttribute("href",e),_.onload=function(){return t()},_.onerror=function(){return n()};var i=null!=(r=document.getElementsByTagName("head")[0])?r:null==(a=document.getElementsByName("script")[0])?void 0:a.parentNode;null==i||i.appendChild(_)}else n()}))}:function(e){return new Promise((function(t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.withCredentials=!0,r.onload=function(){200===r.status?t():n()},r.send(null)}))};var H=n(99670),Q=new Set,j=new Set,W=function(){var e,t;return(null==(e=navigator.connection)?void 0:e.effectiveType.includes("2g"))||(null==(t=navigator.connection)?void 0:t.saveData)},z={prefetch:function(e){if(!function(e){return!W()&&!j.has(e)&&!Q.has(e)}(e))return!1;Q.add(e);var t=(0,d.f)(o.Z,e).flatMap((function(e){return t=e.route.path,Object.entries(k).filter((function(e){return e[0].replace(/-[^-]+$/,"")===t})).flatMap((function(e){var t=e[1];return Object.values((0,H.Z)(t))}));var t}));return Promise.all(t.map((function(e){var t=n.gca(e);return t&&!t.includes("undefined")?x(t).catch((function(){})):Promise.resolve()})))},preload:function(e){return!!function(e){return!W()&&!j.has(e)}(e)&&(j.add(e),g(e))}},Z=Object.freeze(z);if(s.default.canUseDOM){window.docusaurus=Z;var $=a.hydrate;g(window.location.pathname).then((function(){$(r.createElement(i.B6,null,r.createElement(_.VK,null,r.createElement(q,null))),document.getElementById("__docusaurus"))}))}},58940:function(e,t,n){"use strict";n.d(t,{_:function(){return T},M:function(){return d}});var r=n(67294),a=n(36809),_=JSON.parse('{"docusaurus-plugin-redoc":{"plugin-redoc-0":{"url":"redocusaurus/plugin-redoc-0.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"title":"InfoSum Developer API","description":"This page contains the documentation for the InfoSum Developer API. The methods allow you to try making requests and inspect the input and output formats.","termsOfService":"https://www.infosum.com/legals/website-terms","version":"2.0","contact":{"name":"InfoSum Support","email":"support@infosum.com"}},"servers":[{"url":"https://api.infosum.com"}],"externalDocs":{"description":"Official documentation","url":"https://docs.infosum.com/"},"paths":{"/api/v2/bunker/import/import-connector-configs":{"get":{"summary":"List Import Connector Config.","description":"List available Import Connector Configs.","operationId":"ImportConnectorConfigsList","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the import connector config.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_cross_account":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3CrossAccountProvider is the information about the connector that can be returned."},"gcs_secret_auth":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSSecretAuthProvider is the information about the connector that can be returned."},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import connector config was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import connector config was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the ID of the user who created the import connector config.","readOnly":true}},"description":"Config is the information that can be retrieved about an import connector config."}},"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."}},"description":"ListResponse is the output of the List method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of ICCs to be returned.\\ne.g. `name co \'Test\' or name co \'Acme\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create an Import Connector Config.","description":"Create a configuration for importing data from a connector.","operationId":"ImportConnectorConfigsCreate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"config_id":{"type":"string"}},"description":"CreateResponse is the output of the Create method."}}}},"400":{"description":"Returned when the Import Connector Config was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"409":{"description":"Returned when an Import Connector Config with the same name already exists.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the import connector config.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}},"description":"S3CrossAccountAuth holds the details needed for cross-account authentication."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3Connector is the information required to define an S3 Connector."},"gcs_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"secret_auth":{"type":"object","properties":{"credentials_json":{"type":"string"}},"description":"GCSSecretAuth holds the GCS Credentials JSON as a string."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSConnector is the information required to define an GCS Connector."}},"description":"UpsertConfig is the information required to define an import connector config."}},"description":"CreateRequest is the input to the Create method."}}},"required":true},"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/import-connector-configs/{config.id}":{"patch":{"summary":"Update an Import Connector Config","description":"Updates the provided fields in a specific Import Connector Config.","operationId":"ImportConnectorConfigsUpdate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the import connector config.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_cross_account":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3CrossAccountProvider is the information about the connector that can be returned."},"gcs_secret_auth":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSSecretAuthProvider is the information about the connector that can be returned."},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import connector config was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import connector config was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the ID of the user who created the import connector config.","readOnly":true}},"description":"Config is the information that can be retrieved about an import connector config."}},"description":"UpdateResponse is the output of the Update method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import Connector Config could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"config.id","description":"Output only. ID is the globally unique ID of the import connector config.","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}},"description":"S3CrossAccountAuth holds the details needed for cross-account authentication."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3Connector is the information required to define an S3 Connector."},"gcs_connector":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"secret_auth":{"type":"object","properties":{"credentials_json":{"type":"string"}},"description":"GCSSecretAuth holds the GCS Credentials JSON as a string."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSConnector is the information required to define an GCS Connector."}},"description":"UpsertConfig is the information required to define an import connector config."}}},"required":true},"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/import-connector-configs/{config_id}":{"get":{"summary":"Get an Import Connector Config.","description":"Get the details of a specific Import Connector Config.","operationId":"ImportConnectorConfigsGet","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"config":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the import connector config.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this import connector config."},"description":{"type":"string","description":"Description is an optional description given to this import connector config."},"s3_cross_account":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the S3 Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"cross_account":{"description":"CrossAccount is the type of auth.","type":"object","properties":{"user_arn":{"type":"string","description":"UserArn is the Amazon Resource Name (ARN) of the role to assume."},"session_name":{"type":"string","description":"Session name is the identifier of the session."},"principal":{"type":"string","description":"Output only. Principal is the principal for the trust relationship.","readOnly":true},"external_id":{"type":"string","description":"Output only. ExternalId is the external ID for the trust relationship.","readOnly":true}}},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"S3CrossAccountProvider is the information about the connector that can be returned."},"gcs_secret_auth":{"type":"object","properties":{"bucket":{"type":"string","description":"Bucket is the name of the GCS Bucket."},"prefix":{"type":"string","description":"Prefix is the prefix of files."},"filenames":{"type":"array","items":{"type":"string"},"description":"Filenames can be a pattern or an exact file to allow multiple files to be specified."}},"description":"GCSSecretAuthProvider is the information about the connector that can be returned."},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import connector config was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import connector config was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the ID of the user who created the import connector config.","readOnly":true}},"description":"Config is the information that can be retrieved about an import connector config."}},"description":"GetResponse is the output of the Get method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import Connector Config could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"config_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete an Import Connector Config.","description":"Deletes a specific Import Connector Config.","operationId":"ImportConnectorConfigsDelete","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"config_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["ImportConnectorConfigs"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/executions":{"get":{"summary":"List Executions.","description":"List all import executions.","operationId":"ImportsListExecutions","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"executions":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the execution."},"import_id":{"type":"string","description":"ImportId is the ID of the import used in the execution."},"bunker_id":{"type":"string","description":"BunkerId is the ID of the bunker used to execute the import."},"user_id":{"type":"string","description":"UserId is the ID of the user who executed the import."},"history":{"type":"array","items":{"type":"object","properties":{"status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"date_time":{"type":"string","format":"date-time"},"progress":{"type":"string"}},"description":"History holds information about the status of the import execution."},"description":"History is the status history of the import execution."},"current_status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the current execution."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the execution was updated."}},"description":"Execution holds information about an import execution."}},"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."}},"description":"ListExecutionsResponse is the output from the ListExecutions method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'current_status DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of Executions to be returned.\\ne.g. `current_status eq \'WAITING\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/executions/{execution_id}":{"get":{"summary":"Gets an Execution","description":"Gets a specific import execution.","operationId":"ImportsGetExecution","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"execution":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the execution."},"import_id":{"type":"string","description":"ImportId is the ID of the import used in the execution."},"bunker_id":{"type":"string","description":"BunkerId is the ID of the bunker used to execute the import."},"user_id":{"type":"string","description":"UserId is the ID of the user who executed the import."},"history":{"type":"array","items":{"type":"object","properties":{"status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"date_time":{"type":"string","format":"date-time"},"progress":{"type":"string"}},"description":"History holds information about the status of the import execution."},"description":"History is the status history of the import execution."},"current_status":{"type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS","description":"Status is an enum of the different states that an async task can be in."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the current execution."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the execution was updated."}},"description":"Execution holds information about an import execution."}},"description":"GetExecutionResponse is the output from the GetExecution method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Execution could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"execution_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/executions/{execution_id}/cancel":{"post":{"summary":"Cancel an Execution","description":"Cancels a specific import execution.","operationId":"ImportsCancelExecution","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Execution could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"execution_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports":{"get":{"summary":"List Import.","description":"List available Imports.","operationId":"ImportsList","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"imports":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."}},"description":"ListResponse is the output of the List method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of Imports to be returned.\\ne.g. `name co \'Test\' or name co \'Acme\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create an Import.","description":"Create a configuration for importing data.","operationId":"ImportsCreate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"import_id":{"type":"string"}},"description":"CreateResponse is the output of the Create method."}}}},"400":{"description":"Returned when the Import was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"409":{"description":"Returned when an Import with the same name already exists.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"import":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"description":"CreateRequest is the input to the Create method."}}},"required":true},"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports/{import.id}":{"patch":{"summary":"Update an Import","description":"Updates the provided fields in a specific Import.","operationId":"ImportsUpdate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"import":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"description":"UpdateResponse is the output of the Update method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import.id","description":"Output only. Id is the id for the import","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}}},"required":true},"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports/{import_id}":{"get":{"summary":"Get an Import.","description":"Get the details of a specific Import.","operationId":"ImportsGet","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"import":{"type":"object","properties":{"id":{"type":"string","title":"Output only. Id is the id for the import","readOnly":true},"name":{"type":"string","title":"Name is a name given to the import"},"description":{"type":"string","title":"Description is a description of the import"},"icc_id":{"type":"string","title":"IccId is the id of the icc used by the import"},"destination_id":{"type":"string","description":"DestinationId is the identifier of where the files will be imported to. Currently this is a bunker ID, but in future will be either a file store or workspace."},"data_filter":{"description":"DataFilter is the filtered data to import from the ICC.","type":"object","properties":{"filter":{"type":"array","items":{"type":"string"},"title":"Filter is an array of strings used to filter the data from the ICC. No filter == *"}}},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time the import was created.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","description":"Output only. UpdatedDateTime is the date and time the import was last updated.","readOnly":true},"user_id":{"type":"string","description":"Output only. UserId is the id of the user who created the import.","readOnly":true}},"description":"Import is the information required to define an import."}},"description":"GetResponse is the output of the Get method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete an Import.","description":"Deletes a specific Import.","operationId":"ImportsDelete","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/import/imports/{import_id}/execute":{"post":{"summary":"Executes an Import","description":"Executes an import for the specified import ID against the specified bunker.","operationId":"ImportsExecuteImport","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"execution_id":{"type":"string","description":"ExecutionId is the ID of the submitted execution."}},"description":"ExecuteImportResponse is the output from the ExecuteImport method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Import or Bunker could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"import_id","description":"ImportId is the ID of the import to execute.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"compute_instance_id":{"type":"string","description":"ComputeInstanceId is the ID of the compute instance to use when executing."}},"description":"ExecuteImportRequest is the input to the ExecuteImport method."}}},"required":true},"tags":["Imports"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/scaled-tasks":{"post":{"summary":"Start a scaled Transform.","description":"Start a transform using ephemeral compute instances to scale work horizontally","operationId":"TransformServiceCreateScaledTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transform_id":{"type":"string","description":"TransformId is the ID of the submitted transform."}},"description":"CreateScaledTransformResponse is the output from the CreateScaledTransform method."}}}},"400":{"description":"Returned when the Transform was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"script":{"type":"string","description":"Script is the transform script to be executed."},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"shard_count":{"type":"integer","format":"int64","description":"ShardCount is the number of shards to horizontally scale the transform execution across."},"allowance_permission_id":{"type":"string","title":"AllowancePermissionID"}},"description":"CreateScaledTransformRequest is the input to the CreateScaledTransform method."}}},"required":true},"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/scripts/validate":{"post":{"summary":"Validate a Transform.","description":"Validate a transform","operationId":"TransformServiceValidateTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","description":"ValidateTransformResponse is the output of the ValidateTransform method."}}}},"400":{"description":"Returned when the Transform Script was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"script":{"type":"string","description":"Script is the transform script to be validated."}},"description":"ValidateTransformRequest is the input to the ValidateTransform method."}}},"required":true},"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/static-tasks":{"post":{"summary":"Start a static Transform.","description":"Start a transform using the static compute instance provided in the request","operationId":"TransformServiceCreateStaticTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transform_id":{"type":"string","description":"TransformId is the ID of the submitted transform."}},"description":"CreateStaticTransformResponse is the output from the CreateStaticTransform method."}}}},"400":{"description":"Returned when the Transform was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"script":{"type":"string","description":"Script is the transform script to be executed."},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"compute_instance_id":{"type":"string","description":"ComputeInstanceId is the id of an existing compute instance which will be used to execute the transformation."}},"description":"CreateStaticTransformRequest is the input to the CreateStaticTransform method."}}},"required":true},"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/tasks":{"get":{"summary":"List all transforms.","description":"List all transforms","operationId":"TransformServiceListTransforms","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transforms":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the transform."},"current_status":{"description":"CurrentStatus is the latest status of the transform aggregated from its constituent shards statuses.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"script":{"type":"string","description":"Script is the transform script to be executed."},"shard_count":{"type":"integer","format":"int64","title":"ShardCount is the total number of shards in the transform"},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"user_id":{"type":"string","description":"UserId is the ID of the user who created the transform."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the transform."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the latest date and time any transform shards were updated."}},"description":"Transform holds global information about a transform."},"description":"Transforms is the list of requested transforms."},"pagination":{"description":"Pagination is the pagination details of the returned transforms.","type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}}}},"description":"ListTransformsResponse is the output from the ListTransforms method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"sort.order","description":"Order is the sort order.\\n\\n - ASC: ASC is ascending.\\n - DESC: DESC is descending.","in":"query","required":false,"schema":{"type":"string","enum":["ASC","DESC"],"default":"ASC"}},{"name":"sort.column","description":"Column is the column to sort on.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of Transforms to be returned.\\ne.g. `history.status co \\"READY\\"`.","in":"query","required":false,"schema":{"type":"string"}}],"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/tasks/{transform_id}":{"get":{"summary":"Get a transform.","description":"Get a transform","operationId":"TransformServiceGetTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"transform_details":{"description":"TransformDetails are details of the requested transform execution.","type":"object","properties":{"transform":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the transform."},"current_status":{"description":"CurrentStatus is the latest status of the transform aggregated from its constituent shards statuses.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"script":{"type":"string","description":"Script is the transform script to be executed."},"shard_count":{"type":"integer","format":"int64","title":"ShardCount is the total number of shards in the transform"},"file_vault_id":{"type":"string","description":"FileVaultId is the id of the filevault having source and destination file(s)."},"user_id":{"type":"string","description":"UserId is the ID of the user who created the transform."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the transform."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the latest date and time any transform shards were updated."}},"description":"Transform holds global information about a transform."},"shards":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Id is the ID of the shard."},"compute_instance_id":{"type":"string","description":"ComputeInstanceId is the compute instance used for executing the transform shard."},"current_status":{"description":"CurrentStatus is the latest status of the shard.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"current_progress":{"type":"string","description":"CurrentProgress is the latest progress reported for the shard."},"created_date_time":{"type":"string","format":"date-time","description":"CreatedDateTime is the creation date and time of the shard."},"updated_date_time":{"type":"string","format":"date-time","description":"UpdatedDateTime is the date and time the shard was updated."},"histories":{"type":"array","items":{"type":"object","properties":{"status":{"description":"Status is the status of the transform execution shard.","type":"string","enum":["NO_STATUS","WAITING","INITIALISING","RUNNING","FAILED","COMPLETED","CANCELLING","CANCELED","STALE"],"default":"NO_STATUS"},"date_time":{"type":"string","format":"date-time","description":"DateTime is the created time of the shard."},"progress":{"type":"string","description":"Progress is the reported progress for this history entry."},"message":{"type":"string","description":"Message is the reported message or error with status change."}},"description":"History holds information about the status of a transform execution shard."},"description":"History is the status history of the transform execution shard."}},"description":"Shard holds information about a transform task shard."},"description":"Shards hold a list of the shards that constitute the transform task."}}}},"description":"GetTransformResponse is the output from the GetTransform method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"transform_id","description":"TransformId is the id of the requested transform.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/transform/tasks/{transform_id}/cancel":{"post":{"summary":"Cancel a running transform.","description":"Cancel a running transform","operationId":"TransformServiceCancelTransform","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","description":"CancelTransformResponse is the response from the CancelTransform method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"transform_id","description":"TransformId is the id of the transform to cancel all possible shards of.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["TransformService"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults":{"get":{"summary":"List FileVaults.","description":"List available FileVaults.","operationId":"FileVaultsList","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vaults":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}},"pagination":{"description":"Pagination is the information on how the results were paginated.","type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}}}}}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of\\nFileVaults to be returned. e.g. `name co \'Test\' or name co \'Acme\'`","in":"query","required":false,"schema":{"type":"string"}}],"tags":["FileVaults"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create a new FileVault.","description":"Create a FileVault to hold data and connect to a bunker.","operationId":"FileVaultsCreate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vault":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}}}}}},"400":{"description":"Returned when the FileVault was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"409":{"description":"Returned when a FileVault with the same name already exists.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this FileVault.","required":["name"]},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"title":"Region identifies the region that this FileVault is located in.\\nExpected format: cloudprovider + region e.g. aws-eu-west-2","type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN","description":"Region enumerates the supported cloud providers and locations.\\n\\n - UNKNOWN: UNKNOWN means the region has not been defined.\\n - AWS_EU_WEST_2: AWS_EU_WEST_2 means AWS Europe (London).\\n - AWS_US_EAST_1: AWS_US_EAST_1 means AWS US East (N. Virginia).\\n - IBM_EU_CENTRAL_1: IBM_EU_CENTRAL_1 means IBM MZR EU Central (Frankfurt).\\n - AWS_EU_CENTRAL_1: AWS_EU_CENTRAL_1 means AWS Europe (Frankfurt)."}},"required":["name"]}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{file_vault.id}":{"patch":{"summary":"Update a FileVault","description":"Updates the provided fields in a specific FileVault.","operationId":"FileVaultsUpdate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vault":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the FileVault could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault.id","description":"Output only. ID is the unique identifier of the FileVault.","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask`\\ndefinition, see\\nhttps://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."}},"description":"UpdateFileVault is used to update a FileVault. Users can only update the\\nname, description and auth fields."}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{file_vault_id}/associate":{"post":{"summary":"Associate a FileVault with a bunker","description":"Associate a FileVault with a bunker, a filevault can be associated with with multiple bunkers","operationId":"FileVaultsAssociate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bunker_id":{"type":"string"}},"description":"AssociateRequest used to associate a filevault with the supplied bunker."}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{file_vault_id}/dissociate":{"post":{"summary":"Dissociate a FileVault from a bunker","description":"Dissociate a FileVault from a bunker","operationId":"FileVaultsDissociate","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"bunker_id":{"type":"string"}},"description":"DissociateRequest used to dissociate a filevault from the supplied bunker."}}},"required":true},"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/filevaults/{id}":{"get":{"summary":"Get a FileVault.","description":"Get the details of a specific FileVault.","operationId":"FileVaultsGet","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"file_vault":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the unique identifier of the FileVault.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this FileVault."},"description":{"type":"string","description":"Description is an optional description given to this FileVault."},"region":{"description":"Output only. Region identifies the region that this FileVault is located\\nin.","readOnly":true,"type":"string","enum":["UNKNOWN","AWS_EU_WEST_2","AWS_US_EAST_1","IBM_EU_CENTRAL_1","AWS_EU_CENTRAL_1"],"default":"UNKNOWN"},"created_by":{"type":"string","description":"Output only. CreatedBy is the id of the user that created this FileVault.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the id of the owner of this FileVault.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"Output only. CreatedDateTime is the date and time that this FileVault was\\ncreated.","readOnly":true},"updated_date_time":{"type":"string","format":"date-time","title":"Output only. UpdatedDateTime is the date and time that thie FileVault was\\nupdated","readOnly":true}},"description":"FileVault is the details about a specific filevault."}}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the FileVault could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FileVaults"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete a FileVault.","description":"Deletes a specific FileVault.","operationId":"FileVaultsDelete","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FileVaults"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/destinations":{"get":{"summary":"List Destinations","description":"Lists available Destinations.","operationId":"DestinationsListDestinations","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"pagination":{"type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}},"description":"PaginationResponse holds information on the returned records."},"destinations":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the destination.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"path":{"type":"string","description":"Path is the path in the bucket to export data to."},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}}},"description":"ListDestinationsResponse is the output of the ListDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to view Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'created_time,name DESC\'\\nThe values are seperated by space, \'{column} {ASC/DESC}\'\\nValid columns: name, created_time","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.names","description":"Names is the filter to be applied to the names of the returned\\ndatasets. Supports partial matching. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}}],"tags":["Destinations"],"security":[{"API_Keys":[]}]},"post":{"summary":"Create a Destination","description":"Creates a Destination.","operationId":"DestinationsCreateDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"destination_id":{"type":"string"}},"description":"CreateDestinationResponse is the output of the CreateDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to create Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"path":{"type":"string","description":"Path is the path in the bucket to export data to."},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."}},"description":"CreateDestinationRequest is the input to the CreateDestination method."}}},"required":true},"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/destinations/{destination.id}":{"patch":{"summary":"Update a Destination","description":"Updates the provided fields in a specific Destination.","operationId":"DestinationsUpdateDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"destination":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the destination.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"path":{"type":"string","description":"Path is the path in the bucket to export data to."},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}},"description":"UpdateDestinationResponse is the output of the UpdateDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to update the Destination.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Destination could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"destination.id","description":"Output only. ID is the globally unique ID of the destination.","in":"path","required":true,"schema":{"type":"string"}},{"name":"update_mask","description":"UpdateMask is a field mask, allowing partial resource update.\\nThe update mask applies to the Allocation resource. For the `FieldMask` definition,\\nsee https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask","in":"query","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"path":{"type":"string","description":"Path is the path in the bucket to export data to."},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}}},"required":true},"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/destinations/{destination_id}":{"get":{"summary":"Get a Destination","description":"Gets a specific Destination.","operationId":"DestinationsGetDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"destination":{"type":"object","properties":{"id":{"type":"string","description":"Output only. ID is the globally unique ID of the destination.","readOnly":true},"owner_id":{"type":"string","description":"Output only. OwnerId is the user or company ID of the owner of the destination.","readOnly":true},"name":{"type":"string","description":"Name is the display name given to this destination."},"description":{"type":"string","description":"Description is an optional description given to this destination."},"s3":{"type":"object","properties":{"bucket_name":{"type":"string","description":"BucketName is the name of the S3 Bucket."},"region":{"description":"Region is the region of the S3 Bucket.","type":"string","enum":["UNKNOWN_REGION","US_EAST_1","US_EAST_2","US_WEST_1","US_WEST_2","CA_CENTRAL_1","EU_WEST_1","EU_WEST_2","EU_CENTRAL_1","AP_SOUTHEAST_1","AP_SOUTHEAST_2","AP_SOUTH_1","AP_NORTHEAST_1","AP_NORTHEAST_2","SA_EAST_1","CN_NORTH_1"],"default":"UNKNOWN_REGION"},"path":{"type":"string","description":"Path is the path in the bucket to export data to."},"default_push_overrides":{"title":"DefaultPushOverrides","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}},"description":"S3Overrides are the values that can be overridden when pushing to s3."},"access_key":{"type":"object","properties":{"access_key_id":{"type":"string","description":"AccessKeyId is the id of the access key to authenticate with AWS."},"secret":{"type":"string","description":"Secret is the access key secret for authentication."},"session_token":{"type":"string","description":"SessionToken is an optional STS session token.\\nLeave blank if using an IAM User access key."}},"description":"S3AccessKeyAuth holds the details needed for access key / secret authentication."},"cross_account":{"type":"object","properties":{"push_role_arn":{"type":"string","description":"PushRoleArn is the AWS IAM role ARN to assume when writing data to an S3 bucket."},"session_name":{"type":"string","description":"SessionName is the name of the IAM role session."},"external_id":{"type":"string","description":"ExternalId is the aws ExternalId that must be set in your role\'s trust policy to enable cross account access. Output only.","readOnly":true}},"description":"S3CrossAccount holds the details needed for cross account authentication."}},"description":"S3Connector is the information required to define a destination using an S3 bucket."},"pubmatic":{"type":"object","properties":{"dpid":{"type":"integer","format":"int32","description":"DPID is your PubMatic data partner ID."}},"description":"PubmaticConnector is the information required to define a destination pushing to PubMatic."},"sftp":{"type":"object","properties":{"host":{"type":"string","description":"Host is the host address of the sftp server."},"port":{"type":"integer","format":"int32","description":"port is the port number that gets used when connecting to the sftp server."},"password_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"password":{"type":"string","description":"Password is the password of the user."}},"description":"SftpPasswordAuthentication contains details to authenticate to a sftp server using a username and password."},"ssh_config":{"type":"object","properties":{"username":{"type":"string","description":"Username is the username of then user trying to connect to the sftp server."},"ssh_key":{"type":"string","description":"SshKey is the ssh key of the user."}},"description":"SftpSshAuthentication contains details to authenticate to a sftp server using a username and ssh key."},"host_keys":{"description":"HostKeys contains options for providing a public key to verify the host.","type":"object","properties":{"authorized_keys":{"type":"array","items":{"type":"string"},"description":"AuthorizedKeys are the host public keys in OpenSSH authorized_keys format."},"known_hosts":{"type":"array","items":{"type":"string"},"description":"KnownHosts are the host public keys in OpenSSH known_hosts format."},"public_key_pem":{"type":"string","description":"PublicKeyPem is the servers public PEM key."}}},"gpg_public_key":{"type":"string","description":"GpgPublicKey is the GPG public key to use in encrypting the data. Optional."},"default_push_overrides":{"description":"DefaultPushOverrides contain the default push time values. Optional.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}},"description":"SftpConnector is the information required to define a destination pushing to a sftp server."},"creator_id":{"type":"string","description":"Output only. CreatorId is the ID of the user who created the destination.","readOnly":true},"created_time":{"type":"string","format":"date-time","description":"Output only. CreatedTime is the date and time the destination was created.","readOnly":true},"updated_time":{"type":"string","format":"date-time","description":"Output only. UpdatedTime is the date and time the destination was last updated.","readOnly":true},"connector_type":{"description":"Output only. ConnectorType states the type of connector used by the destination.","readOnly":true,"type":"string","enum":["S3_ACCESS_KEYS","PUBMATIC","S3_CROSS_ACCOUNT","SFTP"],"default":"S3_ACCESS_KEYS"}},"description":"Destination is the information required to define destinations."}},"description":"GetDestinationResponse is the output of the GetDestination method."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to view Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Destination could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"destination_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Destinations"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete a Destination","description":"Deletes a specific Destination.","operationId":"DestinationsDeleteDestination","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to delete the Destination.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"destination_id","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/bunker/export/execute":{"post":{"summary":"Push to a destination","description":"Pushes a result into a destination.","operationId":"DestinationsPushResults","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"push_id":{"type":"string","description":"PushId is the unique identifier for the requested push."}},"description":"PushResultsResponse is the output of the PushResults request."}}}},"400":{"description":"Returned when the request is invalid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the right to push to the Destinations.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the destination, query or the dataset does not exist.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"destination_id":{"type":"string","description":"DestinationID is the unique identifier for destination."},"dataset_id":{"type":"string","description":"DatasetId is the id of the dataset used for the query."},"activation_query_id":{"type":"string","description":"ActivationQueryId is the id of the activation query."},"cohort_version":{"type":"string","description":"CohortVersion is the version of the cohort to push."},"s3":{"description":"S3 are the push time variable for the s3 connector type.","type":"object","properties":{"filename":{"type":"string","description":"Filename is the name used for file when pushing the results to a destination."},"overrides":{"description":"Overrides contains the fields that can be overridden when pushing to s3.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the s3 bucket to export data to."}}}}},"pubmatic":{"description":"Pubmatic are the overrides for the PubMatic connector type.","type":"object","properties":{"user_id_column":{"type":"string","description":"UserIDColumn is the name of the output column you want mapping to PubMatic userid field."},"uid_type":{"description":"UIDType is a value that determines what the identity partner\'s PubMatic user ID represents.","type":"string","enum":["COOKIE_ID","DEVICE_ID","BOUNCE_X","TTD","ID5","CRITEO_RTUS","IDENTITY_LINK","PUB_COMMON_ID","FIRST_PARTY_ID","LIVE_INTENT","BRITEPOOL","PARRABLE","CRITEO_ID","MERKLE_M1","TTD_UID","LOTAME_PANORAMA","QUANTCAST_ID","FABRICK_ID","NET_ID","ZEOTAP","SHARED_ID","NUID","IMUID"],"default":"COOKIE_ID"},"country_code":{"description":"CountryCode is the country code that the users belong to.","type":"string","enum":["US","AT","BE","CA","CN","CY","DK","EG","FJ","FI","FR","DE","GR","HK","HU","IS","IN","IE","IT","JP","LU","NL","NZ","NO","PL","PT","SG","ES","SE","CH","GB","AU"],"default":"US"},"addseg":{"type":"array","items":{"type":"string"},"description":"Addseg is a  list of audiences to add users to."}}},"sftp":{"description":"Sftp are the overrides for the sftp connector type.","type":"object","properties":{"filename":{"type":"string","description":"Filename is the name used for file when pushing the results to a destination."},"overrides":{"description":"Overrides contains the fields that can be overridden when pushing to a sftp server.","type":"object","properties":{"path":{"type":"string","description":"Path is the path in the sftp server to export data to."}}}}}},"description":"PushResultsRequest is input to the PushResult request."}}},"required":true},"tags":["Destinations"],"security":[{"API_Keys":[]}]}},"/api/v2/files/{file_vault_id}":{"get":{"summary":"List files","description":"List available files with any metadata","operationId":"FilesServicelistFiles","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"files":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the file.","readOnly":true},"size":{"type":"string","format":"int64","description":"The size of the file in bytes.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"The AWS timestamp for when this file was created","readOnly":true},"metadata":{"description":"The metadata associated with this file.","readOnly":true,"type":"object","properties":{"origin":{"type":"object","description":"The details of the origin of the file.","readOnly":true},"user_settings":{"type":"object","description":"The user settings associated with this file.","readOnly":true},"last_modified_date_time":{"type":"string","format":"date-time","description":"The time at which we most recently updated (or created) this Metadata.","readOnly":true}}}},"description":"File is the combination of File attributes and File metadata."},"description":"Files are a list of data for files matching the list request."},"pagination":{"description":"Pagination is the information on how the results were paginated.","type":"object","properties":{"results":{"type":"integer","format":"int32","description":"Results is the count of the returned results."},"total_results":{"type":"integer","format":"int32","description":"TotalResults is the total number of results available."},"next_page":{"type":"integer","format":"int32","description":"NextPage is the next page to view."}}}},"description":"ListFilesResponse is the output of the List method."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","description":"FileVaultId is the id of the File Vault to list files from.","in":"path","required":true,"schema":{"type":"string"}},{"name":"pagination.page","description":"Page is the page to view.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"pagination.per_page","description":"PerPage is the number of items per page.","in":"query","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order_by","description":"OrderBy is a comma seperated value to define sorting.\\ne.g \'name,created_time DESC\'.\\nThe values are sperated by space, \'{column} {ASC/DESC}\'.\\nThese are the values that are sortable:\\n  name\\n  size\\n  created_date_time (in RFC3339 format)\\n  metadata.user_settings.origin_type\\n  metadata.user_settings.hidden","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter","description":"Filter is a string containing logic that can specify a restricted set of\\nFiles to be returned. e.g. `name co \'Test\' or name co \'Acme\'`. These are\\nthe supported fields for filtering:\\n  name\\n  size\\n  created_date_time (in RFC3339 format)\\n  metadata.user_settings.hidden\\n  metadata.user_settings.origin_type","in":"query","required":false,"schema":{"type":"string"}}],"tags":["FilesService"],"security":[{"API_Keys":[]}]}},"/api/v2/files/{file_vault_id}/{name}":{"get":{"summary":"Get information about a specific file","description":"Gets information about a file along with any metadata","operationId":"FilesServicegetFile","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the file.","readOnly":true},"size":{"type":"string","format":"int64","description":"The size of the file in bytes.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"The AWS timestamp for when this file was created","readOnly":true},"metadata":{"description":"The metadata associated with this file.","readOnly":true,"type":"object","properties":{"origin":{"type":"object","description":"The details of the origin of the file.","readOnly":true},"user_settings":{"type":"object","description":"The user settings associated with this file.","readOnly":true},"last_modified_date_time":{"type":"string","format":"date-time","description":"The time at which we most recently updated (or created) this Metadata.","readOnly":true}}}},"description":"File is the combination of File attributes and File metadata."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","description":"FileVaultId is the id of the File Vault where the file to get data about is\\nstored.","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","description":"Name is the name of the file to get data about.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FilesService"],"security":[{"API_Keys":[]}]},"delete":{"summary":"Delete file","description":"Delete the specified file","operationId":"FilesServicedeleteFile","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{}}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","description":"The globally unique identifier for the File Vault where the file to delete is.","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","description":"The name of the file to be deleted.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["FilesService"],"security":[{"API_Keys":[]}]},"patch":{"summary":"Updates metadata for a file.","description":"Updates the metadata for a file on a specific File Vault.","operationId":"FilesServiceupdateFileMetadata","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the file.","readOnly":true},"size":{"type":"string","format":"int64","description":"The size of the file in bytes.","readOnly":true},"created_date_time":{"type":"string","format":"date-time","description":"The AWS timestamp for when this file was created","readOnly":true},"metadata":{"description":"The metadata associated with this file.","readOnly":true,"type":"object","properties":{"origin":{"type":"object","description":"The details of the origin of the file.","readOnly":true},"user_settings":{"type":"object","description":"The user settings associated with this file.","readOnly":true},"last_modified_date_time":{"type":"string","format":"date-time","description":"The time at which we most recently updated (or created) this Metadata.","readOnly":true}}}},"description":"File is the combination of File attributes and File metadata."}}}},"400":{"description":"Returned when the request was not valid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the File Vault could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"file_vault_id","description":"The globally unique identifier for the File Vault where the file to delete is.","in":"path","required":true,"schema":{"type":"string"}},{"name":"name","description":"The name of the file to be deleted.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","description":"A map of string to any value that can be used for any user specific tags or metadata. Some settings such as \'hidden\' are interpreted by the UI. An update replaces all all previous values."}}},"description":"UserSettings contains the new user settings to associate with the file.","required":true},"tags":["FilesService"],"security":[{"API_Keys":[]}]}},"/api/v2/files/{update_bulk.file_vault_id}":{"patch":{"summary":"Update or add metadata to multiple files in a filevault.","description":"Update or add metadata to multiple files in a filevault.","operationId":"FilesServiceupdateBulkFileMetadata","responses":{"200":{"description":"Returned when the request is accepted","content":{"application/json":{"schema":{"type":"object","description":"UpdateBulkMetadataResponse is an empty response for the UpdateBulk request."}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have the required permission.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","title":"Message contains details about the error"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"title":"Metadata contains information that is used to flesh out the translated\\nLocationisationId message"},"request_id":{"type":"string","title":"RequestId is a unique ID for the request"},"error_code":{"title":"ErrorCode is an error code which can be translated into an error message in\\nthe user\'s language","type":"string","enum":["INTERNAL","UNAUTHENTICATED","ACCOUNTS_REQUIRE_FEATURE_FLAG","ACCOUNTS_REQUIRE_COMPANY_RIGHT","MISSING_REQUIRED_FIELD","ACCOUNTS_REQUIRE_COMPANY","EMPTY_PAYLOAD","ACTIVATION_QUERY_NOT_FOUND","COHORT_VERSION_NOT_FOUND","DATASET_NOT_FOUND","UNIMPLEMENTED","INVALID_ARGUMENT","DESTINATIONS_NOT_FOUND","DESTINATIONS_INVALID_CONNECTOR","DESTINATION_UNKNOWN_AUTH_TYPE","DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME","DESTINATIONS_INVALID_PAGINATION_INPUT","DESTINATIONS_ALREADY_EXISTS","ICC_INVALID_ARGUMENT","ICC_MALFORMED_INPUT","ICC_NOT_FOUND","ICC_PERMISSION_DENIED","ICC_UNIQUE_NAME_VIOLATION","ICC_IN_USE_CANNOT_BE_DELETED","ICC_ID_MUST_BE_EMPTY","ICC_CANNOT_BE_UPDATED","TRANSFORM_FAILED","TRANSFORM_INVALID","TRANSFORM_FAILED_WRITE","TRANSFORM_EXCEEDED_ROW_ERRORS","IMPORTS_ID_MUST_BE_EMPTY","IMPORTS_UNIQUE_NAME_VIOLATION","IMPORTS_NOT_FOUND","IMPORTS_EXECUTION_BUNKER_NOT_FOUND","IMPORTS_CANNOT_CANCEL_TASK","IMPORTS_EXECUTION_TASK_NOT_FOUND","IMPORTS_CANNOT_BE_DELETED","IMPORTS_CANNOT_BE_UPDATED","UNSUPPORTED_FILTER_FIELD_NAME","UNSUPPORTED_ORDER_BY_FIELD_NAME","INVALID_FILTER_INPUT","INVALID_UPDATE_MASK_FIELD_NAME","API_MALFORMED_INPUT","INVALID_INPUT_VALUE","BAD_PAGE_SIZE","FILE_METADATA_NOT_FOUND","FILE_METADATA_IN_USE","FILE_METADATA_DELETED","FILE_METADATA_ALREADY_STRUCTURED","FILE_NOT_FOUND","TASK_NOT_FOUND","TASK_CANNOT_CANCEL","FILEVAULT_NOT_FOUND","BUNKER_NOT_FOUND","EXPORT_FAILED","EXPORT_FILE_EXISTS","EXPORT_TIMEOUT","EXPORT_S3_ERROR","EXPORT_S3_INVALID_ARGUMENT","EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS","EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT","EXPORT_S3_BUCKET_PUBLIC","EXPORT_TRADE_DESK_ERROR","EXPORT_TRADE_DESK_INVALID_ID","EXPORT_TRADE_DESK_INVALID_SECRET","EXPORT_SFTP_ERROR","EXPORT_SFTP_INVALID_CREDENTIALS","EXPORT_SFTP_INVALID_SSH_KEY","EXPORT_SFTP_CREATE_DIRECTORY_ERROR","EXPORT_SFTP_CREATE_FILE_ERROR","EXPORT_SFTP_NO_SUCH_HOST","EXPORT_SFTP_CONNECTION_REFUSED","EXPORT_GCS_ERROR","EXPORT_PUBMATIC_ERROR","EXPORT_PUBMATIC_PARTIAL_ERROR","EXPORT_PUBMATIC_UNREGISTERED_SEG","EXPORT_PUBMATIC_DPID_NOT_SUPPORTED"],"default":"INTERNAL","description":"ErrorCode list possible api error codes.\\n\\n - INTERNAL: INTERNAL is used when no other error applies.\\n - UNAUTHENTICATED: General errors\\nUNAUTHENTICATED is used when the user is not authenticated.\\n - ACCOUNTS_REQUIRE_FEATURE_FLAG: ACCOUNTS_REQUIRE_FEATURE_FLAG is returned when a user doesn\'t have the\\nrequired feature flag enabled.\\n - ACCOUNTS_REQUIRE_COMPANY_RIGHT: ACCOUNTS_REQUIRE_COMPANY_RIGHT is returned when a company user doesn\'t have\\nthe required RIGHT to perform the request. The required right should be\\nincluded in the error metadata as \\"required_right\\"\\n - MISSING_REQUIRED_FIELD: MISSING_REQURIED_FIELD is return when a required field is missing in a\\nrequest. The name of the required field should be included in error\\nmetadata as \\"required_field\\".\\n - ACCOUNTS_REQUIRE_COMPANY: ACCOUNTS_REQUIRE_COMPANY is returned when an endpoint requires the user be\\npart of a company\\n - EMPTY_PAYLOAD: EMPTY_PAYLOAD is returned when a payload is empty but is required.\\n - ACTIVATION_QUERY_NOT_FOUND: ACTIVATION_QUERY_NOT_FOUND is returned when a activation query can not be\\nfound.\\n - COHORT_VERSION_NOT_FOUND: COHORT_VERSION_NOT_FOUND is returned when a cohort version can not be\\nfound.\\n - DATASET_NOT_FOUND: DATASET_NOT_FOUND is returned when a dataset can not be found.\\n - UNIMPLEMENTED: UNIMPLEMENTED is returned when a path and/or method is unimplemented.\\n - INVALID_ARGUMENT: INVALID_ARGUMENT is returned when a supplied field is invalid.\\nThe name of the invalid field should be included in error metadata as\\n\\"invalid_field\\". The reason why of the field is invalid should be included\\nin error metadata as \\"validation_message\\".\\n - DESTINATIONS_NOT_FOUND: Destination errors\\nDESTINATIONS_NOT_FOUND is Returned when a destination can not be found.\\n - DESTINATIONS_INVALID_CONNECTOR: DESTINATIONS_INVALID_CONNECTOR is returned when an invalid connector is\\nprovided for destinations.\\n - DESTINATION_UNKNOWN_AUTH_TYPE: DESTINATION_UNKNOWN_AUTH_TYPE is returned when an unknown authentication\\ntype is provided for a destination.\\n - DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME: DESTINATIONS_UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when an\\nunsupported field name is provided to sort the results by. The name of the\\nunsupported field should be included in error metadata as\\n\\"unsupported_field\\".\\n - DESTINATIONS_INVALID_PAGINATION_INPUT: DESTINATIONS_INVALID_PAGINATION_INPUT is returned when an invalid\\npagination input is provided for listing.\\n - DESTINATIONS_ALREADY_EXISTS: DESTINATIONS_ALREADY_EXISTS is returned when an user tries to create a\\ndestination that doesn\'t conform to the unique constraints.\\n - ICC_INVALID_ARGUMENT: ICC_INVALID_ARGUMENT is returned when an ICC contains an invalid field\\n - ICC_MALFORMED_INPUT: ICC_MALFORMED_INPUT is returned when an ICC in a request is not valid\\n - ICC_NOT_FOUND: ICC_NOT_OUND is returned when a requested ICC is not found\\n - ICC_PERMISSION_DENIED: ICC_PERMISSION_DENIED is returned when a request is made to an ICC resource\\nwhich the user has no access to\\n - ICC_UNIQUE_NAME_VIOLATION: ICC_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an ICC with a duplicate name.\\n - ICC_IN_USE_CANNOT_BE_DELETED: ICC_IN_USE_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nICC while it\'s in use by an Import.\\n - ICC_ID_MUST_BE_EMPTY: ICC_ID_MUST_BE_EMPTY is returned when a user specifies the ID on creating a\\nnew ICC.\\n - ICC_CANNOT_BE_UPDATED: ICC_CANNOT_BE_UPDATED is returned when a user attempts to update an ICC\\nthat cannot be updated. The details of the error should be included in\\nerror metadata as \\"error_details\\".\\n - TRANSFORM_FAILED: TRANSFORM_FAILED is returned when a transform pipeline fails due to a bad\\nmapping\\n - TRANSFORM_INVALID: TRANSFORM_INVALID is returned when a transform pipeline fails due to a\\ntransformed row not matching the target output schema\\n - TRANSFORM_FAILED_WRITE: TRANSFORM_FAILED_WRITE is returned when a transform pipeline fails to write\\na valid row to the output target\\n - TRANSFORM_EXCEEDED_ROW_ERRORS: TRANSFORM_EXCEEDED_ROW_ERRORS is returned when a transform run is aborted\\ndue to exceeding the maximum number of row errors permitted\\n - IMPORTS_ID_MUST_BE_EMPTY: IMPORTS_ID_MUST_BE_EMPTY is returned when a user specifies the ID on\\ncreating a new Import.\\n - IMPORTS_UNIQUE_NAME_VIOLATION: IMPORTS_UNIQUE_NAME_VIOLATION is returned when a user attempts to create or\\nupdate an Import with a duplicate name.\\n - IMPORTS_NOT_FOUND: IMPORTS_NOT_FOUND is returned when the requested Import is not found.\\n - IMPORTS_EXECUTION_BUNKER_NOT_FOUND: IMPORTS_EXECUTION_BUNKER_NOT_FOUND is returned when a bunker for executing\\nan Import is not found for a given user or team.\\n - IMPORTS_CANNOT_CANCEL_TASK: IMPORTS_CANNOT_CANCEL_TASK is returned when a task can not be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - IMPORTS_EXECUTION_TASK_NOT_FOUND: IMPORTS_EXECUTION_TASK_NOT_FOUND is returned when the import execution task\\nis not found\\n - IMPORTS_CANNOT_BE_DELETED: IMPORTS_CANNOT_BE_DELETED is returned when a user attempts to delete an\\nImport that cannot be deleted. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - IMPORTS_CANNOT_BE_UPDATED: IMPORTS_CANNOT_BE_UPDATED is returned when a user attempts to update an\\nImport that cannot be updated. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - UNSUPPORTED_FILTER_FIELD_NAME: UNSUPPORTED_FILTER_FIELD_NAME is returned when a user attempts to filter\\nthe result by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - UNSUPPORTED_ORDER_BY_FIELD_NAME: UNSUPPORTED_ORDER_BY_FIELD_NAME is returned when a user attempts to sort\\nthe results by an unsupported field name. The name of the unsupported field\\nshould be included in error metadata as \\"field_name\\".\\n - INVALID_FILTER_INPUT: INVALID_FILTER_INPUT is returned when the filter provided by the user is\\nnot valid and can\'t be parsed. The details of the error should be included\\nin error metadata as \\"error_details\\".\\n - INVALID_UPDATE_MASK_FIELD_NAME: INVALID_UPDATE_MASK_FIELD_NAME is returned when a user attempts to update\\nan immutable/invalid field. The immutable/invalid field should be included\\nin error metadata as \\"field_name\\".\\n - API_MALFORMED_INPUT: API_MALFORMED_INPUT is returned when an api user provides invalid input for\\na request. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - INVALID_INPUT_VALUE: INVALID_INPUT_VALUE is returned when a user provides an invalid value for a\\nfield. The details of the error should be included in error metadata as\\n\\"error_details\\".\\n - BAD_PAGE_SIZE: BAD_PAGE_SIZE is returned when the perpage value in a pagination request is\\none that is not supported by the service\\n - FILE_METADATA_NOT_FOUND: FILE_METADATA_NOT_FOUND is returned when the file metadata get request\\ncannot be found.\\n - FILE_METADATA_IN_USE: FILE_METADATA_IN_USE is returned when any update is attempted on an in use\\nfile metadata record.\\n - FILE_METADATA_DELETED: FILE_METADATA_DELETED is returned when any update is attempted on a deleted\\nfile metadata record.\\n - FILE_METADATA_ALREADY_STRUCTURED: FILE_METADATA_ALREADY_STRUCTURED is returned when any structure update is\\nattempted on a structured file metadata record.\\n - FILE_NOT_FOUND: FILE_NOT_FOUND is returned when the requested file cannot be found.\\n - TASK_NOT_FOUND: TASK_NOT_FOUND is returned when the task get request cannot be found.\\n - TASK_CANNOT_CANCEL: TASK_CANNOT_CANCEL is returned when a task cannot be cancelled.\\nThe details of the error should be included in error metadata as\\n\\"error_details\\".\\n - FILEVAULT_NOT_FOUND: FILEVAULT_NOT_FOUND is returned when the filevault cannot be found for the\\nrequest.\\n - BUNKER_NOT_FOUND: BUNKER_NOT_FOUND is returned when the bunker cannot be found for the\\nrequest.\\n - EXPORT_FAILED: EXPORT errors\\nEXPORT_FAILED is returned when an export fails.\\n - EXPORT_FILE_EXISTS: EXPORT_FILE_EXISTS is returned when an export fails as to the output\\ndestination already exists.\\n - EXPORT_TIMEOUT: EXPORT_TIMEOUT is returned when exporting data timeout.\\n - EXPORT_S3_ERROR: EXPORT_S3_ERROR is returned when exporting to s3 fails.\\nThe aws error message should be included in error metadata as\\n\\"aws_error_message\\".\\n - EXPORT_S3_INVALID_ARGUMENT: EXPORT_S3_INVALID_ARGUMENT is returned when exporting to s3 due to an\\ninvalid argument.\\n - EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS: EXPORT_S3_ACCESS_DENIED_ACCESS_KEYS is returned when using aws access keys\\nand access to s3 bucket is denied.\\n - EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT: EXPORT_S3_ACCESS_DENIED_CROSS_ACCOUNT is returned when using aws cross\\naccount and access to s3 bucket is denied. The infosum aws role arn should\\nbe included in error metadata as \\"aws_role_arn\\".\\n - EXPORT_S3_BUCKET_PUBLIC: EXPORT_S3_BUCKET_PUBLIC is returned when an s3 bucket is public.\\n - EXPORT_TRADE_DESK_ERROR: EXPORT_TRADE_DESK_ERROR is returned when exporting to the trade desk fails.\\n - EXPORT_TRADE_DESK_INVALID_ID: EXPORT_TRADE_DESK_INVALID_ID is returned when exporting to the trade desk\\nfails due to the advertiser id not configured to accept data.\\n - EXPORT_TRADE_DESK_INVALID_SECRET: EXPORT_TRADE_DESK_INVALID_SECRET is returned when exporting to the trade\\ndesk due to advertiser secret key being incorrect.\\n - EXPORT_SFTP_ERROR: EXPORT_SFTP_ERROR is returned when exporting to an sftp server fails.\\n - EXPORT_SFTP_INVALID_CREDENTIALS: EXPORT_SFTP_INVALID_CREDENTIALS is returned when the users sftp\\nusername/password is invalid.\\n - EXPORT_SFTP_INVALID_SSH_KEY: EXPORT_SFTP_INVALID_SSH_KEY is returned when the users ssh key is invalid.\\n - EXPORT_SFTP_CREATE_DIRECTORY_ERROR: EXPORT_SFTP_CREATE_DIRECTORY_ERROR is returned when unable to create\\ncreated directories.\\n - EXPORT_SFTP_CREATE_FILE_ERROR: EXPORT_SFTP_CREATE_FILE_ERROR is returned when unable to create file.\\n - EXPORT_SFTP_NO_SUCH_HOST: EXPORT_SFTP_NO_SUCH_HOST is returned when the host can\'t be found.\\n - EXPORT_SFTP_CONNECTION_REFUSED: EXPORT_SFTP_CONNECTION_REFUSED is returned when connecting to the host\\nfails.\\n - EXPORT_GCS_ERROR: EXPORT_GCS_ERROR is returned when exporting data to gcs fails.\\n - EXPORT_PUBMATIC_ERROR: EXPORT_PUBMATIC_ERROR is returned when exporting to pubmatic fails.\\n - EXPORT_PUBMATIC_PARTIAL_ERROR: EXPORT_PUBMATIC_PARTIAL_ERROR is returned when some userId failed to be\\nsent to pubmatic. The percentage of successful requests sent to pubmatic\\nshould be included in error metadata as \\"success_rate\\".\\n - EXPORT_PUBMATIC_UNREGISTERED_SEG: EXPORT_PUBMATIC_UNREGISTERED_SEG is returned when all segments in the\\nrequest are unregistered.\\n - EXPORT_PUBMATIC_DPID_NOT_SUPPORTED: EXPORT_PUBMATIC_DPID_NOT_SUPPORTED is returned when the data provider ID\\nnot supported."},"translated_error":{"type":"string","title":"TranslatedError is the english translation of the ErrorCode"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}}}},"parameters":[{"name":"update_bulk.file_vault_id","description":"The globally unique identifier for the File Vault where the files to bulk apply metadata to are.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"filenames":{"type":"array","items":{"type":"string"},"description":"A list of the files in the File Vault to bulk apply metadata to."},"user_settings":{"type":"object","description":"A map of string to any value that can be used for any user specific tags or metadata. Some settings such as \'hidden\' are interpreted by the UI. An update replaces all all previous values."}},"title":"UpdateBulkMetadata is the bulk update request."}}},"description":"UpdateBulkMetadata is the bulk update request.","required":true},"tags":["FilesService"],"security":[{"API_Keys":[]}]}},"/api/v1/activations":{"get":{"summary":"List Activations","description":"List current activations, subject to the optional request filters.","operationId":"TyraelListActivations","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"activations":{"type":"array","items":{"type":"object","properties":{"activation_id":{"type":"string","description":"A unique identifier of the activation.","title":"Activation ID"},"campaign_name":{"type":"string","description":"The optional name that is associated with a campaign.","title":"Campaign Name"},"status":{"description":"Indicates the status of the activation query.","title":"Status","type":"string","enum":["QUERY_PENDING","QUERY_RUNNING","QUERY_COMPLETED"],"default":"QUERY_PENDING"},"total_rows":{"type":"integer","format":"int64","description":"The total number of rows in the result.","title":"Total Rows"},"submitted_at":{"type":"string","format":"date-time","description":"The time when the activation was submitted.","title":"Submitted At"},"query_successful":{"type":"boolean","description":"Indicates whether the activation query successfully completed.","title":"Query Successful"},"results_expired":{"type":"boolean","description":"Indicates whether the cached results for the activation query have expired.","title":"Results Expired"},"dataset_id":{"type":"string","description":"The ID of the dataset that was used in the activation query.","title":"Dataset ID"},"project_ids":{"type":"array","items":{"type":"string"},"description":"The projects that the Activation dataset belongs to.","title":"ProjectIDs"},"column_separator":{"type":"string","description":"The separator to be used to delimit activation data\\ncolumns.","title":"Column Separator"},"string_literal_column":{"description":"The optional string literal column.","title":"String Literal Column","type":"object","properties":{"column_name":{"type":"string","description":"The name of the column.","title":"Column Name"},"column_literal":{"type":"string","description":"The string literal that will be used for every row of\\nactivation data.","title":"Column Literal"}}},"original_record_count":{"type":"integer","format":"int64","description":"A count of the records before de-duplication","title":"Original Record Count"}},"description":"ActivationSummary describes summary information about an activation."},"description":"The list of activations which met the activation filter requirements.","title":"Activations"}},"description":"ListActivationsResponse is the response from the ListActivations endpoint.","title":"List Activation Queries Response"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"filter.campaign_name","description":"Campaign Name. The filter to be applied to the campaign name. Case insensitive. Supports partial names.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.submitted_at_filter.start_time","description":"Start. Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.submitted_at_filter.end_time","description":"End. Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.query_successful","description":"Query Successful. Filters activations that were successfully completed or not.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"filter.results_expired","description":"Results Expired. Filters activations that have expired or not.","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"filter.push_destinations","description":"Push Destinations. Filters queries that have been pushed to the specified\\ndestinations.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.output_columns","description":"Output Columns. Filters activations by the selected output columns. Activations which contain any of the specified output columns are included in the result","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.activation_dataset_private_ids","description":"Activation Dataset Private IDs. Filters queries by the activation dataset private ID used in\\nthe query. Activations for any of the dataset private IDs specified are included in the result.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.project_ids","description":"Project IDs. Filters queries by the projects that the activation dataset\\nbelongs to. Activations whose dataset belongs to any of the specified projects are included in the result.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"sort.by","description":"By is the field to sort by.","in":"query","required":false,"schema":{"type":"string"}},{"name":"sort.order","description":"Order is the order to sort in. Defaults\\nto ascending.\\n\\n - ASCENDING: Sort in ascending order.\\n - DESCENDING: Sort in descending order.","in":"query","required":false,"schema":{"type":"string","enum":["ASCENDING","DESCENDING"],"default":"ASCENDING"}}],"tags":["Activations"]},"post":{"summary":"Queue an Activation","description":"Create an Activation and queue the query for execution. Returns immediately with an ID of the Activation created. Use the Get Activation endpoint to see if the query has run. Only available for use with Activation Datasets.","operationId":"TyraelCreateActivationQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"activation_id":{"type":"string","description":"The ID of the Activation.","title":"Activation ID"},"query_completed":{"type":"boolean","description":"Whether the Query has finished or not.","title":"Query Completed"},"query_error":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors).","title":"Query Error"},"query_response":{"description":"Contains the response if the Query succeeded.","title":"Query Response","type":"object","properties":{"identities":{"type":"array","items":{"type":"string"},"description":"The identity types that were requested.","title":"Identities"},"total_rows":{"type":"integer","format":"int64","description":"Total Rows\\nThe total number of rows in the result."},"quality_measures":{"description":"Contain a number of statistics that provide an indication of the quality of the query.","title":"Quality Measures","type":"object","properties":{"redaction_threshold_outlier":{"type":"number","format":"float","description":"Indicates if one or more datasets may be obscuring the resolution of the results by\\nbeing significantly different from the others.","title":"Redaction Threshold Outlier"},"model_accuracy":{"type":"number","format":"float","description":"This is an indication of how accurately the engine represented the datasets involved when executing the query.\\nSmall errors are introduced in the query results due to internal statistical representations of the data during query execution.","title":"Model Accuracy"}}}}}},"description":"Status of an Activation Query.","title":"Activation Status"}}}},"400":{"description":"Returned when the Activation Query could not be parsed.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the dataset(s) in the query could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"query":{"type":"string","description":"The Query that should be executed. This takes the\\nformat of an InfoSum Activation Query. See\\nthe documentation of the InfoSum Activation Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"type":"object","properties":{"source_dataset":{"description":"Is the dataset name and keys that the path starts from.","title":"Source Dataset","type":"object","properties":{"private_id":{"type":"string","description":"Is the private ID of the Dataset.","title":"Private ID"},"keys":{"type":"array","items":{"type":"string"},"description":"Is an ordered list of keys that can be used when joining this dataset to another dataset.\\nWhen this dataset is joined to another dataset each row in the datasets is joined using the key order defined here.\\nIf a key is missing from a specific row, the next key in the order is used.","title":"Keys"}}},"destination_private_id":{"type":"string","description":"Is the private ID of the Dataset that the path ends at.","title":"Destination Private ID"}},"description":"Contains instructions on how to join two datasets, overriding the automatic choices made by the core engine.","title":"Path Override"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"},"campaign_name":{"type":"string","description":"A name that a user can associate with an activation query.","title":"CampaignName"},"column_separator":{"type":"string","description":"The separator to be used to delimit activation data columns.","title":"Column Separator"},"string_literal_column":{"description":"The optional string literal column.","title":"StringLiteralColumn","type":"object","properties":{"column_name":{"type":"string","description":"The name of the column.","title":"Column Name"},"column_literal":{"type":"string","description":"The string literal that will be used for every row of\\nactivation data.","title":"Column Literal"}}}},"description":"Used to queue an Activation Query with the CreateActivationQuery endpoint.","title":"Create Activation Query Request"}}},"required":true},"tags":["Activations"]}},"/api/v1/activations/validate":{"post":{"summary":"Validates an Activation Query","description":"Performs validation of an Activation Query without executing it.","operationId":"TyraelValidateActivationQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","description":"True if the Activation Query was successfully validated.","title":"Success"}},"description":"ValidateActivationQueryResponse is the output of the ValidateActivationQuery method.","title":"Validate activation query response"}}}},"400":{"description":"Returned when the Activation Query is invalid.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"query":{"type":"string","description":"The query to be validated. This takes the format of an IQL Query.\\nSee the documentation of the IQL for more information.","title":"Query"},"path_overrides":{"type":"array","items":{"type":"object","properties":{"source_dataset":{"description":"Is the dataset name and keys that the path starts from.","title":"Source Dataset","type":"object","properties":{"private_id":{"type":"string","description":"Is the private ID of the Dataset.","title":"Private ID"},"keys":{"type":"array","items":{"type":"string"},"description":"Is an ordered list of keys that can be used when joining this dataset to another dataset.\\nWhen this dataset is joined to another dataset each row in the datasets is joined using the key order defined here.\\nIf a key is missing from a specific row, the next key in the order is used.","title":"Keys"}}},"destination_private_id":{"type":"string","description":"Is the private ID of the Dataset that the path ends at.","title":"Destination Private ID"}},"description":"Contains instructions on how to join two datasets, overriding the automatic choices made by the core engine.","title":"Path Override"},"description":"A list of instructions on how to connect two datasets,\\noverriding the automatic choices made by the core engine.","title":"Path Overrides"},"string_literal_column":{"description":"The optional string literal output column for the query","title":"String Literal Column","type":"object","properties":{"column_name":{"type":"string","description":"The name of the column.","title":"Column Name"},"column_literal":{"type":"string","description":"The string literal that will be used for every row of\\nactivation data.","title":"Column Literal"}}}},"description":"ValidateActivationQueryRequest is the output of the ValidateActivationQuery endpoint.","title":"Validate activation query request"}}},"required":true},"tags":["Activations"]}},"/api/v1/activations/{activation_id}":{"get":{"summary":"Get an Activation","description":"Get detailed information about an Activation, including query and push statuses.","operationId":"TyraelGetActivation","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"activation":{"description":"Detailed information about the requested activation.","title":"Activation","type":"object","properties":{"summary":{"type":"object","properties":{"activation_id":{"type":"string","description":"A unique identifier of the activation.","title":"Activation ID"},"campaign_name":{"type":"string","description":"The optional name that is associated with a campaign.","title":"Campaign Name"},"status":{"description":"Indicates the status of the activation query.","title":"Status","type":"string","enum":["QUERY_PENDING","QUERY_RUNNING","QUERY_COMPLETED"],"default":"QUERY_PENDING"},"total_rows":{"type":"integer","format":"int64","description":"The total number of rows in the result.","title":"Total Rows"},"submitted_at":{"type":"string","format":"date-time","description":"The time when the activation was submitted.","title":"Submitted At"},"query_successful":{"type":"boolean","description":"Indicates whether the activation query successfully completed.","title":"Query Successful"},"results_expired":{"type":"boolean","description":"Indicates whether the cached results for the activation query have expired.","title":"Results Expired"},"dataset_id":{"type":"string","description":"The ID of the dataset that was used in the activation query.","title":"Dataset ID"},"project_ids":{"type":"array","items":{"type":"string"},"description":"The projects that the Activation dataset belongs to.","title":"ProjectIDs"},"column_separator":{"type":"string","description":"The separator to be used to delimit activation data\\ncolumns.","title":"Column Separator"},"string_literal_column":{"description":"The optional string literal column.","title":"String Literal Column","type":"object","properties":{"column_name":{"type":"string","description":"The name of the column.","title":"Column Name"},"column_literal":{"type":"string","description":"The string literal that will be used for every row of\\nactivation data.","title":"Column Literal"}}},"original_record_count":{"type":"integer","format":"int64","description":"A count of the records before de-duplication","title":"Original Record Count"}},"description":"ActivationSummary describes summary information about an activation.","title":"Summary"},"query_error":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors).","title":"Query Error"},"output_columns":{"type":"array","items":{"type":"string"},"description":"The output columns that were requested.","title":"Output Columns"},"pushes":{"type":"array","items":{"type":"object","properties":{"push_id":{"type":"string","description":"The unique identifier for the push.","title":"Push ID"},"status":{"description":"The status of the push.","title":"Status","type":"string","enum":["PUSH_PENDING","PUSH_RUNNING","PUSH_COMPLETED"],"default":"PUSH_PENDING"},"connector_type":{"type":"string","description":"The type of the connector used for the push.","title":"Connector Type"},"pushed_at":{"type":"string","format":"date-time","description":"The time when the push was executed.","title":"Pushed At"},"completed_at":{"type":"string","format":"date-time","description":"The time when the push completed.","title":"Completed At"},"push_error":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors).","title":"Push Error"},"push_successful":{"type":"boolean","description":"Indicates whether the push successfully completed.","title":"Push Successful"}},"description":"Push contains details about a specific push of an activation."},"description":"The list of pushes for this activation.","title":"Pushes"},"query_string":{"type":"string","description":"The raw IQL query string representation of the query.","title":"Query String"}}}},"description":"GetActivationResponse is the response from the GetActivation\\nmethod.","title":"Get Activation Response"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the requested Activation Query could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"activation_id","description":"Activation ID\\n\\nThe unique ID of the activation to get.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Activations"]}},"/api/v1/activations/{activation_id}/push":{"post":{"summary":"Pushes the activation query results to the specified push connector","description":"Pushes the result of an activation query to the specified push connector","operationId":"TyraelPushActivationResult","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"push_id":{"type":"string","description":"Is the unique identifier for the push request.","title":"Push ID"}},"description":"PushActivationResultResponse is the output of the PushActivationResult endpoint.","title":"Push activation query results request"}}}},"400":{"description":"Returned when the Activation Query results could not be pushed.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Activation Query can not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"activation_id","description":"Activation ID\\n\\nThe ID of the activation to push the results of.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"push_connector_id":{"type":"string","description":"Is the ID of the Push Connector to push the results to.","title":"Push Connector ID"},"push_connector_config":{"type":"object","additionalProperties":{"type":"string"},"description":"The push connector map of Configuration Form field IDs to their values for configuring the push connector.","title":"PushConnectorConfig"}},"description":"PushActivationResultRequest is the input for the PushActivationResult endpoints.","title":"Push activation query results request"}}},"required":true},"tags":["Activations"]}},"/api/v1/activations/{activation_id}/push_connectors":{"get":{"summary":"List the permitted Push Connectors for an Activation Query","description":"Returns a list of all the Push Connectors that can be used with the specified Activation Query.","operationId":"TyraelListActivationPushConnectors","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"push_connectors":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the push connector.","title":"Id"},"name":{"type":"string","description":"The display name of the push connector.","title":"Name"}},"description":"The Name and ID for a Push Connector.","title":"Push Connector"},"description":"Is a list of permitted push connector IDs for the specified activation query,\\nand their associated display names.","title":"PushConnectors"}},"description":"ListActivationPushConnectorsResponse is the output of the ListActivationPushConnectors endpoint.","title":"List Push Connectors Response is the output of the ListActivationPushConnectors endpoint"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"403":{"description":"Returned when the user does not have access to activations via the InfoSum API.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Activation Query can not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"activation_id","description":"Activation ID\\n\\nIs the ID of the activation to list the permitted push connectors for.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Activations"]}},"/api/v1/base_push_connectors":{"get":{"summary":"List all base Push Connectors","description":"List all Push Connectors that can be used to create a new Push Connector.","operationId":"TyraelListBasePushConnectors","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"push_connectors":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the push connector.","title":"Id"},"name":{"type":"string","description":"The display name of the push connector.","title":"Name"}},"description":"The Name and ID for a Push Connector.","title":"Push Connector"},"description":"A list of base Push Connector IDs and their associated names.","title":"PushConnectors"}},"description":"The list of Push Connectors that can be used to create new Push Connectors.","title":"List Base Push Connectors Response"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"tags":["Push Connectors"]}},"/api/v1/connections":{"get":{"summary":"List all available Connections","description":"List all Connections available from user owned Datasets to Datasets which the user has been granted access.","operationId":"TyraelListConnections","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"connections":{"type":"array","items":{"type":"object","properties":{"from_dataset_private_id":{"type":"string","description":"The private ID of the origin Dataset for the Connection.","title":"From Dataset Private ID"},"to_dataset_private_id":{"type":"string","description":"The private ID of the Dataset connected to the origin Dataset.","title":"To Dataset Private ID"},"keys":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The name for the key.","title":"Name"},"intersection":{"type":"string","format":"uint64","description":"The number of rows in the FromDataset that are present in\\nthe ToDataset when using this key.","title":"Intersection"},"duplicates":{"type":"string","format":"uint64","description":"Duplicates\\nThe number of duplicates from the FromDataset that are\\nfound in the ToDataset when using this key."},"bad_estimate":{"type":"boolean","description":"BadEstimate\\nFlag, is true when the estimated \'Intersection\' and \'Duplicates\'\\nare expected to be bad. More accurate values are calculated\\nin the background and should be available in a future request.\\nThe Time depends on the size of the involved datasets and on the\\namount of permitted connections."},"union":{"type":"string","format":"uint64","title":"Union is the number of rows in the FromDataset and the ToDataset minus the\\nintersection when using this key"},"exclude":{"type":"string","format":"uint64","title":"Exclude is the number of rows in the FromDataset minus the intersection\\nwhen using this key"},"intersection_expansion_count":{"type":"string","format":"int64","description":"Fields 7 and 8 have been removed as they have been deprecated and are not in use (non nullable intersection expansion/reduction counts).\\nA combination of a multi value to a single will be result in an expansion (intersection). This value needs to be nullable."},"intersection_reduction_count":{"type":"string","format":"int64","description":"A combination of a single value to a multi value will result in a reduction (intersection). This value needs to be nullable."}},"description":"Describes the intersection and duplicates from one Dataset to another when using this key.","title":"Graph Connection"},"description":"Contains the intersection and duplicates for each key\\nthat the Datasets have in common.","title":"Keys"},"selected_key_name":{"type":"string","description":"The name of the key that we might select for a simple\\nquery that moves the FromDataset to the ToDataset.","title":"Selected Key Name"}},"description":"A Connection between two Datasets.","title":"Connection"},"description":"A list of all Connections between the users Datasets and\\nthose the user has been granted access to.","title":"Connections"},"datasets":{"type":"array","items":{"type":"object","properties":{"private_id":{"type":"string","description":"The private ID assigned to the Dataset.\\nThis is assigned by the user and unique to them.","title":"Private ID"},"owner":{"description":"The owner of the Dataset.","title":"Owner","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"public_name":{"type":"string","description":"The public name assigned to the Dataset by the Owner.","title":"Public Name"},"public_description":{"type":"string","description":"The description assigned to the Dataset by the Owner.","title":"Public Description"},"create_time":{"type":"string","format":"date-time","description":"The time when the Owner created the Dataset.","title":"Create time"},"last_queried_time":{"type":"string","format":"date-time","description":"The time when the Dataset was last queried.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Time Last Queried"},"expire_time":{"type":"string","format":"date-time","description":"The time when this Dataset expires.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Expire Time"},"state":{"description":"The current state of the Dataset.","title":"State","type":"object","properties":{"bunker_state":{"description":"The state that the Bunker for the Dataset is in.","title":"BunkerState","type":"string","enum":["CLAIMED","UPLOADING","UPLOADED","UPLOAD_FAILED","CONVERTING","CONVERTED","CONVERSION_FAILED","NORMALISING","NORMALISED","NORMALISATION_FAILED","ONLINE","UPGRADING","PROVISIONING"],"default":"CLAIMED"},"progress":{"type":"number","format":"double","description":"Indicates how far through the current state the Bunker is.\\nThis is valid for UPLOADING, CONVERTING, and NORMALISING states only.\\nValues start at 0.0 for 0% progress, through to 1.0 for 100% complete.","title":"Progress"}}},"latest_access":{"description":"Latest instance of a user accessing the Dataset (e.g. creating a new browser session).\\nIt may not be set if the Dataset has not yet been accessed.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"LatestAccess","type":"object","properties":{"user":{"description":"The User that accessed the Dataset.","title":"User","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"access_time":{"type":"string","format":"date-time","description":"The time at which the Dataset was accessed.","title":"Access Time"}}},"stats":{"description":"Contains statistical information about the Dataset. Output only.","title":"Stats","readOnly":true,"type":"object","properties":{"version":{"description":"Describes the version of the Dataset.","title":"Version","type":"object","properties":{"version":{"type":"string","description":"A version string to represent the installed software\\nversion of the Bunker.","title":"Version"},"last_normalised_time":{"type":"string","format":"date-time","description":"The timestamp of the last normalisation run.","title":"Last Normalised Time"},"global_schema_id":{"type":"string","format":"int64","description":"The ID of the used global schema version.","title":"Global Schema ID"},"global_schema_name":{"type":"string","description":"The version/name of the used global schema.","title":"Global Schema Name"},"global_schema_status":{"type":"string","description":"The status of the used global schema,\\ne.g. \\"beta-1\\", \\"release\\".","title":"Global Schema Status"},"dataset_version":{"type":"string","description":"The version for the internal dataset held by the Bunker that should be used\\nwhen querying the Bunker.","title":"Dataset Version"}}},"row_count":{"type":"string","format":"uint64","description":"The number of queryable rows in the Dataset.","title":"RowCount"},"redaction_threshold":{"type":"integer","format":"int64","description":"The minimum number of results required for a bin\\nto be included in the results returned when querying this Dataset.","title":"RedactionThreshold"},"keys":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The Keys\' display name.","title":"Label"},"null_fraction":{"type":"number","format":"double","description":"The fraction of the values in this Key that are `null`,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"NullFraction"},"num_distinct":{"type":"number","format":"double","description":"An estimated number of distinct values in the Key, if positive, or\\nthe number of distinct values divided by the number of rows, if negative.\\n\\nSign  | Negative     | Positive\\n----- | ------------ | --------\\nValue | Uniques/Rows | Uniques","title":"NumDistinct"}},"description":"A Dataset Key, for joining between Datasets.","title":"Key"},"description":"Describes all key columns.","title":"Keys"},"categories":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The text label of the Category, such as \\"Age\\" or \\"Gender\\".","title":"Label"},"representations":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The text label of the Representation, such as \\"Binary Gender\\".","title":"Label"},"data_type":{"description":"The data type of the values of this Representation.","title":"DataType","type":"string","enum":["STRINGS","BOOLEANS","INTEGERS","INTEGER_RANGES","STRING_SET","INTEGER_SET"],"default":"STRINGS"},"precision":{"type":"number","format":"double","description":"How accurate this Representation is to the source data. It is\\nin the range (0, 1], representating a percentage value between 0% and 100%.\\nThings that affect the Precision of a Representation include any data transformations\\nthat had to be performed to match the source data into this Representation.","title":"Precision"},"statistics":{"description":"Contains statistics for the values in this Representation.","title":"Statistics","type":"object","properties":{"average":{"type":"number","format":"double","description":"The average value of the column.\\nOnly populated if the type of the Representation is numeric.","title":"Average"},"standard_deviation":{"type":"number","format":"double","description":"The standard deviation of the column-\\nOnly populated if the type of the Representation is numeric.","title":"StandardDeviation"},"percentiles":{"type":"array","items":{"type":"number","format":"double"},"description":"Array of 101 elements representing percentiles from 0 to 100 with stepsize 1.\\nThe first element is the minimum value found and the last element is the maximum value found.\\nOnly populated if the type of the Representation is numeric.","title":"Percentiles"},"null_fraction":{"type":"number","format":"double","description":"The fraction of the values in this Representation that are `null`,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"NullFraction"},"num_distinct":{"type":"number","format":"double","description":"An estimated number of distinct values in the Representation, if positive, or\\nthe number of distinct values divided by the number of rows, if negative.\\n\\nSign  | Negative     | Positive\\n----- | ------------ | --------\\nValue | Uniques/Rows | Uniques","title":"NumDistinct"},"most_common":{"type":"array","items":{"type":"object","properties":{"value":{"type":"string","description":"The Value, as a string.","title":"Value"},"frequency":{"type":"number","format":"double","description":"The frequency with which this Value appears in the Representation,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"Frequency"}},"description":"An occurrence of a value, and with what frequency it appears in the Representation.","title":"Occurrence"},"description":"An array of the most common elements in the Representation, if there\\nare any that occur with greater frequency than others.","title":"MostCommon"}}},"possible_values":{"type":"array","items":{"type":"string"},"description":"Contains the list of values or ranges that this representation can contain. If the\\nPossibleValues contains an empty list then it represents that it can be any value defined by\\nthe DataType value.","title":"PossibleValues"}},"description":"A Representation of a Category, such as \\"Binary Gender\\".","title":"Representation"},"description":"An array of all Representations of this Category in this Dataset.","title":"Representations"},"version":{"type":"string","format":"int64","description":"The Category version number.","title":"Version"},"unit":{"type":"string","description":"The unit that this Category should be be displayed in.","title":"Unit"}},"description":"An InfoSum data Category, such as \\"Age\\" or \\"Gender\\".","title":"Category"},"description":"Describes all categories.","title":"Categories"},"identities":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The user-assigned name of the contents of the Output Data.","title":"Name"}},"description":"An Identity column in an Identity Dataset.","title":"Identity"},"description":"Describes all Identities.","title":"Identities"}}},"credits":{"description":"Contains the credit allocation and usage for this Dataset.","title":"Credits","type":"object","properties":{"allocation":{"type":"integer","format":"int64","description":"The number of credits that may be used per billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Allocation"},"current_allocation":{"type":"integer","format":"int64","description":"The maximum number of credits that may be used in\\nThis field is only returned if the requesting user is the owner of the Dataset.\\nthe current billing cycle.","title":"CurrentAllocation"},"used":{"type":"integer","format":"int64","description":"The number of credits used in the this billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Used"},"shares":{"type":"array","items":{"type":"object","properties":{"user":{"description":"The User to whom credits have been allocated.\\nThis is the User who is the recipient of the Permission.","title":"User","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"allowance":{"type":"integer","format":"int64","description":"The number of credits allocated to this Share per billing cycle.","title":"Allowance"},"current_allowance":{"type":"integer","format":"int64","description":"The number of credits that may be used on this Share in\\nthe current billing cycle.","title":"CurrentAllowance"},"used":{"type":"integer","format":"int64","description":"The number of credits used by this User in this billing cycle.","title":"Used"},"uses_parent_allocation":{"type":"boolean","description":"Indicates whether this User was allocated a specific\\nnumber of credits, or if they consume credits directly from the Dataset.\\nIf true, Allowance and CurrentAllowance may be ignored.","title":"UsesParentAllocation"}},"description":"The credits allowance and usage on a specific Permission.","title":"Credit Share"},"description":"A breakdown of how many credits have been allocated and\\nused for each Permission. For non-owners, only the share\\nrelated to their Permission is shown.","title":"Shares"}}},"product":{"description":"The type of product this Dataset is configured as.\\nOutput only.","title":"Product","readOnly":true,"type":"string","enum":["INSIGHT","IDENTITY"],"default":"INSIGHT"}},"description":"A Dataset.","title":"Dataset"},"description":"A is a list of Datasets included.","title":"Datasets"}},"description":"A list of Connections, as returned by the ListConnections method.","title":"Connections List"}}}},"400":{"description":"Returned when an invalid request filter is used.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"filter.origin_private_ids","description":"Origin Private Dataset IDs. The private IDs of the Datasets to display all connections from.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.connected_datasets.private_ids","description":"PrivateIds. The filter to be applied to the private IDs of the returned\\nDatasets. Only Datasets with private IDs containing one of the strings\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.connected_datasets.public_names","description":"PublicNames. The filter to be applied to the public names of the\\nreturned Datasets. Only Datasets with public names containing one of the\\nstring specified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.connected_datasets.public_description","description":"PublicDescription. The filter to be applied to the public descriptions\\nof the returned Datasets. Only Datasets with public descriptions\\ncontaining the string specified in this filter will be returned. Case\\ninsensitive.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.connected_datasets.create_time_filter.start_time","description":"Start. Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.connected_datasets.create_time_filter.end_time","description":"End. Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.connected_datasets.owner_ids","description":"Owner User IDs. Filters Datasets on the specified owner user IDs.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.connected_datasets.categories.ids","description":"Ids. The IDs of the Categories that must be present in the Dataset.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string","format":"int64"}}},{"name":"filter.connected_datasets.categories.min_fill_rates","description":"MinFillRates. The minimum fill rates for each category specified in Ids.\\nThese are inclusive of the bound. A value must be specified for each\\nCategory. If the user doesn\'t want to filter by fill rate, they can set\\nthe minimum fill rate to 0, which will match all fill rate values.\\nValues should be in the range 0 to 1, inclusive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"number","format":"double"}}},{"name":"filter.connected_datasets.project_ids","description":"ProjectIds. The filter to be applied to the projects associated with the returned\\nDatasets. Only Datasets within projects matching one of the project ids\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.min_intersection","description":"Min Intersection. The lowest acceptable intersection relative to the\\nsize of the connected Dataset. This is calculated by taking the number\\nof rows in the from Dataset that are also in the to Dataset when using\\nthe \'best\' key, and diving by the total number of rows in the from\\nDataset.  Values can be between 0 and 1, inclusive. If ommitted, any\\nintersection will be allowed.","in":"query","required":false,"schema":{"type":"number","format":"double"}},{"name":"sort.by","description":"By is the field to sort by.","in":"query","required":false,"schema":{"type":"string"}},{"name":"sort.order","description":"Order is the order to sort in. Defaults\\nto ascending.\\n\\n - ASCENDING: Sort in ascending order.\\n - DESCENDING: Sort in descending order.","in":"query","required":false,"schema":{"type":"string","enum":["ASCENDING","DESCENDING"],"default":"ASCENDING"}}],"tags":["Connections"]}},"/api/v1/connections/{first_private_id}/{second_private_id}":{"get":{"summary":"Get metadata for a Connection","description":"Gets metadata for a specific Connection between two Datasets.","operationId":"TyraelGetConnection","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"connection":{"type":"object","properties":{"from_dataset_private_id":{"type":"string","description":"The private ID of the origin Dataset for the Connection.","title":"From Dataset Private ID"},"to_dataset_private_id":{"type":"string","description":"The private ID of the Dataset connected to the origin Dataset.","title":"To Dataset Private ID"},"keys":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The name for the key.","title":"Name"},"intersection":{"type":"string","format":"uint64","description":"The number of rows in the FromDataset that are present in\\nthe ToDataset when using this key.","title":"Intersection"},"duplicates":{"type":"string","format":"uint64","description":"Duplicates\\nThe number of duplicates from the FromDataset that are\\nfound in the ToDataset when using this key."},"bad_estimate":{"type":"boolean","description":"BadEstimate\\nFlag, is true when the estimated \'Intersection\' and \'Duplicates\'\\nare expected to be bad. More accurate values are calculated\\nin the background and should be available in a future request.\\nThe Time depends on the size of the involved datasets and on the\\namount of permitted connections."},"union":{"type":"string","format":"uint64","title":"Union is the number of rows in the FromDataset and the ToDataset minus the\\nintersection when using this key"},"exclude":{"type":"string","format":"uint64","title":"Exclude is the number of rows in the FromDataset minus the intersection\\nwhen using this key"},"intersection_expansion_count":{"type":"string","format":"int64","description":"Fields 7 and 8 have been removed as they have been deprecated and are not in use (non nullable intersection expansion/reduction counts).\\nA combination of a multi value to a single will be result in an expansion (intersection). This value needs to be nullable."},"intersection_reduction_count":{"type":"string","format":"int64","description":"A combination of a single value to a multi value will result in a reduction (intersection). This value needs to be nullable."}},"description":"Describes the intersection and duplicates from one Dataset to another when using this key.","title":"Graph Connection"},"description":"Contains the intersection and duplicates for each key\\nthat the Datasets have in common.","title":"Keys"},"selected_key_name":{"type":"string","description":"The name of the key that we might select for a simple\\nquery that moves the FromDataset to the ToDataset.","title":"Selected Key Name"}},"description":"A Connection between two Datasets.","title":"Connection"}},"description":"Metadata for a single Connection between two Datasets.","title":"Connection Response"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when one or both of the Datasets could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"first_private_id","description":"First Private Datasets ID\\n\\nThe Private ID of the first Dataset in this Connection.","in":"path","required":true,"schema":{"type":"string"}},{"name":"second_private_id","description":"Second Datasets ID\\n\\nThe Private ID of the second Dataset in this Connection.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Connections"]}},"/api/v1/datasets":{"get":{"summary":"List Datasets","description":"Lists Datasets the user has access to.","operationId":"TyraelListDatasets","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"datasets":{"type":"array","items":{"type":"object","properties":{"private_id":{"type":"string","description":"The private ID assigned to the Dataset.\\nThis is assigned by the user and unique to them.","title":"Private ID"},"owner":{"description":"The owner of the Dataset.","title":"Owner","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"public_name":{"type":"string","description":"The public name assigned to the Dataset by the Owner.","title":"Public Name"},"public_description":{"type":"string","description":"The description assigned to the Dataset by the Owner.","title":"Public Description"},"create_time":{"type":"string","format":"date-time","description":"The time when the Owner created the Dataset.","title":"Create time"},"last_queried_time":{"type":"string","format":"date-time","description":"The time when the Dataset was last queried.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Time Last Queried"},"expire_time":{"type":"string","format":"date-time","description":"The time when this Dataset expires.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Expire Time"},"state":{"description":"The current state of the Dataset.","title":"State","type":"object","properties":{"bunker_state":{"description":"The state that the Bunker for the Dataset is in.","title":"BunkerState","type":"string","enum":["CLAIMED","UPLOADING","UPLOADED","UPLOAD_FAILED","CONVERTING","CONVERTED","CONVERSION_FAILED","NORMALISING","NORMALISED","NORMALISATION_FAILED","ONLINE","UPGRADING","PROVISIONING"],"default":"CLAIMED"},"progress":{"type":"number","format":"double","description":"Indicates how far through the current state the Bunker is.\\nThis is valid for UPLOADING, CONVERTING, and NORMALISING states only.\\nValues start at 0.0 for 0% progress, through to 1.0 for 100% complete.","title":"Progress"}}},"latest_access":{"description":"Latest instance of a user accessing the Dataset (e.g. creating a new browser session).\\nIt may not be set if the Dataset has not yet been accessed.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"LatestAccess","type":"object","properties":{"user":{"description":"The User that accessed the Dataset.","title":"User","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"access_time":{"type":"string","format":"date-time","description":"The time at which the Dataset was accessed.","title":"Access Time"}}},"stats":{"description":"Contains statistical information about the Dataset. Output only.","title":"Stats","readOnly":true,"type":"object","properties":{"version":{"description":"Describes the version of the Dataset.","title":"Version","type":"object","properties":{"version":{"type":"string","description":"A version string to represent the installed software\\nversion of the Bunker.","title":"Version"},"last_normalised_time":{"type":"string","format":"date-time","description":"The timestamp of the last normalisation run.","title":"Last Normalised Time"},"global_schema_id":{"type":"string","format":"int64","description":"The ID of the used global schema version.","title":"Global Schema ID"},"global_schema_name":{"type":"string","description":"The version/name of the used global schema.","title":"Global Schema Name"},"global_schema_status":{"type":"string","description":"The status of the used global schema,\\ne.g. \\"beta-1\\", \\"release\\".","title":"Global Schema Status"},"dataset_version":{"type":"string","description":"The version for the internal dataset held by the Bunker that should be used\\nwhen querying the Bunker.","title":"Dataset Version"}}},"row_count":{"type":"string","format":"uint64","description":"The number of queryable rows in the Dataset.","title":"RowCount"},"redaction_threshold":{"type":"integer","format":"int64","description":"The minimum number of results required for a bin\\nto be included in the results returned when querying this Dataset.","title":"RedactionThreshold"},"keys":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The Keys\' display name.","title":"Label"},"null_fraction":{"type":"number","format":"double","description":"The fraction of the values in this Key that are `null`,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"NullFraction"},"num_distinct":{"type":"number","format":"double","description":"An estimated number of distinct values in the Key, if positive, or\\nthe number of distinct values divided by the number of rows, if negative.\\n\\nSign  | Negative     | Positive\\n----- | ------------ | --------\\nValue | Uniques/Rows | Uniques","title":"NumDistinct"}},"description":"A Dataset Key, for joining between Datasets.","title":"Key"},"description":"Describes all key columns.","title":"Keys"},"categories":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The text label of the Category, such as \\"Age\\" or \\"Gender\\".","title":"Label"},"representations":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The text label of the Representation, such as \\"Binary Gender\\".","title":"Label"},"data_type":{"description":"The data type of the values of this Representation.","title":"DataType","type":"string","enum":["STRINGS","BOOLEANS","INTEGERS","INTEGER_RANGES","STRING_SET","INTEGER_SET"],"default":"STRINGS"},"precision":{"type":"number","format":"double","description":"How accurate this Representation is to the source data. It is\\nin the range (0, 1], representating a percentage value between 0% and 100%.\\nThings that affect the Precision of a Representation include any data transformations\\nthat had to be performed to match the source data into this Representation.","title":"Precision"},"statistics":{"description":"Contains statistics for the values in this Representation.","title":"Statistics","type":"object","properties":{"average":{"type":"number","format":"double","description":"The average value of the column.\\nOnly populated if the type of the Representation is numeric.","title":"Average"},"standard_deviation":{"type":"number","format":"double","description":"The standard deviation of the column-\\nOnly populated if the type of the Representation is numeric.","title":"StandardDeviation"},"percentiles":{"type":"array","items":{"type":"number","format":"double"},"description":"Array of 101 elements representing percentiles from 0 to 100 with stepsize 1.\\nThe first element is the minimum value found and the last element is the maximum value found.\\nOnly populated if the type of the Representation is numeric.","title":"Percentiles"},"null_fraction":{"type":"number","format":"double","description":"The fraction of the values in this Representation that are `null`,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"NullFraction"},"num_distinct":{"type":"number","format":"double","description":"An estimated number of distinct values in the Representation, if positive, or\\nthe number of distinct values divided by the number of rows, if negative.\\n\\nSign  | Negative     | Positive\\n----- | ------------ | --------\\nValue | Uniques/Rows | Uniques","title":"NumDistinct"},"most_common":{"type":"array","items":{"type":"object","properties":{"value":{"type":"string","description":"The Value, as a string.","title":"Value"},"frequency":{"type":"number","format":"double","description":"The frequency with which this Value appears in the Representation,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"Frequency"}},"description":"An occurrence of a value, and with what frequency it appears in the Representation.","title":"Occurrence"},"description":"An array of the most common elements in the Representation, if there\\nare any that occur with greater frequency than others.","title":"MostCommon"}}},"possible_values":{"type":"array","items":{"type":"string"},"description":"Contains the list of values or ranges that this representation can contain. If the\\nPossibleValues contains an empty list then it represents that it can be any value defined by\\nthe DataType value.","title":"PossibleValues"}},"description":"A Representation of a Category, such as \\"Binary Gender\\".","title":"Representation"},"description":"An array of all Representations of this Category in this Dataset.","title":"Representations"},"version":{"type":"string","format":"int64","description":"The Category version number.","title":"Version"},"unit":{"type":"string","description":"The unit that this Category should be be displayed in.","title":"Unit"}},"description":"An InfoSum data Category, such as \\"Age\\" or \\"Gender\\".","title":"Category"},"description":"Describes all categories.","title":"Categories"},"identities":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The user-assigned name of the contents of the Output Data.","title":"Name"}},"description":"An Identity column in an Identity Dataset.","title":"Identity"},"description":"Describes all Identities.","title":"Identities"}}},"credits":{"description":"Contains the credit allocation and usage for this Dataset.","title":"Credits","type":"object","properties":{"allocation":{"type":"integer","format":"int64","description":"The number of credits that may be used per billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Allocation"},"current_allocation":{"type":"integer","format":"int64","description":"The maximum number of credits that may be used in\\nThis field is only returned if the requesting user is the owner of the Dataset.\\nthe current billing cycle.","title":"CurrentAllocation"},"used":{"type":"integer","format":"int64","description":"The number of credits used in the this billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Used"},"shares":{"type":"array","items":{"type":"object","properties":{"user":{"description":"The User to whom credits have been allocated.\\nThis is the User who is the recipient of the Permission.","title":"User","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"allowance":{"type":"integer","format":"int64","description":"The number of credits allocated to this Share per billing cycle.","title":"Allowance"},"current_allowance":{"type":"integer","format":"int64","description":"The number of credits that may be used on this Share in\\nthe current billing cycle.","title":"CurrentAllowance"},"used":{"type":"integer","format":"int64","description":"The number of credits used by this User in this billing cycle.","title":"Used"},"uses_parent_allocation":{"type":"boolean","description":"Indicates whether this User was allocated a specific\\nnumber of credits, or if they consume credits directly from the Dataset.\\nIf true, Allowance and CurrentAllowance may be ignored.","title":"UsesParentAllocation"}},"description":"The credits allowance and usage on a specific Permission.","title":"Credit Share"},"description":"A breakdown of how many credits have been allocated and\\nused for each Permission. For non-owners, only the share\\nrelated to their Permission is shown.","title":"Shares"}}},"product":{"description":"The type of product this Dataset is configured as.\\nOutput only.","title":"Product","readOnly":true,"type":"string","enum":["INSIGHT","IDENTITY"],"default":"INSIGHT"}},"description":"A Dataset.","title":"Dataset"},"description":"The Datasets returned by the ListDatasets method.","title":"Datasets"}},"description":"A list of Datasets, as returned from the ListDatasets method.","title":"Datasets List"}}}},"400":{"description":"Returned when an invalid filter is used.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"filter.ownership","description":"OwnershipFilter. Specifies whether to return all Datasets, or only those that are\\nowned or not owned by the requesting user.\\n\\n - ANY_OWNERSHIP: Returns all Datasets the user has access to.\\n - OWNED: Only returns Datasets owned by the user.\\n - NOT_OWNED: Only returns Datasets not owned by the user.","in":"query","required":false,"schema":{"type":"string","enum":["ANY_OWNERSHIP","OWNED","NOT_OWNED"],"default":"ANY_OWNERSHIP"}},{"name":"filter.datasets.private_ids","description":"PrivateIds. The filter to be applied to the private IDs of the returned\\nDatasets. Only Datasets with private IDs containing one of the strings\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.datasets.public_names","description":"PublicNames. The filter to be applied to the public names of the\\nreturned Datasets. Only Datasets with public names containing one of the\\nstring specified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.datasets.public_description","description":"PublicDescription. The filter to be applied to the public descriptions\\nof the returned Datasets. Only Datasets with public descriptions\\ncontaining the string specified in this filter will be returned. Case\\ninsensitive.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.datasets.create_time_filter.start_time","description":"Start. Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.datasets.create_time_filter.end_time","description":"End. Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.datasets.owner_ids","description":"Owner User IDs. Filters Datasets on the specified owner user IDs.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.datasets.categories.ids","description":"Ids. The IDs of the Categories that must be present in the Dataset.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string","format":"int64"}}},{"name":"filter.datasets.categories.min_fill_rates","description":"MinFillRates. The minimum fill rates for each category specified in Ids.\\nThese are inclusive of the bound. A value must be specified for each\\nCategory. If the user doesn\'t want to filter by fill rate, they can set\\nthe minimum fill rate to 0, which will match all fill rate values.\\nValues should be in the range 0 to 1, inclusive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"number","format":"double"}}},{"name":"filter.datasets.project_ids","description":"ProjectIds. The filter to be applied to the projects associated with the returned\\nDatasets. Only Datasets within projects matching one of the project ids\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"sort.by","description":"By is the field to sort by.","in":"query","required":false,"schema":{"type":"string"}},{"name":"sort.order","description":"Order is the order to sort in. Defaults\\nto ascending.\\n\\n - ASCENDING: Sort in ascending order.\\n - DESCENDING: Sort in descending order.","in":"query","required":false,"schema":{"type":"string","enum":["ASCENDING","DESCENDING"],"default":"ASCENDING"}}],"tags":["Datasets"]}},"/api/v1/datasets/{private_id}":{"get":{"summary":"Get Dataset metadata","description":"Gets metadata for a specific Dataset the user owns or has access to.","operationId":"TyraelGetDataset","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"dataset":{"type":"object","properties":{"private_id":{"type":"string","description":"The private ID assigned to the Dataset.\\nThis is assigned by the user and unique to them.","title":"Private ID"},"owner":{"description":"The owner of the Dataset.","title":"Owner","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"public_name":{"type":"string","description":"The public name assigned to the Dataset by the Owner.","title":"Public Name"},"public_description":{"type":"string","description":"The description assigned to the Dataset by the Owner.","title":"Public Description"},"create_time":{"type":"string","format":"date-time","description":"The time when the Owner created the Dataset.","title":"Create time"},"last_queried_time":{"type":"string","format":"date-time","description":"The time when the Dataset was last queried.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Time Last Queried"},"expire_time":{"type":"string","format":"date-time","description":"The time when this Dataset expires.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Expire Time"},"state":{"description":"The current state of the Dataset.","title":"State","type":"object","properties":{"bunker_state":{"description":"The state that the Bunker for the Dataset is in.","title":"BunkerState","type":"string","enum":["CLAIMED","UPLOADING","UPLOADED","UPLOAD_FAILED","CONVERTING","CONVERTED","CONVERSION_FAILED","NORMALISING","NORMALISED","NORMALISATION_FAILED","ONLINE","UPGRADING","PROVISIONING"],"default":"CLAIMED"},"progress":{"type":"number","format":"double","description":"Indicates how far through the current state the Bunker is.\\nThis is valid for UPLOADING, CONVERTING, and NORMALISING states only.\\nValues start at 0.0 for 0% progress, through to 1.0 for 100% complete.","title":"Progress"}}},"latest_access":{"description":"Latest instance of a user accessing the Dataset (e.g. creating a new browser session).\\nIt may not be set if the Dataset has not yet been accessed.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"LatestAccess","type":"object","properties":{"user":{"description":"The User that accessed the Dataset.","title":"User","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"access_time":{"type":"string","format":"date-time","description":"The time at which the Dataset was accessed.","title":"Access Time"}}},"stats":{"description":"Contains statistical information about the Dataset. Output only.","title":"Stats","readOnly":true,"type":"object","properties":{"version":{"description":"Describes the version of the Dataset.","title":"Version","type":"object","properties":{"version":{"type":"string","description":"A version string to represent the installed software\\nversion of the Bunker.","title":"Version"},"last_normalised_time":{"type":"string","format":"date-time","description":"The timestamp of the last normalisation run.","title":"Last Normalised Time"},"global_schema_id":{"type":"string","format":"int64","description":"The ID of the used global schema version.","title":"Global Schema ID"},"global_schema_name":{"type":"string","description":"The version/name of the used global schema.","title":"Global Schema Name"},"global_schema_status":{"type":"string","description":"The status of the used global schema,\\ne.g. \\"beta-1\\", \\"release\\".","title":"Global Schema Status"},"dataset_version":{"type":"string","description":"The version for the internal dataset held by the Bunker that should be used\\nwhen querying the Bunker.","title":"Dataset Version"}}},"row_count":{"type":"string","format":"uint64","description":"The number of queryable rows in the Dataset.","title":"RowCount"},"redaction_threshold":{"type":"integer","format":"int64","description":"The minimum number of results required for a bin\\nto be included in the results returned when querying this Dataset.","title":"RedactionThreshold"},"keys":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The Keys\' display name.","title":"Label"},"null_fraction":{"type":"number","format":"double","description":"The fraction of the values in this Key that are `null`,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"NullFraction"},"num_distinct":{"type":"number","format":"double","description":"An estimated number of distinct values in the Key, if positive, or\\nthe number of distinct values divided by the number of rows, if negative.\\n\\nSign  | Negative     | Positive\\n----- | ------------ | --------\\nValue | Uniques/Rows | Uniques","title":"NumDistinct"}},"description":"A Dataset Key, for joining between Datasets.","title":"Key"},"description":"Describes all key columns.","title":"Keys"},"categories":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The text label of the Category, such as \\"Age\\" or \\"Gender\\".","title":"Label"},"representations":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The text label of the Representation, such as \\"Binary Gender\\".","title":"Label"},"data_type":{"description":"The data type of the values of this Representation.","title":"DataType","type":"string","enum":["STRINGS","BOOLEANS","INTEGERS","INTEGER_RANGES","STRING_SET","INTEGER_SET"],"default":"STRINGS"},"precision":{"type":"number","format":"double","description":"How accurate this Representation is to the source data. It is\\nin the range (0, 1], representating a percentage value between 0% and 100%.\\nThings that affect the Precision of a Representation include any data transformations\\nthat had to be performed to match the source data into this Representation.","title":"Precision"},"statistics":{"description":"Contains statistics for the values in this Representation.","title":"Statistics","type":"object","properties":{"average":{"type":"number","format":"double","description":"The average value of the column.\\nOnly populated if the type of the Representation is numeric.","title":"Average"},"standard_deviation":{"type":"number","format":"double","description":"The standard deviation of the column-\\nOnly populated if the type of the Representation is numeric.","title":"StandardDeviation"},"percentiles":{"type":"array","items":{"type":"number","format":"double"},"description":"Array of 101 elements representing percentiles from 0 to 100 with stepsize 1.\\nThe first element is the minimum value found and the last element is the maximum value found.\\nOnly populated if the type of the Representation is numeric.","title":"Percentiles"},"null_fraction":{"type":"number","format":"double","description":"The fraction of the values in this Representation that are `null`,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"NullFraction"},"num_distinct":{"type":"number","format":"double","description":"An estimated number of distinct values in the Representation, if positive, or\\nthe number of distinct values divided by the number of rows, if negative.\\n\\nSign  | Negative     | Positive\\n----- | ------------ | --------\\nValue | Uniques/Rows | Uniques","title":"NumDistinct"},"most_common":{"type":"array","items":{"type":"object","properties":{"value":{"type":"string","description":"The Value, as a string.","title":"Value"},"frequency":{"type":"number","format":"double","description":"The frequency with which this Value appears in the Representation,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"Frequency"}},"description":"An occurrence of a value, and with what frequency it appears in the Representation.","title":"Occurrence"},"description":"An array of the most common elements in the Representation, if there\\nare any that occur with greater frequency than others.","title":"MostCommon"}}},"possible_values":{"type":"array","items":{"type":"string"},"description":"Contains the list of values or ranges that this representation can contain. If the\\nPossibleValues contains an empty list then it represents that it can be any value defined by\\nthe DataType value.","title":"PossibleValues"}},"description":"A Representation of a Category, such as \\"Binary Gender\\".","title":"Representation"},"description":"An array of all Representations of this Category in this Dataset.","title":"Representations"},"version":{"type":"string","format":"int64","description":"The Category version number.","title":"Version"},"unit":{"type":"string","description":"The unit that this Category should be be displayed in.","title":"Unit"}},"description":"An InfoSum data Category, such as \\"Age\\" or \\"Gender\\".","title":"Category"},"description":"Describes all categories.","title":"Categories"},"identities":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The user-assigned name of the contents of the Output Data.","title":"Name"}},"description":"An Identity column in an Identity Dataset.","title":"Identity"},"description":"Describes all Identities.","title":"Identities"}}},"credits":{"description":"Contains the credit allocation and usage for this Dataset.","title":"Credits","type":"object","properties":{"allocation":{"type":"integer","format":"int64","description":"The number of credits that may be used per billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Allocation"},"current_allocation":{"type":"integer","format":"int64","description":"The maximum number of credits that may be used in\\nThis field is only returned if the requesting user is the owner of the Dataset.\\nthe current billing cycle.","title":"CurrentAllocation"},"used":{"type":"integer","format":"int64","description":"The number of credits used in the this billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"Used"},"shares":{"type":"array","items":{"type":"object","properties":{"user":{"description":"The User to whom credits have been allocated.\\nThis is the User who is the recipient of the Permission.","title":"User","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"allowance":{"type":"integer","format":"int64","description":"The number of credits allocated to this Share per billing cycle.","title":"Allowance"},"current_allowance":{"type":"integer","format":"int64","description":"The number of credits that may be used on this Share in\\nthe current billing cycle.","title":"CurrentAllowance"},"used":{"type":"integer","format":"int64","description":"The number of credits used by this User in this billing cycle.","title":"Used"},"uses_parent_allocation":{"type":"boolean","description":"Indicates whether this User was allocated a specific\\nnumber of credits, or if they consume credits directly from the Dataset.\\nIf true, Allowance and CurrentAllowance may be ignored.","title":"UsesParentAllocation"}},"description":"The credits allowance and usage on a specific Permission.","title":"Credit Share"},"description":"A breakdown of how many credits have been allocated and\\nused for each Permission. For non-owners, only the share\\nrelated to their Permission is shown.","title":"Shares"}}},"product":{"description":"The type of product this Dataset is configured as.\\nOutput only.","title":"Product","readOnly":true,"type":"string","enum":["INSIGHT","IDENTITY"],"default":"INSIGHT"}},"description":"A Dataset.","title":"Dataset"},"schema":{"description":"Contains information about the Datasets Schema, such as what Categories it contains.","title":"Schema","type":"object","properties":{"version":{"type":"string","description":"The version of this Dataset. This is based on the number\\nof revisions the user has made to their Dataset.","title":"Version"},"update_time":{"type":"string","format":"date-time","description":"The time when the Dataset was last updated.","title":"Update Time"},"categories":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The text label of the Category, such as \\"Age\\" or \\"Gender\\".","title":"Label"},"representations":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The text label of the Representation, such as \\"Binary Gender\\".","title":"Label"},"data_type":{"description":"The data type of the values of this Representation.","title":"DataType","type":"string","enum":["STRINGS","BOOLEANS","INTEGERS","INTEGER_RANGES","STRING_SET","INTEGER_SET"],"default":"STRINGS"},"precision":{"type":"number","format":"double","description":"How accurate this Representation is to the source data. It is\\nin the range (0, 1], representating a percentage value between 0% and 100%.\\nThings that affect the Precision of a Representation include any data transformations\\nthat had to be performed to match the source data into this Representation.","title":"Precision"},"statistics":{"description":"Contains statistics for the values in this Representation.","title":"Statistics","type":"object","properties":{"average":{"type":"number","format":"double","description":"The average value of the column.\\nOnly populated if the type of the Representation is numeric.","title":"Average"},"standard_deviation":{"type":"number","format":"double","description":"The standard deviation of the column-\\nOnly populated if the type of the Representation is numeric.","title":"StandardDeviation"},"percentiles":{"type":"array","items":{"type":"number","format":"double"},"description":"Array of 101 elements representing percentiles from 0 to 100 with stepsize 1.\\nThe first element is the minimum value found and the last element is the maximum value found.\\nOnly populated if the type of the Representation is numeric.","title":"Percentiles"},"null_fraction":{"type":"number","format":"double","description":"The fraction of the values in this Representation that are `null`,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"NullFraction"},"num_distinct":{"type":"number","format":"double","description":"An estimated number of distinct values in the Representation, if positive, or\\nthe number of distinct values divided by the number of rows, if negative.\\n\\nSign  | Negative     | Positive\\n----- | ------------ | --------\\nValue | Uniques/Rows | Uniques","title":"NumDistinct"},"most_common":{"type":"array","items":{"type":"object","properties":{"value":{"type":"string","description":"The Value, as a string.","title":"Value"},"frequency":{"type":"number","format":"double","description":"The frequency with which this Value appears in the Representation,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"Frequency"}},"description":"An occurrence of a value, and with what frequency it appears in the Representation.","title":"Occurrence"},"description":"An array of the most common elements in the Representation, if there\\nare any that occur with greater frequency than others.","title":"MostCommon"}}},"possible_values":{"type":"array","items":{"type":"string"},"description":"Contains the list of values or ranges that this representation can contain. If the\\nPossibleValues contains an empty list then it represents that it can be any value defined by\\nthe DataType value.","title":"PossibleValues"}},"description":"A Representation of a Category, such as \\"Binary Gender\\".","title":"Representation"},"description":"An array of all Representations of this Category in this Dataset.","title":"Representations"},"version":{"type":"string","format":"int64","description":"The Category version number.","title":"Version"},"unit":{"type":"string","description":"The unit that this Category should be be displayed in.","title":"Unit"}},"description":"An InfoSum data Category, such as \\"Age\\" or \\"Gender\\".","title":"Category"},"description":"The Categories that belong to this Dataset.","title":"Categories"},"num_rows":{"type":"string","format":"uint64","description":"The number of rows in the Dataset.","title":"NumRows"},"redaction_threshold":{"type":"integer","format":"int64","description":"The minimum number of results required for a bin to be included in the results\\nreturned from this Dataset.","title":"RedactionThreshold"},"keys":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"The Keys\' display name.","title":"Label"},"null_fraction":{"type":"number","format":"double","description":"The fraction of the values in this Key that are `null`,\\nin the range (0, 1], representating a percentage value between 0% and 100%.","title":"NullFraction"},"num_distinct":{"type":"number","format":"double","description":"An estimated number of distinct values in the Key, if positive, or\\nthe number of distinct values divided by the number of rows, if negative.\\n\\nSign  | Negative     | Positive\\n----- | ------------ | --------\\nValue | Uniques/Rows | Uniques","title":"NumDistinct"}},"description":"A Dataset Key, for joining between Datasets.","title":"Key"},"description":"The Keys in this Dataset.","title":"Keys"}}}},"description":"The Dataset and metadata for the Dataset.","title":"Dataset Response"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the requested Dataset could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"private_id","description":"Private Dataset ID\\n\\nThe Private ID of the Dataset to retrieve, as assigned by the user.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Datasets"]}},"/api/v1/demo_datasets":{"delete":{"summary":"Remove access to the Demo Datasets","description":"Remove access to the Demo Datasets.","operationId":"TyraelRemoveDemoDatasets","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","description":"Response from the RemoveDemoDatasets method.","title":"Remove Demo Datasets Response"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"tags":["Demo Datasets"]},"post":{"summary":"Add access to the Demo Datasets","description":"Add access to the Demo Datasets for querying.","operationId":"TyraelAddDemoDatasets","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"permissions":{"type":"array","items":{"type":"object","properties":{"owner":{"description":"The User that the Dataset belongs to.","title":"Owner","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"private_id":{"type":"string","description":"Private ID of the Dataset for the requesting User.","title":"Private ID"},"recipient":{"description":"The User that the Dataset is being offered to.","title":"Recipient","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"create_time":{"type":"string","format":"date-time","description":"Time when the owner offered Permission to the Recipient.","title":"Create Time"},"accept_time":{"type":"string","format":"date-time","description":"Time when the Permission was accepted by the Recipient.","title":"Accept Time"},"accepted":{"type":"boolean","description":"Indicates whether the Permission has been accpeted by the Recipient.","title":"Accepted"},"credits":{"type":"object","properties":{"user":{"description":"The User to whom credits have been allocated.\\nThis is the User who is the recipient of the Permission.","title":"User","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"allowance":{"type":"integer","format":"int64","description":"The number of credits allocated to this Share per billing cycle.","title":"Allowance"},"current_allowance":{"type":"integer","format":"int64","description":"The number of credits that may be used on this Share in\\nthe current billing cycle.","title":"CurrentAllowance"},"used":{"type":"integer","format":"int64","description":"The number of credits used by this User in this billing cycle.","title":"Used"},"uses_parent_allocation":{"type":"boolean","description":"Indicates whether this User was allocated a specific\\nnumber of credits, or if they consume credits directly from the Dataset.\\nIf true, Allowance and CurrentAllowance may be ignored.","title":"UsesParentAllocation"}},"description":"The credits allowance and usage on a specific Permission.","title":"Credit Share"},"dataset_public_name":{"type":"string","description":"Indicates the name of the Dataset the Permission references.","title":"DatasetPublicName"},"dataset_public_desc":{"type":"string","description":"Indicates the name of the Dataset the Permission references.","title":"DatasetPublicDesc"}},"description":"An explicit Permission to access a Dataset given by a user to another user.","title":"Permission"},"description":"Details of the permissions to the Demo Datasets.","title":"Permissions"}},"description":"Permission details of the Demo Datasets.","title":"Add Demo Datasets Response"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"One or more Demo Datasets could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","description":"Used to add Demo Datasets with the AddDemoDatasets method.","title":"Add Demo Datasets Request"}}},"required":true},"tags":["Demo Datasets"]}},"/api/v1/explain":{"post":{"summary":"ExplainQuery explains how a query will be executed.","description":"Provides information about the choices made by the platfrom before executing a query.","operationId":"TyraelExplainQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"query_plan":{"description":"QueryPlan is the representation of how the query will be executed and the decisions made by the platform as part\\nof the execution.","title":"QueryPlan","type":"object","properties":{"query":{"type":"string","description":"Query is the query to be explained","title":"Query"},"plan":{"description":"Plan is the structured description of the query plan","title":"Plan","type":"object","properties":{"private_id":{"type":"string","description":"PrivateId is the private ID of the Dataset on which the aggregation will take place.","title":"PrivateId"},"representation":{"description":"Representation is the representation of the Category used when performing the aggregation.","title":"Representation","type":"object","properties":{"category":{"type":"string","description":"Category is the name of the category","title":"Category"},"selected_representation":{"type":"string","description":"SelectedRepresentation is the name of the selected representation.","title":"SelectedRepresentation"},"inferred":{"type":"boolean","description":"Inferred indicate whether the representation was inferred by the platform or explicitly specified by the\\nuser in the query.","title":"Inferred"},"bins":{"type":"array","items":{"type":"string"},"description":"The bins specified in the query.","title":"Bins"},"filter":{"type":"string","description":"The Filter specified in the query.","title":"Filter"},"representations":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name is the name of the representation.","title":"Name"},"type":{"type":"string","description":"Type is the type of the representation.","title":"Type"},"score":{"type":"number","format":"float","description":"Score is the score associated with the representation.","title":"Score"},"precision":{"type":"number","format":"float","description":"Precision is the precision of the representation.","title":"Precision"},"bins":{"type":"array","items":{"type":"string"},"description":"The list of bins that is expected to be used with this Representation.","title":"Bins"},"filter":{"type":"string","description":"The Filter that would be applied for this representation.","title":"Filter"}},"description":"Representation Stats contains information about a representation.","title":"Representation Stats"},"description":"RepresentationStats is the list of all possible representations for the category.","title":"RepresentationStats"}}},"aggregation_joins":{"description":"Describes a tree of joins between datasets based on nested aggregations.","title":"AggregationJoins","type":"object","properties":{"combinator":{"description":"Combinator describes how any sub-joins are combined.","title":"Combinator","type":"object","properties":{"type":{"description":"Type describes the operation applied to the sub joins.","title":"Type","type":"string","enum":["AND","OR","NOT","TRANSLATE"],"default":"AND"},"joins":{"type":"array","items":{"type":"object","description":"JoinPlan describes a tree of joins between datasets.","title":"Join Plan"},"description":"Joins is a list of expected joins between two datasets.","title":"Joins"}}},"id":{"type":"integer","format":"int32","description":"ID is the unique ID of the join within the scope of a single response.","title":"ID"},"from_private_id":{"type":"string","description":"FromPrivateId is the private ID of the Dataset from which the join will originate.","title":"FromPrivateId"},"to_private_id":{"type":"string","description":"ToPrivateId is the private ID of the Dataset on which the join will terminate.","title":"ToPrivateId"},"representation":{"description":"The representation of the Category used when performing the filter or aggregation.","title":"Representation","type":"object","properties":{"category":{"type":"string","description":"Category is the name of the category","title":"Category"},"selected_representation":{"type":"string","description":"SelectedRepresentation is the name of the selected representation.","title":"SelectedRepresentation"},"inferred":{"type":"boolean","description":"Inferred indicate whether the representation was inferred by the platform or explicitly specified by the\\nuser in the query.","title":"Inferred"},"bins":{"type":"array","items":{"type":"string"},"description":"The bins specified in the query.","title":"Bins"},"filter":{"type":"string","description":"The Filter specified in the query.","title":"Filter"},"representations":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name is the name of the representation.","title":"Name"},"type":{"type":"string","description":"Type is the type of the representation.","title":"Type"},"score":{"type":"number","format":"float","description":"Score is the score associated with the representation.","title":"Score"},"precision":{"type":"number","format":"float","description":"Precision is the precision of the representation.","title":"Precision"},"bins":{"type":"array","items":{"type":"string"},"description":"The list of bins that is expected to be used with this Representation.","title":"Bins"},"filter":{"type":"string","description":"The Filter that would be applied for this representation.","title":"Filter"}},"description":"Representation Stats contains information about a representation.","title":"Representation Stats"},"description":"RepresentationStats is the list of all possible representations for the category.","title":"RepresentationStats"}}},"keys":{"description":"Key is a description of the keys that have participated in the join and any remaining keys that did not\\nparticipate in the join","title":"Key","type":"object","properties":{"max_overcounted":{"type":"integer","format":"int32","description":"MaxOvercounted is the total maximum number of additional keys (and as a result additional values) that can be\\nexpected due to errors in the Bloom Filter used when joining the two datasets using the specified keys.","title":"MaxOvercounted"},"used":{"type":"array","items":{"type":"string"},"description":"The list of all the key names that participated in the join.","title":"Used"},"keys":{"type":"array","items":{"type":"object","properties":{"key_name":{"type":"string","description":"KeyName is the name of the Key used for the join.","title":"KeyName"},"overlap":{"type":"string","format":"int64","description":"Overlap is the approximate overlap of keys between the from and to datasets.","title":"Overlap"},"duplicates":{"type":"string","format":"int64","description":"Duplicates is the approximate number of duplicate keys we expect when joining the from and to datasets\\non the specified key.","title":"Duplicates"},"from_dataset_size":{"type":"string","format":"int64","description":"FromDatasetSize is the approximate number of keys in the dataset from which the join will originate.","title":"FromDatasetSize"},"to_dataset_size":{"type":"string","format":"int64","description":"ToDatasetSize is the approximate number of keys in the dataset on which the join will terminate.","title":"ToDatasetSize"}},"description":"Key Join Stats contains information about a join for a given Key.","title":"Key Join Stats"},"description":"The list of keys that could participate in the join.","title":"Keys"},"inferred":{"type":"boolean","description":"It indicates whether the Key was inferred by the platform or explicitly specified by the\\nuser in the query.","title":"Inferred"}}}}},"filter_joins":{"type":"object","properties":{"combinator":{"description":"Combinator describes how any sub-joins are combined.","title":"Combinator","type":"object","properties":{"type":{"description":"Type describes the operation applied to the sub joins.","title":"Type","type":"string","enum":["AND","OR","NOT","TRANSLATE"],"default":"AND"},"joins":{"type":"array","items":{"type":"object","description":"JoinPlan describes a tree of joins between datasets.","title":"Join Plan"},"description":"Joins is a list of expected joins between two datasets.","title":"Joins"}}},"id":{"type":"integer","format":"int32","description":"ID is the unique ID of the join within the scope of a single response.","title":"ID"},"from_private_id":{"type":"string","description":"FromPrivateId is the private ID of the Dataset from which the join will originate.","title":"FromPrivateId"},"to_private_id":{"type":"string","description":"ToPrivateId is the private ID of the Dataset on which the join will terminate.","title":"ToPrivateId"},"representation":{"description":"The representation of the Category used when performing the filter or aggregation.","title":"Representation","type":"object","properties":{"category":{"type":"string","description":"Category is the name of the category","title":"Category"},"selected_representation":{"type":"string","description":"SelectedRepresentation is the name of the selected representation.","title":"SelectedRepresentation"},"inferred":{"type":"boolean","description":"Inferred indicate whether the representation was inferred by the platform or explicitly specified by the\\nuser in the query.","title":"Inferred"},"bins":{"type":"array","items":{"type":"string"},"description":"The bins specified in the query.","title":"Bins"},"filter":{"type":"string","description":"The Filter specified in the query.","title":"Filter"},"representations":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name is the name of the representation.","title":"Name"},"type":{"type":"string","description":"Type is the type of the representation.","title":"Type"},"score":{"type":"number","format":"float","description":"Score is the score associated with the representation.","title":"Score"},"precision":{"type":"number","format":"float","description":"Precision is the precision of the representation.","title":"Precision"},"bins":{"type":"array","items":{"type":"string"},"description":"The list of bins that is expected to be used with this Representation.","title":"Bins"},"filter":{"type":"string","description":"The Filter that would be applied for this representation.","title":"Filter"}},"description":"Representation Stats contains information about a representation.","title":"Representation Stats"},"description":"RepresentationStats is the list of all possible representations for the category.","title":"RepresentationStats"}}},"keys":{"description":"Key is a description of the keys that have participated in the join and any remaining keys that did not\\nparticipate in the join","title":"Key","type":"object","properties":{"max_overcounted":{"type":"integer","format":"int32","description":"MaxOvercounted is the total maximum number of additional keys (and as a result additional values) that can be\\nexpected due to errors in the Bloom Filter used when joining the two datasets using the specified keys.","title":"MaxOvercounted"},"used":{"type":"array","items":{"type":"string"},"description":"The list of all the key names that participated in the join.","title":"Used"},"keys":{"type":"array","items":{"type":"object","properties":{"key_name":{"type":"string","description":"KeyName is the name of the Key used for the join.","title":"KeyName"},"overlap":{"type":"string","format":"int64","description":"Overlap is the approximate overlap of keys between the from and to datasets.","title":"Overlap"},"duplicates":{"type":"string","format":"int64","description":"Duplicates is the approximate number of duplicate keys we expect when joining the from and to datasets\\non the specified key.","title":"Duplicates"},"from_dataset_size":{"type":"string","format":"int64","description":"FromDatasetSize is the approximate number of keys in the dataset from which the join will originate.","title":"FromDatasetSize"},"to_dataset_size":{"type":"string","format":"int64","description":"ToDatasetSize is the approximate number of keys in the dataset on which the join will terminate.","title":"ToDatasetSize"}},"description":"Key Join Stats contains information about a join for a given Key.","title":"Key Join Stats"},"description":"The list of keys that could participate in the join.","title":"Keys"},"inferred":{"type":"boolean","description":"It indicates whether the Key was inferred by the platform or explicitly specified by the\\nuser in the query.","title":"Inferred"}}}},"description":"JoinPlan describes a tree of joins between datasets.","title":"Join Plan"}}},"results":{"description":"Results is the expected format of the results from the query and decisions made by the platform when generating\\nthe results.","title":"Results","type":"object","properties":{"max_overcounted_values":{"type":"integer","format":"int32","description":"MaxOvercountedValues is the maximum number of additional keys (and as a result additional values) that can be\\nexpected due to errors in the Bloom Filter used when joining the two datasets.","title":"MaxOvercountedValues"},"dimensions":{"type":"array","items":{"type":"object","properties":{"private_id":{"type":"string","description":"Identifies a Dataset.","title":"Private Dataset ID"},"category":{"type":"string","description":"Category is the category this Dimension describes.","title":"Category"},"bins":{"type":"array","items":{"type":"string"},"description":"Bins is the list of expected bins which this Dimension will contain.","title":"Bins"},"inferred_bins":{"type":"boolean","description":"It indicates whether the bins in the results we inferred by the platform or explicitly specified by the\\nuser in the query.","title":"InferredBins"}},"description":"Dimension Plan describes a Dimension of the expected result.","title":"Dimension Plan"},"description":"Dimensions describes the expected Dimensions in the results","title":"Dimensions"},"filter":{"type":"string","description":"The filter that has been applied to the results.","title":"Filter"},"rounding_threshold":{"description":"RoundingThreshold describes the rounding threshold that will be used for the values in the bins.","title":"RoundingThreshold","type":"object","properties":{"threshold":{"type":"integer","format":"int32","description":"Threshold is the rounding threshold that will be applied to all bins in the results.","title":"Threshold"},"datasets":{"type":"array","items":{"type":"object","properties":{"private_id":{"type":"string","description":"Identifies a Dataset.","title":"Private Dataset ID"},"threshold":{"type":"integer","format":"int32","description":"Threshold is the threshold for the Dataset.","title":"Threshold"}},"description":"DatasetThreshold represents a threshold associated with a dataset.","title":"Dataset Threshold"},"description":"Datasets is a list of rounding thresholds for each dataset involved in the query.","title":"Datasets"}}},"redaction_threshold":{"description":"RedactionThreshold describes the redaction threshold that will be used for the values in the bins.","title":"RedactionThreshold","type":"object","properties":{"threshold":{"type":"integer","format":"int32","description":"Threshold is the redaction threshold that will be applied to all bins in the results.","title":"Threshold"},"datasets":{"type":"array","items":{"type":"object","properties":{"private_id":{"type":"string","description":"Identifies a Dataset.","title":"Private Dataset ID"},"threshold":{"type":"integer","format":"int32","description":"Threshold is the threshold for the Dataset.","title":"Threshold"}},"description":"DatasetThreshold represents a threshold associated with a dataset.","title":"Dataset Threshold"},"description":"Datasets is a list of redaction thresholds for each dataset involved in the query.","title":"Datasets"}}}}}}},"hop_table":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","format":"int32","description":"The ID of the Hop.","title":"Id"},"join_id":{"type":"integer","format":"int32","description":"The ID of the Join that this hop is part of.","title":"JoinID"},"from_private_id":{"type":"string","description":"The Private ID of the dataset on which the join starts.","title":"From Private Dataset ID"},"to_private_id":{"type":"string","description":"The Private ID of the dataset on which the join ends.","title":"To Private Dataset ID"},"key_name":{"type":"string","description":"The name of the Key used for the join.","title":"Key Name"},"overlap":{"type":"string","format":"int64","description":"The approximate overlap of keys between the from and to datasets.","title":"Overlap"},"duplicates":{"type":"string","format":"int64","description":"The approximate number of duplicate keys we expect when joining the from and to datasets\\non the specified key.","title":"Duplicates"},"from_dataset_size":{"type":"string","format":"int64","description":"The size of the from dataset.","title":"FromDatasetSize"},"to_dataset_size":{"type":"string","format":"int64","description":"The size of the to dataset.","title":"ToDatasetSize"},"max_overcounted_values":{"type":"integer","format":"int32","description":"The maximum number of additional keys (and as a result additional values) that can be\\nexpected due to errors in the Bloom Filter used when joining the two datasets.","title":"MaxOvercountedValues"},"representation":{"description":"Representation is the representation of the Category used when performing the filter or aggregation.","title":"Representation","type":"object","properties":{"category":{"type":"string","description":"Category is the name of the category","title":"Category"},"selected_representation":{"type":"string","description":"SelectedRepresentation is the name of the selected representation.","title":"SelectedRepresentation"},"inferred":{"type":"boolean","description":"Inferred indicate whether the representation was inferred by the platform or explicitly specified by the\\nuser in the query.","title":"Inferred"},"bins":{"type":"array","items":{"type":"string"},"description":"The bins specified in the query.","title":"Bins"},"filter":{"type":"string","description":"The Filter specified in the query.","title":"Filter"},"representations":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name is the name of the representation.","title":"Name"},"type":{"type":"string","description":"Type is the type of the representation.","title":"Type"},"score":{"type":"number","format":"float","description":"Score is the score associated with the representation.","title":"Score"},"precision":{"type":"number","format":"float","description":"Precision is the precision of the representation.","title":"Precision"},"bins":{"type":"array","items":{"type":"string"},"description":"The list of bins that is expected to be used with this Representation.","title":"Bins"},"filter":{"type":"string","description":"The Filter that would be applied for this representation.","title":"Filter"}},"description":"Representation Stats contains information about a representation.","title":"Representation Stats"},"description":"RepresentationStats is the list of all possible representations for the category.","title":"RepresentationStats"}}}},"description":"Hop represents a join that will take place between two datasets as part of executing a query.","title":"Hop"},"description":"HopTable is the list of all joins that have taken place between datasets.","title":"HopTable"}},"description":"An explanation of the choices made by the platform before executing the query.","title":"Explain Query Response"}}}},"400":{"description":"Returned when the Query could not be parsed.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"query":{"type":"string","description":"The Query whose execution will be explained. This takes the\\nformat of an InfoSum Query Language Query. See\\nthe documentation of the InfoSum Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"type":"object","properties":{"source_dataset":{"description":"Is the dataset name and keys that the path starts from.","title":"Source Dataset","type":"object","properties":{"private_id":{"type":"string","description":"Is the private ID of the Dataset.","title":"Private ID"},"keys":{"type":"array","items":{"type":"string"},"description":"Is an ordered list of keys that can be used when joining this dataset to another dataset.\\nWhen this dataset is joined to another dataset each row in the datasets is joined using the key order defined here.\\nIf a key is missing from a specific row, the next key in the order is used.","title":"Keys"}}},"destination_private_id":{"type":"string","description":"Is the private ID of the Dataset that the path ends at.","title":"Destination Private ID"}},"description":"Contains instructions on how to join two datasets, overriding the automatic choices made by the core engine.","title":"Path Override"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"}},"description":"Used to explain the choices made by the platform before executing a query.","title":"Explain Query Request"}}},"required":true},"tags":["Queries"]}},"/api/v1/identity_queries":{"post":{"summary":"Create an Identity Query","description":"Queue an Identity Query for execution. Returns immediately with an ID of the Identity Query created. Only available for use with Identity Datasets.","operationId":"TyraelCreateIdentityQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"identity_query_id":{"type":"string","description":"The ID of the Identity Query.","title":"Identity Query ID"},"query_completed":{"type":"boolean","description":"Whether the Query has finished or not.","title":"Query Completed"},"query_error":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors).","title":"Query Error"},"query_response":{"description":"Contains the response if the Query succeeded.","type":"object","properties":{"identities":{"type":"array","items":{"type":"string"},"description":"The identity types that were requested.","title":"Identities"},"total_rows":{"type":"integer","format":"int64","description":"Total Rows\\nThe total number of rows in the result."},"quality_measures":{"description":"Contain a number of statistics that provide an indication of the quality of the query.","title":"Quality Measures","type":"object","properties":{"redaction_threshold_outlier":{"type":"number","format":"float","description":"Indicates if one or more datasets may be obscuring the resolution of the results by\\nbeing significantly different from the others.","title":"Redaction Threshold Outlier"},"model_accuracy":{"type":"number","format":"float","description":"This is an indication of how accurately the engine represented the datasets involved when executing the query.\\nSmall errors are introduced in the query results due to internal statistical representations of the data during query execution.","title":"Model Accuracy"}}}},"title":"Indentity Response"},"push_completed":{"type":"boolean","description":"Indicates whether or not the Push is still in progress.","title":"Push Completed"},"push_error":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}},"description":"Status of a started Identity Query.","title":"Indentity Query Status"}}}},"400":{"description":"Returned when the IdentityQuery could not be parsed.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"query":{"type":"string","description":"The Query that should be queued. This takes the\\nformat of an InfoSum Identity Query. See\\nthe documentation of the InfoSum Identity Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"type":"object","properties":{"source_dataset":{"description":"Is the dataset name and keys that the path starts from.","title":"Source Dataset","type":"object","properties":{"private_id":{"type":"string","description":"Is the private ID of the Dataset.","title":"Private ID"},"keys":{"type":"array","items":{"type":"string"},"description":"Is an ordered list of keys that can be used when joining this dataset to another dataset.\\nWhen this dataset is joined to another dataset each row in the datasets is joined using the key order defined here.\\nIf a key is missing from a specific row, the next key in the order is used.","title":"Keys"}}},"destination_private_id":{"type":"string","description":"Is the private ID of the Dataset that the path ends at.","title":"Destination Private ID"}},"description":"Contains instructions on how to join two datasets, overriding the automatic choices made by the core engine.","title":"Path Override"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"},"push_connector_config":{"description":"The configuration for the Push Connector that the results should be sent to.","title":"Push Connector Config","type":"object","properties":{"id":{"type":"string","description":"The ID of the Push Connector.","title":"Id"},"config":{"type":"object","additionalProperties":{"type":"string"},"description":"A map of Configuration Form field IDs to their values.","title":"Config"}}},"campaign_id":{"type":"string","description":"A name that a user can associate with an identity query.","title":"CampaignId"}},"description":"Used to create an Identity Query with the CreateIdentityQuery method.","title":"Create Identity Query Request"}}},"required":true},"tags":["Identity Queries"],"deprecated":true}},"/api/v1/identity_queries/push_connectors":{"post":{"summary":"Get a list of Push Connectors permitted for an Identity Query","description":"Returns a list of all the Push Connectors that can be used with this Identity Query.","operationId":"TyraelGetPermittedPushConnectors","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"push_connectors":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the push connector.","title":"Id"},"name":{"type":"string","description":"The display name of the push connector.","title":"Name"}},"description":"The Name and ID for a Push Connector.","title":"Push Connector"},"description":"A list of the permitted Push Connectors.","title":"PushConnectors"}},"description":"The list of permitted Push Connectors.","title":"Get Permitted Push Connectors Response"}}}},"400":{"description":"Returned when the Identity Query could not be parsed.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"private_id":{"type":"string","description":"The Private ID of the Dataset to retrieve, as assigned by the user.","title":"Private Dataset ID"}},"description":"The dataset to return a list of permitted Push Connectors for.","title":"Get Permitted Push Connectors Request"}}},"required":true},"tags":["Identity Queries"],"deprecated":true}},"/api/v1/identity_queries/validate":{"post":{"summary":"Validates an Identity Query","description":"Performs validation of an Identity Query without actually executing it. Good for testing that your queries are correctly formatted.","operationId":"TyraelValidateIdentityQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","description":"True if the Identity Query was successully validated.","title":"Success"}},"description":"Whether the Identity Query was successfully validated.","title":"Validate Identity Query Response"}}}},"400":{"description":"Returned when the Identity Query could not be parsed.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"query":{"type":"string","description":"The Query that should be queued. This takes the\\nformat of an InfoSum Identity Query. See\\nthe documentation of the InfoSum Identity Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"type":"object","properties":{"source_dataset":{"description":"Is the dataset name and keys that the path starts from.","title":"Source Dataset","type":"object","properties":{"private_id":{"type":"string","description":"Is the private ID of the Dataset.","title":"Private ID"},"keys":{"type":"array","items":{"type":"string"},"description":"Is an ordered list of keys that can be used when joining this dataset to another dataset.\\nWhen this dataset is joined to another dataset each row in the datasets is joined using the key order defined here.\\nIf a key is missing from a specific row, the next key in the order is used.","title":"Keys"}}},"destination_private_id":{"type":"string","description":"Is the private ID of the Dataset that the path ends at.","title":"Destination Private ID"}},"description":"Contains instructions on how to join two datasets, overriding the automatic choices made by the core engine.","title":"Path Override"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"},"push_connector_config":{"description":"The configuration for the Push Connector that the results should be sent to.","title":"Push Connector Config","type":"object","properties":{"id":{"type":"string","description":"The ID of the Push Connector.","title":"Id"},"config":{"type":"object","additionalProperties":{"type":"string"},"description":"A map of Configuration Form field IDs to their values.","title":"Config"}}}},"description":"Used to validate an Identity Query before executing it.","title":"Validate Identity Request"}}},"required":true},"tags":["Identity Queries"],"deprecated":true}},"/api/v1/identity_queries/{identity_query_id}":{"get":{"summary":"Get an Identity Query","description":"Get the current status of the Identity Query.","operationId":"TyraelGetIdentityQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"identity_query_id":{"type":"string","description":"The ID of the Identity Query.","title":"Identity Query ID"},"query_completed":{"type":"boolean","description":"Whether the Query has finished or not.","title":"Query Completed"},"query_error":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors).","title":"Query Error"},"query_response":{"description":"Contains the response if the Query succeeded.","type":"object","properties":{"identities":{"type":"array","items":{"type":"string"},"description":"The identity types that were requested.","title":"Identities"},"total_rows":{"type":"integer","format":"int64","description":"Total Rows\\nThe total number of rows in the result."},"quality_measures":{"description":"Contain a number of statistics that provide an indication of the quality of the query.","title":"Quality Measures","type":"object","properties":{"redaction_threshold_outlier":{"type":"number","format":"float","description":"Indicates if one or more datasets may be obscuring the resolution of the results by\\nbeing significantly different from the others.","title":"Redaction Threshold Outlier"},"model_accuracy":{"type":"number","format":"float","description":"This is an indication of how accurately the engine represented the datasets involved when executing the query.\\nSmall errors are introduced in the query results due to internal statistical representations of the data during query execution.","title":"Model Accuracy"}}}},"title":"Indentity Response"},"push_completed":{"type":"boolean","description":"Indicates whether or not the Push is still in progress.","title":"Push Completed"},"push_error":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}},"description":"Status of a started Identity Query.","title":"Indentity Query Status"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the requested Identity Query could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"identity_query_id","description":"Identity Query ID\\n\\nThe ID of the Identity Query, as returned from the CreateIdentityQuery method.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Identity Queries"],"deprecated":true}},"/api/v1/permissions":{"get":{"summary":"List all Permissions associated with the User.","description":"List all Permissions the user has offered or been offered.","operationId":"TyraelListPermissions","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"permissions":{"type":"array","items":{"type":"object","properties":{"owner":{"description":"The User that the Dataset belongs to.","title":"Owner","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"private_id":{"type":"string","description":"Private ID of the Dataset for the requesting User.","title":"Private ID"},"recipient":{"description":"The User that the Dataset is being offered to.","title":"Recipient","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"create_time":{"type":"string","format":"date-time","description":"Time when the owner offered Permission to the Recipient.","title":"Create Time"},"accept_time":{"type":"string","format":"date-time","description":"Time when the Permission was accepted by the Recipient.","title":"Accept Time"},"accepted":{"type":"boolean","description":"Indicates whether the Permission has been accpeted by the Recipient.","title":"Accepted"},"credits":{"type":"object","properties":{"user":{"description":"The User to whom credits have been allocated.\\nThis is the User who is the recipient of the Permission.","title":"User","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"allowance":{"type":"integer","format":"int64","description":"The number of credits allocated to this Share per billing cycle.","title":"Allowance"},"current_allowance":{"type":"integer","format":"int64","description":"The number of credits that may be used on this Share in\\nthe current billing cycle.","title":"CurrentAllowance"},"used":{"type":"integer","format":"int64","description":"The number of credits used by this User in this billing cycle.","title":"Used"},"uses_parent_allocation":{"type":"boolean","description":"Indicates whether this User was allocated a specific\\nnumber of credits, or if they consume credits directly from the Dataset.\\nIf true, Allowance and CurrentAllowance may be ignored.","title":"UsesParentAllocation"}},"description":"The credits allowance and usage on a specific Permission.","title":"Credit Share"},"dataset_public_name":{"type":"string","description":"Indicates the name of the Dataset the Permission references.","title":"DatasetPublicName"},"dataset_public_desc":{"type":"string","description":"Indicates the name of the Dataset the Permission references.","title":"DatasetPublicDesc"}},"description":"An explicit Permission to access a Dataset given by a user to another user.","title":"Permission"},"description":"Contains the requested Permissions.","title":"Permissions"}},"description":"The response from the ListPermissions method.","title":"List Permissions Response"}}}},"400":{"description":"Returned when an invalid request filter is used.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"filter.direction","description":"Direction. Specifies whether to return all Permissions, or only those that\\nare incoming or outgoing.\\n\\n - ANY_DIRECTION: Shows all Permissions.\\n - INCOMING: Only shows incoming Permissions.\\n - OUTGOING: Only shows outgoing Permissions.","in":"query","required":false,"schema":{"type":"string","enum":["ANY_DIRECTION","INCOMING","OUTGOING"],"default":"ANY_DIRECTION"}},{"name":"filter.accepted","description":"Accepted. Specifies whether to return all Permissions, or only those\\nthat have or have not been accepted by the recipient.\\n\\n - ANY_ACCEPTED: Shows all Permissions.\\n - INACTIVE: Only shows inactive Permissions.\\n - ACTIVE: Only shows active Permissions.","in":"query","required":false,"schema":{"type":"string","enum":["ANY_ACCEPTED","INACTIVE","ACTIVE"],"default":"ANY_ACCEPTED"}},{"name":"filter.owned_datasets.private_ids","description":"PrivateIds. The filter to be applied to the private IDs of the returned\\nDatasets. Only Datasets with private IDs containing one of the strings\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.owned_datasets.public_names","description":"PublicNames. The filter to be applied to the public names of the\\nreturned Datasets. Only Datasets with public names containing one of the\\nstring specified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.owned_datasets.public_description","description":"PublicDescription. The filter to be applied to the public descriptions\\nof the returned Datasets. Only Datasets with public descriptions\\ncontaining the string specified in this filter will be returned. Case\\ninsensitive.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.owned_datasets.create_time_filter.start_time","description":"Start. Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.owned_datasets.create_time_filter.end_time","description":"End. Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.owned_datasets.owner_ids","description":"Owner User IDs. Filters Datasets on the specified owner user IDs.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.owned_datasets.categories.ids","description":"Ids. The IDs of the Categories that must be present in the Dataset.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string","format":"int64"}}},{"name":"filter.owned_datasets.categories.min_fill_rates","description":"MinFillRates. The minimum fill rates for each category specified in Ids.\\nThese are inclusive of the bound. A value must be specified for each\\nCategory. If the user doesn\'t want to filter by fill rate, they can set\\nthe minimum fill rate to 0, which will match all fill rate values.\\nValues should be in the range 0 to 1, inclusive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"number","format":"double"}}},{"name":"filter.owned_datasets.project_ids","description":"ProjectIds. The filter to be applied to the projects associated with the returned\\nDatasets. Only Datasets within projects matching one of the project ids\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.other_datasets.private_ids","description":"PrivateIds. The filter to be applied to the private IDs of the returned\\nDatasets. Only Datasets with private IDs containing one of the strings\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.other_datasets.public_names","description":"PublicNames. The filter to be applied to the public names of the\\nreturned Datasets. Only Datasets with public names containing one of the\\nstring specified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.other_datasets.public_description","description":"PublicDescription. The filter to be applied to the public descriptions\\nof the returned Datasets. Only Datasets with public descriptions\\ncontaining the string specified in this filter will be returned. Case\\ninsensitive.","in":"query","required":false,"schema":{"type":"string"}},{"name":"filter.other_datasets.create_time_filter.start_time","description":"Start. Defines the earliest time the filter is applied from. The filter\\nmatches all dates after this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.other_datasets.create_time_filter.end_time","description":"End. Defines the time the filter is applied until. The filter matches all\\ndates before this point in time, inclusive.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"filter.other_datasets.owner_ids","description":"Owner User IDs. Filters Datasets on the specified owner user IDs.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"filter.other_datasets.categories.ids","description":"Ids. The IDs of the Categories that must be present in the Dataset.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string","format":"int64"}}},{"name":"filter.other_datasets.categories.min_fill_rates","description":"MinFillRates. The minimum fill rates for each category specified in Ids.\\nThese are inclusive of the bound. A value must be specified for each\\nCategory. If the user doesn\'t want to filter by fill rate, they can set\\nthe minimum fill rate to 0, which will match all fill rate values.\\nValues should be in the range 0 to 1, inclusive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"number","format":"double"}}},{"name":"filter.other_datasets.project_ids","description":"ProjectIds. The filter to be applied to the projects associated with the returned\\nDatasets. Only Datasets within projects matching one of the project ids\\nspecified in this filter will be returned. Case insensitive.","in":"query","required":false,"explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"sort.by","description":"By is the field to sort by.","in":"query","required":false,"schema":{"type":"string"}},{"name":"sort.order","description":"Order is the order to sort in. Defaults\\nto ascending.\\n\\n - ASCENDING: Sort in ascending order.\\n - DESCENDING: Sort in descending order.","in":"query","required":false,"schema":{"type":"string","enum":["ASCENDING","DESCENDING"],"default":"ASCENDING"}}],"tags":["Permissions"]}},"/api/v1/push_connectors":{"get":{"summary":"List all Push Connectors","description":"List all Push Connectors that the recipient can use to push the results from an Identity Query.","operationId":"TyraelListPushConnectors","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"push_connectors":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the push connector.","title":"Id"},"name":{"type":"string","description":"The display name of the push connector.","title":"Name"}},"description":"The Name and ID for a Push Connector.","title":"Push Connector"},"description":"A list of Push Connector IDs and their associated names.","title":"PushConnectors"}},"description":"The list of Push Connectors that the recipient can use.","title":"List Push Connectors Response"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"recipient_id","description":"RecipientId. The ListPushConnectors method will return all PushConnectors that can be\\nused by the user with this ID.","in":"query","required":false,"schema":{"type":"string"}}],"tags":["Push Connectors"]}},"/api/v1/push_connectors/{base_id}":{"post":{"summary":"Create a Push Connector","description":"Create a new Push Connector, based on an existing type of Push Connector, that can be used to push the results from an Identity Query.","operationId":"TyraelCreatePushConnector","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"push_connector":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the push connector.","title":"Id"},"name":{"type":"string","description":"The display name of the push connector.","title":"Name"}},"description":"The Name and ID for a Push Connector.","title":"Push Connector"}},"description":"The ID and name of the new Push Connector.","title":"Create Push Connector Response"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"base_id","description":"BaseId\\n\\nThe ID of the base Push Connector that the new Push Connector is based on.","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"A descriptive name for the new Push Connector.","title":"Name"},"recipient_ids":{"type":"array","items":{"type":"string"},"description":"A list of the user IDs of users who can use the new Push Connector. Only\\nusers in this list will be allowed to use the new template. If left empty,\\nany user will be allowed to use the new template if the owner specifies it\\nin a permission shared with them.","title":"RecipientIds"},"values":{"type":"array","items":{"type":"object","properties":{"field_id":{"type":"string","description":"Idenitifies which field from the base Push Connector is being referred\\nto with this Value.","title":"FieldId"},"value":{"type":"string","description":"The default value for this field in the new Push Connector.","title":"Value"},"user_editable":{"type":"boolean","description":"If true, Value can be considered a default value, and anyone using the\\nPush Connector will be able to change the value for that field.\\nIf false, users will not be able to change or see this value, and\\nwhatever Value is set to will be used when pushing Identity Results.","title":"UserEditable"}},"description":"Value defines the value of a field in a Push Connector."},"description":"Values is a list of modified fields for the new Push Connector. Any fields\\npresent in the base Push Connector that aren\'t in this list will be left\\nunchanged in the new Push Connector.","title":"Values"}},"description":"Used to create a new Push Connector with the CreatePushConnector method.","title":"Create Push Connectors Request"}}},"required":true},"tags":["Push Connectors"]}},"/api/v1/push_connectors/{push_connector_id}":{"get":{"summary":"Get a Form for a Push Connector","description":"Returns a Form which describes the values that need to be specified in order to configure a Push Connector.","operationId":"TyraelGetPushConnectorForm","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"form":{"description":"Contains the Push Connector fields that need to be populated.","title":"Form","type":"object","properties":{"panels":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","description":"A human readable label for the panel.","title":"Label"},"fields":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for the field.","title":"Id"},"label":{"type":"string","description":"A human readable label for the field.","title":"Label"},"options":{"type":"array","items":{"type":"string"},"description":"A suggestion for possible values for this field. Not all fields will\\nspecify Options.","title":"Options"}},"description":"Fields specify the values that must be specified to configurea Push Connector.","title":"Form Field"},"description":"A list of fields for the panel.","title":"Fields"}},"description":"Panels make up the Form for a Push Connector.","title":"Form Panel"},"description":"A list of panels. Panels contain fields which should be set to configure\\nthe Push Connector.","title":"Panels"}}}},"description":"The Form for a Push Connector.","title":"Get Push Connector Form Response"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the Push Connector could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"push_connector_id","description":"PushConnectorId\\n\\nThe ID of the Push Connector.","in":"path","required":true,"schema":{"type":"string"}},{"name":"user_email_domain","description":"UserEmailDomain is the domain part only of the requesting user\'s email address.","in":"query","required":false,"schema":{"type":"string"}}],"tags":["Push Connectors"]}},"/api/v1/queries":{"post":{"summary":"Create a Query","description":"Queue a Query for execution. Returns immediately with an ID of the Query created.","operationId":"TyraelCreateQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"query_id":{"type":"string","description":"The ID of the Query.","title":"Query ID"},"done":{"type":"boolean","description":"Whether the Query has finished or not.","title":"Done"}},"description":"A started Query.","title":"Query"}}}},"400":{"description":"Returned when the Query could not be parsed.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"query":{"type":"string","description":"The Query that should be queued. This takes the\\nformat of an InfoSum Query Language Query. See\\nthe documentation of the InfoSum Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"type":"object","properties":{"source_dataset":{"description":"Is the dataset name and keys that the path starts from.","title":"Source Dataset","type":"object","properties":{"private_id":{"type":"string","description":"Is the private ID of the Dataset.","title":"Private ID"},"keys":{"type":"array","items":{"type":"string"},"description":"Is an ordered list of keys that can be used when joining this dataset to another dataset.\\nWhen this dataset is joined to another dataset each row in the datasets is joined using the key order defined here.\\nIf a key is missing from a specific row, the next key in the order is used.","title":"Keys"}}},"destination_private_id":{"type":"string","description":"Is the private ID of the Dataset that the path ends at.","title":"Destination Private ID"}},"description":"Contains instructions on how to join two datasets, overriding the automatic choices made by the core engine.","title":"Path Override"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"},"sample":{"type":"boolean","description":"A flag that can be used to execute the query against a smaller sample\\nof the data. Can be used to reduce the execution time for a less accurate\\nresult.","title":"Sample"}},"description":"Used to create a Query with the CreateQuery method.","title":"Create Query Request"}}},"required":true},"tags":["Queries"]}},"/api/v1/queries/{query_id}":{"get":{"summary":"Get a Query","description":"Get the current status of the Query.","operationId":"TyraelGetQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"query_id":{"type":"string","description":"The ID of the Query.","title":"Query ID"},"done":{"type":"boolean","description":"Whether the Query has finished or not.","title":"Done"}},"description":"A started Query.","title":"Query"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the requested Query could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"query_id","description":"Query ID\\n\\nThe ID of the Query, as returned from the CreateQuery method.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Queries"]}},"/api/v1/queries/{query_id}/result":{"get":{"summary":"Get a Result","description":"Get the Result of a Query, when it is available.","operationId":"TyraelGetQueryResult","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"dimensions":{"type":"array","items":{"type":"object","properties":{"value":{"type":"string","description":"The value associated with this Dimension.\\nThis can take several different forms, including:\\n\\n1. String values, e.g. `\\"Engineer\\"`.\\n1. Integer values, e.g. `\\"144\\"`.\\n1. Boolean values, e.g. `\\"true\\"`.\\n1. Integer Ranges, e.g. `\\"[5, 10)\\"`.\\n    This is a value which contains a lower and an upper value in a single string,\\n    of the format `\\"[x, y)\\"`, where `x` is the lower value, and `y` is the upper value.\\n    `[` means the value is inclusive and `)` means the value is exclusive. For example:\\n    `\\"[5, 10)\\"` means an integer range including the values `5`, `6`, `7`, `8` and `9`.\\n    Note that `10` is _not_ included.","title":"Value"},"category":{"type":"string","description":"The name of the Category that this Dimension describes.","title":"Category"},"count":{"type":"integer","format":"int64","description":"The number of results in this Dimension.","title":"Count"},"continuous":{"type":"boolean","description":"Indicates whether the values represent continuous or discrete data. Values of the form Integer Ranges\\nwill have this value set to true. Values of the form String values will have this value set to false.","title":"Continuous"},"private_id":{"type":"string","description":"The private ID of the Dataset this Category comes from.","title":"Dataset Private ID"},"dimensions":{"type":"array","description":"Child dimensions of this Dimension.","title":"Child dimensions","items":{}}},"description":"A hierarchy of dimensional data broken down by labels. The result of an InfoSum Insight query or a child of another dimension.","title":"Dimension"},"description":"A hierarchical result of an InfoSum Query Language SELECT statement.","title":"Result Dimensions"},"audience":{"type":"integer","format":"int64","description":"The total number of audience members contained in\\nthis result set.","title":"Audience"},"quality_measures":{"description":"A number of statistics that provide an indication of the quality of the query.","title":"Quality Measures","type":"object","properties":{"redaction_threshold_outlier":{"type":"number","format":"float","description":"Indicates if one or more datasets may be obscuring the resolution of the results by\\nbeing significantly different from the others.","title":"Redaction Threshold Outlier"},"rounding_threshold_outlier":{"type":"number","format":"float","description":"Indicates if one or more datasets may be obscuring the resolution of the results by\\nbeing significantly different from the others.","title":"Rounding Threshold Outlier"},"model_accuracy":{"type":"number","format":"float","description":"This is an indication of how accurately the engine represented the datasets involved when executing the query.\\nSmall errors are introduced in the query results due to internal statistical representations of the data during query execution.\\nTypically these errors are small and obscured by rounding.","title":"Model Accuracy"},"result_precision_include_empty_bins":{"type":"number","format":"float","description":"This includes empty bins when calculating the average bin size.","title":"Result Precision Include Empty Bins"},"result_precision_exclude_empty_bins":{"type":"number","format":"float","description":"This excludes empty bins when calculating the average bin size.","title":"Result Precision Exclude Empty Bins"}}}},"description":"The Result of a Query.","title":"Query Result"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the requested Result could not be found or was not yet ready.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"query_id","description":"Query ID\\n\\nThe ID of the Query, as returned from the CreateQuery method.","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Queries"]}},"/api/v1/usage/datasets/{private_id}":{"get":{"summary":"Get Dataset credit usage","description":"Gets a time series of credit usage on the specified Dataset.","operationId":"TyraelGetDatasetUsage","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"timeseries":{"type":"array","items":{"type":"object","properties":{"timestamp":{"type":"string","format":"date-time","description":"The time at which Usage was at the levels described in Usage.\\nIf usage is grouped, this will be the timestamp of the end of the interval.","title":"Timestamp"},"usage":{"description":"Describes the state of Usage for a Dataset\\nat the time specified by Timestamp.","title":"Usage","type":"object","properties":{"owner":{"description":"The Owner of this Dataset.","title":"Owner","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"allocation":{"type":"integer","format":"int64","description":"The total credits available for this Dataset\\nper billing cycle.","title":"Allocation"},"current_allocation":{"type":"integer","format":"int64","description":"The number of credits available for this Dataset\\nin the current billing cycle.","title":"CurrentAllocation"},"used":{"type":"integer","format":"int64","description":"The number of credits used for this Dataset in\\nthe current billing cycle.","title":"Used"},"permissions":{"type":"array","items":{"type":"object","properties":{"recipient":{"description":"The User who was offered Permission.","title":"Recipient","type":"object","properties":{"id":{"type":"string","description":"The ID of the User. This is often used as a parameter to endpoints.\\nIt uniquely identifies this user in the Platform.","title":"ID"},"display_name":{"type":"string","description":"The display name of the user, as chosen by themselves.","title":"Display name"}}},"allowance":{"type":"integer","format":"int64","description":"The number of credits that can be used on this Permission\\nper billing cycle.","title":"Allowance"},"current_allowance":{"type":"integer","format":"int64","description":"The number of credits that can be used on this\\nPermission in the current billing cycle.","title":"CurrentAllowance"},"used":{"type":"integer","format":"int64","description":"The number of credits used by the User in this billing cycle.","title":"Used"},"uses_parent_allocation":{"type":"boolean","description":"False if the User has been given their own restricted allowance,\\ntrue if they consume directly from the Dataset\'s unallocated credits.","title":"UsesParentAllocation"}},"description":"Specifies the usage and allowance for a specific Permission.","title":"Permission Usage"},"description":"Contains Usage information for all Permissions on this\\nDataset.","title":"Permissions"}}}},"description":"A single Dataset usage datapoint.","title":"Dataset Usage Value"},"description":"An array of datapoints that describe the Usage for a Dataset over time.","title":"Timeseries"}},"description":"The credit usage information for the Dataset.","title":"Dataset Usage Response"}}}},"400":{"description":"Returned when an invalid request filter is used.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the requested Dataset could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"private_id","description":"Private Dataset ID\\n\\nThe Private ID of the Dataset to return usage data for.","in":"path","required":true,"schema":{"type":"string"}},{"name":"start_time","description":"Start Time. The timestamp from which to return usage data. If not specified,\\nwill default to the beginning of the current month. If specified, the\\nStartTime will be rounded down to the next group boundary as specified\\nby Grouping.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"end_time","description":"End Time. The timestamp up to which to return usage data. If not specified,\\nwill return all data up to the present moment. The EndTime will be\\nrounded up to the next group boundary as specified by Grouping.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"grouping","description":"Grouping. Specifies how to roll up a time series into discrete groups.\\n\\n - TIME_GROUPING_UNSPECIFIED: Default value - should not be used.\\n - DAY: All values within a single day will be rolled up into a single\\ndatapoint.\\n - WEEK: All values within a single week (Monday - Sunday) will be\\nrolled up into a single datapoint.\\n - MONTH: All values within a single calendar month will be rolled up\\ninto a single datapoint.\\n - YEAR: All values within a single calendar year will be rolled up into\\na single datapoint.","in":"query","required":false,"schema":{"type":"string","enum":["TIME_GROUPING_UNSPECIFIED","DAY","WEEK","MONTH","YEAR"],"default":"TIME_GROUPING_UNSPECIFIED"}}],"tags":["Datasets"]}},"/api/v1/usage/permissions/{private_id}/{recipient_id}":{"get":{"summary":"Get Permission credit usage","description":"Gets a time series of credit usage on the specified Dataset.","operationId":"TyraelGetPermissionUsage","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"timeseries":{"type":"array","items":{"type":"object","properties":{"timestamp":{"type":"string","format":"date-time","description":"The time at which Usage was at the levels described in Usage.\\nIf usage is grouped, this will be the timestamp of the end of the interval.","title":"Timestamp"},"usage":{"description":"The state of Usage for a Permission at the time specified by Timestamp.","title":"Usage","type":"object","properties":{"allowance":{"type":"integer","format":"int64","description":"The number of credits that can be used on this Permission\\nper billing cycle.","title":"Allowance"},"current_allowance":{"type":"integer","format":"int64","description":"The number of credits that can be used on this\\nPermission in the current billing cycle.","title":"CurrentAllowance"},"used":{"type":"integer","format":"int64","description":"The number of credits used on this Permission in this billing cycle.","title":"Used"},"uses_parent_allocation":{"type":"boolean","description":"UsesParentAllocation is false if the User has been given their own\\nrestricted allowance, or true if they consume directly from the Dataset\'s\\nunallocated credits."},"parent_allocation":{"type":"integer","format":"int64","description":"The number of credits allocated to the parent Dataset\\nper billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"ParentAllocation"},"current_parent_allocation":{"type":"integer","format":"int64","description":"The number of credits currently allocated to\\nthe parent Dataset in the current billing cycle.\\nThis field is only returned if the requesting user is the owner of the Dataset.","title":"CurrentParentAllocation"}}}},"description":"A single Permission usage datapoint.","title":"Permission Usage Value"},"description":"An array of datapoints that describe the Usage for a Permission over time.","title":"Timeseries"}},"description":"The response from the GetPermissionUsage method.","title":"Get Permissions Usage Response"}}}},"400":{"description":"Returned when an invalid request filter is used.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"404":{"description":"Returned when the requested Permission could not be found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"parameters":[{"name":"private_id","description":"Private Dataset ID\\n\\nThe Private ID of the Dataset that the Permission is from,\\nwhich identifies the Permission to return usage data for when combined\\nwith RecipientId.","in":"path","required":true,"schema":{"type":"string"}},{"name":"recipient_id","description":"Recipient user ID\\n\\nThe user ID of the recipient of the Permission to return usage data for,\\nwhich identifies a single Permission when combined with Dataset ID.","in":"path","required":true,"schema":{"type":"string"}},{"name":"start_time","description":"Start Time. The timestamp from which to return usage data. If not specified,\\nwill default to the beginning of the current month. If specified, the\\nStartTime will be rounded down to the next group boundary as specified\\nby Grouping.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"end_time","description":"End Time. The timestamp up to which to return usage data. If not specified,\\nwill return all data up to the present moment. The EndDate will be\\nrounded up to the next group boundary as specified by Grouping.","in":"query","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"grouping","description":"Grouping. Specifies how to roll up a time series into discrete groups.\\n\\n - TIME_GROUPING_UNSPECIFIED: Default value - should not be used.\\n - DAY: All values within a single day will be rolled up into a single\\ndatapoint.\\n - WEEK: All values within a single week (Monday - Sunday) will be\\nrolled up into a single datapoint.\\n - MONTH: All values within a single calendar month will be rolled up\\ninto a single datapoint.\\n - YEAR: All values within a single calendar year will be rolled up into\\na single datapoint.","in":"query","required":false,"schema":{"type":"string","enum":["TIME_GROUPING_UNSPECIFIED","DAY","WEEK","MONTH","YEAR"],"default":"TIME_GROUPING_UNSPECIFIED"}}],"tags":["Permissions"]}},"/api/v1/validate":{"post":{"summary":"ValidateQuery validates a query","description":"Performs validation of a query without actually executing it. Good for testing that your queries are correctly formatted.","operationId":"TyraelValidateQuery","responses":{"200":{"description":"A successful response.","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","description":"True if the Query was successfully validated.","title":"Success"}},"description":"Whether the Query was successfully validated.","title":"Validate Query Response"}}}},"400":{"description":"Returned when the Query could not be parsed.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"401":{"description":"Returned when the user could not be authorized.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The error message explaining the error.","title":"Error Message"},"metadata":{"type":"object","additionalProperties":{"type":"string"},"description":"Any error metadata that may be relevant.","title":"Error Metadata"}},"description":"An error with an explanation.","title":"Error"}}}},"default":{"description":"An unexpected error response.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32","description":"The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."},"message":{"type":"string","description":"A developer-facing error message, which should be in English. Any\\nuser-facing error message should be localized and sent in the\\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."},"details":{"type":"array","items":{"type":"object","properties":{"type_url":{"type":"string","description":"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\"/\\" character. The last segment of the URL\'s path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\".\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics."},"value":{"type":"string","format":"byte","description":"Must be a valid serialized protocol buffer of the above specified type."}},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(&foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := &pb.Foo{...}\\n     any, err := anypb.New(foo)\\n     if err != nil {\\n       ...\\n     }\\n     ...\\n     foo := &pb.Foo{}\\n     if err := any.UnmarshalTo(foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n\'type.googleapis.com/full.type.name\' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last \'/\'\\nin the type URL, for example \\"foo.bar.com/x/y.z\\" will yield type\\nname \\"y.z\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.profile.Person\\",\\n      \\"firstName\\": <string>,\\n      \\"lastName\\": <string>\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\"@type\\": \\"type.googleapis.com/google.protobuf.Duration\\",\\n      \\"value\\": \\"1.212s\\"\\n    }"},"description":"A list of messages that carry the error details.  There is a common set of\\nmessage types for APIs to use."}},"description":"The `Status` type defines a logical error model that is suitable for\\ndifferent programming environments, including REST APIs and RPC APIs. It is\\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\\nthree pieces of data: error code, error message, and error details.\\n\\nYou can find out more about this error model and how to work with it in the\\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"query":{"type":"string","description":"The Query that should be validated. This takes the\\nformat of an InfoSum Query Language Query. See\\nthe documentation of the InfoSum Query Language\\nfor more information.","title":"Query"},"path_overrides":{"type":"array","items":{"type":"object","properties":{"source_dataset":{"description":"Is the dataset name and keys that the path starts from.","title":"Source Dataset","type":"object","properties":{"private_id":{"type":"string","description":"Is the private ID of the Dataset.","title":"Private ID"},"keys":{"type":"array","items":{"type":"string"},"description":"Is an ordered list of keys that can be used when joining this dataset to another dataset.\\nWhen this dataset is joined to another dataset each row in the datasets is joined using the key order defined here.\\nIf a key is missing from a specific row, the next key in the order is used.","title":"Keys"}}},"destination_private_id":{"type":"string","description":"Is the private ID of the Dataset that the path ends at.","title":"Destination Private ID"}},"description":"Contains instructions on how to join two datasets, overriding the automatic choices made by the core engine.","title":"Path Override"},"description":"A list of instructions on how to connect two datasets, overriding the automatic choices\\nmade by the core engine.","title":"Path Overrides"}},"description":"Used to validate a Query before executing it.","title":"Validate Request"}}},"required":true},"tags":["Queries"]}}},"tags":[{"name":"ImportConnectorConfigs","description":"Define templates for the importing of data from various remote systems into the InfoSum platform."},{"name":"Imports","description":"Create, Run and Manage import tasks; which are used to import data from a 3rd party system into a File Vault."},{"name":"TransformService","description":"Run transformation scripts against data stored in a File Vault."},{"name":"FileVaults","description":"Create and manage File Vaults which allow the storage of raw data."},{"name":"Destinations","description":"Define how and where to send data when it is exported from the InfoSum platform."},{"name":"FilesService","description":"List, Delete and Manage metadata about files within a File Vault."},{"name":"Tyrael"}],"components":{"securitySchemes":{"API_Keys":{"type":"apiKey","description":"Your API key.","name":"Authorization","in":"header"}}}}}},"docusaurus-theme-redoc":{"theme-redoc":{"lightTheme":{"typography":{"fontFamily":"var(--ifm-font-family-base)","fontSize":"var(--ifm-font-size-base)","lineHeight":"var(--ifm-line-height-base)","fontWeightLight":"var(--ifm-font-weight-light)","fontWeightRegular":"var(--ifm-font-weight-base)","fontWeightBold":"var(--ifm-font-weight-bold)","headings":{"fontFamily":"var(--ifm-heading-font-family)","fontWeight":"var(--ifm-heading-font-weight)","lineHeight":"var(--ifm-heading-line-height)"},"code":{"fontFamily":"var(--ifm-font-family-monospace)","lineHeight":"var(--ifm-pre-line-height)"}},"sidebar":{"width":"300px","backgroundColor":"#ffffff"},"rightPanel":{"backgroundColor":"#303846"},"colors":{"primary":{"main":"#25c2a0"}},"theme":{"prism":{"additionalLanguages":["scala"]}}},"darkTheme":{"typography":{"fontFamily":"var(--ifm-font-family-base)","fontSize":"var(--ifm-font-size-base)","lineHeight":"var(--ifm-line-height-base)","fontWeightLight":"var(--ifm-font-weight-light)","fontWeightRegular":"var(--ifm-font-weight-base)","fontWeightBold":"var(--ifm-font-weight-bold)","headings":{"fontFamily":"var(--ifm-heading-font-family)","fontWeight":"var(--ifm-heading-font-weight)","lineHeight":"var(--ifm-heading-line-height)"},"code":{"fontFamily":"var(--ifm-font-family-monospace)","lineHeight":"var(--ifm-pre-line-height)"}},"sidebar":{"width":"300px","backgroundColor":"rgb(24, 25, 26)","textColor":"#f5f6f7","arrow":{"color":"#f5f6f7"}},"colors":{"text":{"primary":"#f5f6f7","secondary":"rgba(255, 255, 255, 1)"},"gray":{"50":"#FAFAFA","100":"#F5F5F5"},"border":{"dark":"#ffffff","light":"rgba(0,0,0, 0.1)"},"primary":{"main":"#25c2a0"}},"schema":{"nestedBackground":"rgb(24, 25, 26)","typeNameColor":"rgba(255, 255, 255, 1)","typeTitleColor":"rgba(255, 255, 255, 1)"},"theme":{"prism":{"additionalLanguages":["scala"]}}},"options":{"scrollYOffset":"nav.navbar","expandSingleSchemaField":true,"menuToggle":true,"suppressWarnings":true}}},"docusaurus-plugin-content-docs":{"default":{"path":"/infosum-docs/docs","versions":[{"name":"current","label":"Next","isLast":true,"path":"/infosum-docs/docs","mainDocId":"intro","docs":[{"id":"authentication","path":"/infosum-docs/docs/authentication","sidebar":"tutorialSidebar"},{"id":"filevaults/index","path":"/infosum-docs/docs/filevaults/","sidebar":"tutorialSidebar"},{"id":"getting-started/index","path":"/infosum-docs/docs/getting-started/","sidebar":"tutorialSidebar"},{"id":"getting-started/uploading-a-file-to-a-filevault","path":"/infosum-docs/docs/getting-started/uploading-a-file-to-a-filevault","sidebar":"tutorialSidebar"},{"id":"intro","path":"/infosum-docs/docs/intro","sidebar":"tutorialSidebar"},{"id":"transform/index","path":"/infosum-docs/docs/transform/","sidebar":"tutorialSidebar"}],"draftIds":[],"sidebars":{"tutorialSidebar":{"link":{"path":"/infosum-docs/docs/intro","label":"intro"}}}}],"breadcrumbs":true}}}'),i=JSON.parse('{"defaultLocale":"en","locales":["en"],"currentLocale":"en","localeConfigs":{"en":{"label":"English","direction":"ltr","htmlLang":"en","calendar":"gregory"}}}'),s=n(57529),E=JSON.parse('{"docusaurusVersion":"2.0.0-beta.21","siteVersion":"0.0.0","pluginVersions":{"docusaurus-plugin-content-docs":{"type":"package","name":"@docusaurus/plugin-content-docs","version":"2.0.0-beta.21"},"docusaurus-plugin-content-blog":{"type":"package","name":"@docusaurus/plugin-content-blog","version":"2.0.0-beta.21"},"docusaurus-plugin-content-pages":{"type":"package","name":"@docusaurus/plugin-content-pages","version":"2.0.0-beta.21"},"docusaurus-plugin-sitemap":{"type":"package","name":"@docusaurus/plugin-sitemap","version":"2.0.0-beta.21"},"docusaurus-plugin-redoc":{"type":"package","name":"docusaurus-plugin-redoc","version":"1.2.1"},"docusaurus-theme-classic":{"type":"package","name":"@docusaurus/theme-classic","version":"2.0.0-beta.21"},"docusaurus-theme-redoc":{"type":"package","name":"docusaurus-theme-redoc","version":"1.2.2"},"docusaurus-plugin-pwa":{"type":"package","name":"@docusaurus/plugin-pwa","version":"2.0.0-beta.21"}}}'),o={siteConfig:a.default,siteMetadata:E,globalData:_,i18n:i,codeTranslations:s},T=r.createContext(o);function d(e){var t=e.children;return r.createElement(T.Provider,{value:o},t)}},44763:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var r=n(94578),a=n(67294),_=n(10412),i=n(35742),s=n(21622);function E(e){var t=e.error,n=e.tryAgain;return a.createElement("div",{style:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",height:"50vh",width:"100%",fontSize:"20px"}},a.createElement("h1",null,"This page crashed."),a.createElement("p",null,t.message),a.createElement("button",{type:"button",onClick:n},"Try again"))}function o(e){var t=e.error,n=e.tryAgain;return a.createElement(d,{fallback:function(){return a.createElement(E,{error:t,tryAgain:n})}},a.createElement(i.Z,null,a.createElement("title",null,"Page Error")),a.createElement(s.Z,null,a.createElement(E,{error:t,tryAgain:n})))}var T=function(e){return a.createElement(o,e)},d=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={error:null},n}(0,r.Z)(t,e);var n=t.prototype;return n.componentDidCatch=function(e){_.default.canUseDOM&&this.setState({error:e})},n.render=function(){var e=this,t=this.props.children,n=this.state.error;if(n){var r,a={error:n,tryAgain:function(){return e.setState({error:null})}};return(null!=(r=this.props.fallback)?r:T)(a)}return null!=t?t:null},t}(a.Component)},10412:function(e,t,n){"use strict";n.r(t);var r=!("undefined"==typeof window||!window.document||!window.document.createElement),a={canUseDOM:r,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseIntersectionObserver:r&&"IntersectionObserver"in window,canUseViewport:r&&!!window.screen};t.default=a},35742:function(e,t,n){"use strict";n.d(t,{Z:function(){return _}});var r=n(67294),a=n(70405);function _(e){return r.createElement(a.ql,e)}},39960:function(e,t,n){"use strict";n.d(t,{Z:function(){return R}});var r=n(87462),a=n(63366),_=n(67294),i=n(73727),s=n(18780),E=n(52263),o=n(13919),T=n(10412),d=_.createContext({collectLink:function(){}});var I=n(44996),u=["isNavLink","to","href","activeClassName","isActive","data-noBrokenLinkCheck","autoAddBaseUrl"];function N(e,t){var n,N,R=e.isNavLink,O=e.to,A=e.href,l=e.activeClassName,D=e.isActive,h=e["data-noBrokenLinkCheck"],S=e.autoAddBaseUrl,p=void 0===S||S,c=(0,a.Z)(e,u),P=(0,E.Z)().siteConfig,C=P.trailingSlash,U=P.baseUrl,f=(0,I.C)().withBaseUrl,m=(0,_.useContext)(d),L=(0,_.useRef)(null);(0,_.useImperativeHandle)(t,(function(){return L.current}));var F=O||A;var M,w=(0,o.Z)(F),g=null==F?void 0:F.replace("pathname://",""),b=void 0!==g?(M=g,p&&function(e){return e.startsWith("/")}(M)?f(M):M):void 0;b&&w&&(b=(0,s.applyTrailingSlash)(b,{trailingSlash:C,baseUrl:U}));var y=(0,_.useRef)(!1),X=R?i.OL:i.rU,v=T.default.canUseIntersectionObserver,V=(0,_.useRef)();(0,_.useEffect)((function(){return!v&&w&&null!=b&&window.docusaurus.prefetch(b),function(){v&&V.current&&V.current.disconnect()}}),[V,b,v,w]);var B=null!=(n=null==(N=b)?void 0:N.startsWith("#"))&&n,Y=!b||!w||B;return Y||h||m.collectLink(b),Y?_.createElement("a",(0,r.Z)({ref:L,href:b},F&&!w&&{target:"_blank",rel:"noopener noreferrer"},c)):_.createElement(X,(0,r.Z)({},c,{onMouseEnter:function(){y.current||null==b||(window.docusaurus.preload(b),y.current=!0)},innerRef:function(e){L.current=e,v&&e&&w&&(V.current=new window.IntersectionObserver((function(t){t.forEach((function(t){e===t.target&&(t.isIntersecting||t.intersectionRatio>0)&&(V.current.unobserve(e),V.current.disconnect(),null!=b&&window.docusaurus.prefetch(b))}))})),V.current.observe(e))},to:b},R&&{isActive:D,activeClassName:l}))}var R=_.forwardRef(N)},95999:function(e,t,n){"use strict";n.d(t,{Z:function(){return E},I:function(){return s}});var r=n(67294);function a(e,t){var n=e.split(/(\{\w+\})/).map((function(e,n){if(n%2==1){var r=null==t?void 0:t[e.slice(1,-1)];if(void 0!==r)return r}return e}));return n.some((function(e){return(0,r.isValidElement)(e)}))?n.map((function(e,t){return(0,r.isValidElement)(e)?r.cloneElement(e,{key:t}):e})).filter((function(e){return""!==e})):n.join("")}var _=n(57529);function i(e){var t,n,r=e.id,a=e.message;if(void 0===r&&void 0===a)throw new Error("Docusaurus translation declarations must have at least a translation id or a default translation message");return null!=(t=null!=(n=_[null!=r?r:a])?n:a)?t:r}function s(e,t){return a(i({message:e.message,id:e.id}),t)}function E(e){var t=e.children,n=e.id,_=e.values;if(t&&"string"!=typeof t)throw console.warn("Illegal <Translate> children",t),new Error("The Docusaurus <Translate> component only accept simple string values");var s=i({message:t,id:n});return r.createElement(r.Fragment,null,a(s,_))}},29935:function(e,t,n){"use strict";n.d(t,{m:function(){return r}});var r="default"},13919:function(e,t,n){"use strict";function r(e){return/^(?:\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{Z:function(){return a},b:function(){return r}})},44996:function(e,t,n){"use strict";n.d(t,{C:function(){return _},Z:function(){return i}});var r=n(52263),a=n(13919);function _(){var e=(0,r.Z)().siteConfig,t=e.baseUrl,n=e.url;return{withBaseUrl:function(e,r){return function(e,t,n,r){var _=void 0===r?{}:r,i=_.forcePrependBaseUrl,s=void 0!==i&&i,E=_.absolute,o=void 0!==E&&E;if(!n||n.startsWith("#")||(0,a.b)(n))return n;if(s)return t+n.replace(/^\//,"");if(n===t.replace(/\/$/,""))return t;var T=n.startsWith(t)?n:t+n.replace(/^\//,"");return o?e+T:T}(n,t,e,r)}}}function i(e,t){return void 0===t&&(t={}),(0,_().withBaseUrl)(e,t)}},52263:function(e,t,n){"use strict";n.d(t,{Z:function(){return _}});var r=n(67294),a=n(58940);function _(){return(0,r.useContext)(a._)}},28084:function(e,t,n){"use strict";n.d(t,{OD:function(){return _},eZ:function(){return i}});var r=n(52263),a=n(29935);function _(e,t){void 0===t&&(t={});var n=(0,r.Z)().globalData[e];if(!n&&t.failfast)throw new Error('Docusaurus plugin global data not found for "'+e+'" plugin.');return n}function i(e,t,n){void 0===t&&(t=a.m),void 0===n&&(n={});var r=_(e),i=null==r?void 0:r[t];if(!i&&n.failfast)throw new Error('Docusaurus plugin global data not found for "'+e+'" plugin with id "'+t+'".');return i}},72389:function(e,t,n){"use strict";n.d(t,{Z:function(){return _}});var r=n(67294),a=n(98934);function _(){return(0,r.useContext)(a._)}},99670:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});function r(e){var t={};return function e(n,r){Object.entries(n).forEach((function(n){var a,_=n[0],i=n[1],s=r?r+"."+_:_;"object"==typeof(a=i)&&a&&Object.keys(a).length>0?e(i,s):t[s]=i}))}(e),t}},30226:function(e,t,n){"use strict";n.d(t,{_:function(){return a},z:function(){return _}});var r=n(67294),a=r.createContext(null);function _(e){var t=e.children,n=e.value,_=r.useContext(a),i=(0,r.useMemo)((function(){return function(e){var t=e.parent,n=e.value;if(!t){if(!n)throw new Error("Unexpected: no Docusaurus route context found");if(!("plugin"in n))throw new Error("Unexpected: Docusaurus topmost route context has no `plugin` attribute");return n}var r=Object.assign({},t.data,null==n?void 0:n.data);return{plugin:t.plugin,data:r}}({parent:_,value:n})}),[_,n]);return r.createElement(a.Provider,{value:i},t)}},94104:function(e,t,n){"use strict";n.d(t,{Iw:function(){return u},gA:function(){return T},_r:function(){return E},Jo:function(){return N},zh:function(){return o},yW:function(){return I},gB:function(){return d}});var r=n(76775),a=n(28084);var _=function(e){return e.versions.find((function(e){return e.isLast}))};function i(e,t){var n,a,i=function(e,t){var n=_(e);return[].concat(e.versions.filter((function(e){return e!==n})),[n]).find((function(e){return!!(0,r.LX)(t,{path:e.path,exact:!1,strict:!1})}))}(e,t),s=null==i?void 0:i.docs.find((function(e){return!!(0,r.LX)(t,{path:e.path,exact:!0,strict:!1})}));return{activeVersion:i,activeDoc:s,alternateDocVersions:s?(n=s.id,a={},e.versions.forEach((function(e){e.docs.forEach((function(t){t.id===n&&(a[e.name]=t)}))})),a):{}}}var s={},E=function(){var e;return null!=(e=(0,a.OD)("docusaurus-plugin-content-docs"))?e:s},o=function(e){return(0,a.eZ)("docusaurus-plugin-content-docs",e,{failfast:!0})};function T(e){return void 0===e&&(e={}),function(e,t,n){void 0===n&&(n={});var a=Object.entries(e).sort((function(e,t){return t[1].path.localeCompare(e[1].path)})).find((function(e){var n=e[1];return!!(0,r.LX)(t,{path:n.path,exact:!1,strict:!1})})),_=a?{pluginId:a[0],pluginData:a[1]}:void 0;if(!_&&n.failfast)throw new Error("Can't find active docs plugin for \""+t+'" pathname, while it was expected to be found. Maybe you tried to use a docs feature that can only be used on a docs-related page? Existing docs plugin paths are: '+Object.values(e).map((function(e){return e.path})).join(", "));return _}(E(),(0,r.TH)().pathname,e)}function d(e){return o(e).versions}function I(e){var t=o(e);return _(t)}function u(e){return i(o(e),(0,r.TH)().pathname)}function N(e){return function(e,t){var n=_(e);return{latestDocSuggestion:i(e,t).alternateDocVersions[n.name],latestVersionSuggestion:n}}(o(e),(0,r.TH)().pathname)}},58968:function(e,t,n){"use strict";n.r(t);var r=n(74165),a=n(15861),_=n(50012),i=["appInstalled","standalone","queryString"],s=!1,E=(0,_.W)("docusaurus.pwa.event.appInstalled.fired");function o(){return T.apply(this,arguments)}function T(){return T=(0,a.Z)((0,r.Z)().mark((function e(){var t;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,navigator.serviceWorker.getRegistrations();case 2:return t=e.sent,e.next=6,Promise.all(t.map(function(){var e=(0,a.Z)((0,r.Z)().mark((function e(t){return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.unregister();case 2:e.sent;case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()));case 6:s,window.location.reload();case 8:case"end":return e.stop()}}),e)}))),T.apply(this,arguments)}function d(){return I.apply(this,arguments)}function I(){return(I=(0,a.Z)((0,r.Z)().mark((function e(){return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return","true"===E.get());case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function u(){return N.apply(this,arguments)}function N(){return(N=(0,a.Z)((0,r.Z)().mark((function e(){var t;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("getInstalledRelatedApps"in window.navigator)){e.next=5;break}return e.next=3,navigator.getInstalledRelatedApps();case 3:return t=e.sent,e.abrupt("return",t.some((function(e){return"webapp"===e.platform})));case 5:return e.abrupt("return",!1);case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var R,O={always:function(){return!0},mobile:function(){return window.innerWidth<=940},saveData:function(){var e;return!(null==(e=navigator.connection)||!e.saveData)},appInstalled:(R=(0,a.Z)((0,r.Z)().mark((function e(){var t,n;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d();case 2:return t=e.sent,e.next=5,u();case 5:return n=e.sent,e.abrupt("return",t||n);case 7:case"end":return e.stop()}}),e)}))),function(){return R.apply(this,arguments)}),standalone:function(){return window.matchMedia("(display-mode: standalone)").matches},queryString:function(){return"true"===new URLSearchParams(window.location.search).get("offlineMode")}};function A(e){return l.apply(this,arguments)}function l(){return(l=(0,a.Z)((0,r.Z)().mark((function e(t){return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",O[t]());case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function D(){return h.apply(this,arguments)}function h(){return h=(0,a.Z)((0,r.Z)().mark((function e(){var t;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all(i.map(function(){var e=(0,a.Z)((0,r.Z)().mark((function e(t){var n;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,A(t);case 2:return n=e.sent,e.abrupt("return",n?t:void 0);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()));case 2:return t=e.sent,e.abrupt("return",t.filter(Boolean));case 4:case"end":return e.stop()}}),e)}))),h.apply(this,arguments)}function S(){return p.apply(this,arguments)}function p(){return(p=(0,a.Z)((0,r.Z)().mark((function e(){var t,n;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,D();case 2:return t=e.sent,n=t.length>0,e.abrupt("return",n);case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function c(e){var t=JSON.stringify(e),n="/infosum-docs/sw.js?params="+encodeURIComponent(t);return n}function P(){return P=(0,a.Z)((0,r.Z)().mark((function e(){var t,_,i,E,o,T,d,I;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.e(131).then(n.bind(n,75131));case 2:return t=e.sent,_=t.Workbox,e.next=6,S();case 6:return i=e.sent,E=c({offlineMode:i,debug:s}),o=new _(E),e.next=11,o.register();case 11:if(T=e.sent,d=function(){return o.messageSW({type:"SKIP_WAITING"})},I=function(){var e=(0,a.Z)((0,r.Z)().mark((function e(){var t;return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i){e.next=5;break}d(),e.next=10;break;case 5:return e.next=7,n.e(283).then(n.bind(n,65283));case 7:return t=e.sent.default,e.next=10,t({onReload:function(){o.addEventListener("controlling",(function(){window.location.reload()})),d()}});case 10:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),o.addEventListener("waiting",(function(e){I()})),o.addEventListener("externalwaiting",(function(e){I()})),null==T||!T.waiting){e.next=20;break}return e.next=20,I();case 20:case"end":return e.stop()}}),e)}))),P.apply(this,arguments)}"undefined"!=typeof window&&"serviceWorker"in navigator&&("undefined"!=typeof window&&(window.addEventListener("appinstalled",function(){var e=(0,a.Z)((0,r.Z)().mark((function e(t){return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return E.set("true"),e.next=5,o();case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()),window.addEventListener("beforeinstallprompt",function(){var e=(0,a.Z)((0,r.Z)().mark((function e(t){return(0,r.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!E.get()){e.next=7;break}return E.del(),e.next=7,o();case 7:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}())),function(){return P.apply(this,arguments)}().catch((function(e){return console.error("registerSW failed",e)})))},18320:function(e,t,n){"use strict";n.r(t);var r=n(74865),a=n.n(r);a().configure({showSpinner:!1});var _={onRouteUpdate:function(e){var t=e.location,n=e.previousLocation;if(n&&t.pathname!==n.pathname){var r=window.setTimeout((function(){a().start()}),200);return function(){return window.clearTimeout(r)}}},onRouteDidUpdate:function(){a().done()}};t.default=_},3310:function(e,t,n){"use strict";n.r(t);var r,a,_=n(87410),i=n(36809);r=_.Z,a=i.default.themeConfig.prism.additionalLanguages,globalThis.Prism=r,a.forEach((function(e){n(6726)("./prism-"+e)})),delete globalThis.Prism},38483:function(e,t,n){"use strict";n.d(t,{Z:function(){return _}});var r=n(67294),a="iconExternalLink_lCJq";function _(e){var t=e.width,n=void 0===t?13.5:t,_=e.height,i=void 0===_?13.5:_;return r.createElement("svg",{width:n,height:i,"aria-hidden":"true",viewBox:"0 0 24 24",className:a},r.createElement("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"}))}},21622:function(e,t,n){"use strict";n.d(t,{Z:function(){return lt}});var r=n(67294),a=n(86010),_=n(44763),i=n(19727),s=n(1944),E=n(35281),o=n(95999),T=n(76775),d=n(85936);function I(e){e.setAttribute("tabindex","-1"),e.focus(),e.removeAttribute("tabindex")}var u="skipToContent_fXgn";function N(){var e=function(){var e=(0,r.useRef)(null),t=(0,T.k6)().action,n=(0,r.useCallback)((function(e){var t;e.preventDefault();var n=null!=(t=document.querySelector("main:first-of-type"))?t:document.querySelector("."+E.k.wrapper.main);n&&I(n)}),[]);return(0,d.S)((function(n){var r=n.location;e.current&&!r.hash&&"PUSH"===t&&I(e.current)})),{containerRef:e,handleSkip:n}}(),t=e.containerRef,n=e.handleSkip;return r.createElement("div",{ref:t,role:"region"},r.createElement("a",{href:"#",className:u,onClick:n},r.createElement(o.Z,{id:"theme.common.skipToMainContent",description:"The skip to content label used for accessibility, allowing to rapidly navigate to main content with keyboard tab/enter navigation"},"Skip to main content")))}var R=n(59689),O=n(86668),A=n(87462),l=n(63366),D=["width","height","color","strokeWidth","className"];function h(e){var t=e.width,n=void 0===t?21:t,a=e.height,_=void 0===a?21:a,i=e.color,s=void 0===i?"currentColor":i,E=e.strokeWidth,o=void 0===E?1.2:E,T=(e.className,(0,l.Z)(e,D));return r.createElement("svg",(0,A.Z)({viewBox:"0 0 15 15",width:n,height:_},T),r.createElement("g",{stroke:s,strokeWidth:o},r.createElement("path",{d:"M.75.75l13.5 13.5M14.25.75L.75 14.25"})))}var S="announcementBar_mb4j",p="announcementBarPlaceholder_vyr4",c="announcementBarClose_gvF7",P="announcementBarContent_xLdY";function C(){var e=(0,R.nT)(),t=e.isActive,n=e.close,_=(0,O.L)().announcementBar;if(!t)return null;var i=_.content,s=_.backgroundColor,E=_.textColor,T=_.isCloseable;return r.createElement("div",{className:S,style:{backgroundColor:s,color:E},role:"banner"},T&&r.createElement("div",{className:p}),r.createElement("div",{className:P,dangerouslySetInnerHTML:{__html:i}}),T?r.createElement("button",{type:"button",className:(0,a.Z)("clean-btn close",c),onClick:n,"aria-label":(0,o.I)({id:"theme.AnnouncementBar.closeButtonAriaLabel",message:"Close",description:"The ARIA label for close button of announcement bar"})},r.createElement(h,{width:14,height:14,strokeWidth:3.1})):null)}var U=n(72961),f=n(12466);var m=n(902),L=n(13102),F=r.createContext(null);function M(e){var t,n,a,_,i,s,E,o=e.children,T=(t=(0,U.e)(),n=(0,L.HY)(),a=(0,r.useState)(!1),_=a[0],i=a[1],s=null!==n.component,E=(0,m.D9)(s),(0,r.useEffect)((function(){s&&!E&&i(!0)}),[s,E]),(0,r.useEffect)((function(){s?t.shown||i(!0):i(!1)}),[t.shown,s]),(0,r.useMemo)((function(){return[_,i]}),[_]));return r.createElement(F.Provider,{value:T},o)}function w(e){if(e.component){var t=e.component;return r.createElement(t,e.props)}}function g(){var e=(0,r.useContext)(F);if(!e)throw new m.i6("NavbarSecondaryMenuDisplayProvider");var t=e[0],n=e[1],a=(0,r.useCallback)((function(){return n(!1)}),[n]),_=(0,L.HY)();return(0,r.useMemo)((function(){return{shown:t,hide:a,content:w(_)}}),[a,_,t])}function b(e){var t=e.header,n=e.primaryMenu,_=e.secondaryMenu,i=g().shown;return r.createElement("div",{className:"navbar-sidebar"},t,r.createElement("div",{className:(0,a.Z)("navbar-sidebar__items",{"navbar-sidebar__items--show-secondary":i})},r.createElement("div",{className:"navbar-sidebar__item menu"},n),r.createElement("div",{className:"navbar-sidebar__item menu"},_)))}var y=n(92949),X=n(72389);function v(e){return r.createElement("svg",(0,A.Z)({viewBox:"0 0 24 24",width:24,height:24},e),r.createElement("path",{fill:"currentColor",d:"M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z"}))}function V(e){return r.createElement("svg",(0,A.Z)({viewBox:"0 0 24 24",width:24,height:24},e),r.createElement("path",{fill:"currentColor",d:"M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"}))}var B={toggle:"toggle_vylO",toggleButton:"toggleButton_gllP",darkToggleIcon:"darkToggleIcon_wfgR",lightToggleIcon:"lightToggleIcon_pyhR",toggleButtonDisabled:"toggleButtonDisabled_aARS"};function Y(e){var t=e.className,n=e.value,_=e.onChange,i=(0,X.Z)(),s=(0,o.I)({message:"Switch between dark and light mode (currently {mode})",id:"theme.colorToggle.ariaLabel",description:"The ARIA label for the navbar color mode toggle"},{mode:"dark"===n?(0,o.I)({message:"dark mode",id:"theme.colorToggle.ariaLabel.mode.dark",description:"The name for the dark color mode"}):(0,o.I)({message:"light mode",id:"theme.colorToggle.ariaLabel.mode.light",description:"The name for the light color mode"})});return r.createElement("div",{className:(0,a.Z)(B.toggle,t)},r.createElement("button",{className:(0,a.Z)("clean-btn",B.toggleButton,!i&&B.toggleButtonDisabled),type:"button",onClick:function(){return _("dark"===n?"light":"dark")},disabled:!i,title:s,"aria-label":s},r.createElement(v,{className:(0,a.Z)(B.toggleIcon,B.lightToggleIcon)}),r.createElement(V,{className:(0,a.Z)(B.toggleIcon,B.darkToggleIcon)})))}var K=r.memo(Y);function G(e){var t=e.className,n=(0,O.L)().colorMode.disableSwitch,a=(0,y.I)(),_=a.colorMode,i=a.setColorMode;return n?null:r.createElement(K,{className:t,value:_,onChange:i})}var q=n(21327);function k(){return r.createElement(q.Z,{className:"navbar__brand",imageClassName:"navbar__logo",titleClassName:"navbar__title text--truncate"})}function x(){var e=(0,U.e)();return r.createElement("button",{type:"button",className:"clean-btn navbar-sidebar__close",onClick:function(){return e.toggle()}},r.createElement(h,{color:"var(--ifm-color-emphasis-600)"}))}function H(){return r.createElement("div",{className:"navbar-sidebar__brand"},r.createElement(k,null),r.createElement(G,{className:"margin-right--md"}),r.createElement(x,null))}var Q=n(39960),j=n(44996),W=n(13919);function z(e,t){return void 0!==e&&void 0!==t&&new RegExp(e,"gi").test(t)}var Z=n(38483),$=["activeBasePath","activeBaseRegex","to","href","label","html","isDropdownLink","prependBaseUrlToHref"];function J(e){var t=e.activeBasePath,n=e.activeBaseRegex,a=e.to,_=e.href,i=e.label,s=e.html,E=e.isDropdownLink,o=e.prependBaseUrlToHref,T=(0,l.Z)(e,$),d=(0,j.Z)(a),I=(0,j.Z)(t),u=(0,j.Z)(_,{forcePrependBaseUrl:!0}),N=i&&_&&!(0,W.Z)(_),R=s?{dangerouslySetInnerHTML:{__html:s}}:{children:r.createElement(r.Fragment,null,i,N&&r.createElement(Z.Z,E&&{width:12,height:12}))};return _?r.createElement(Q.Z,(0,A.Z)({href:o?u:_},T,R)):r.createElement(Q.Z,(0,A.Z)({to:d,isNavLink:!0},(t||n)&&{isActive:function(e,t){return n?z(n,t.pathname):t.pathname.startsWith(I)}},T,R))}var ee=["className","isDropdownItem"],te=["className","isDropdownItem"],ne=["mobile","position"];function re(e){var t=e.className,n=e.isDropdownItem,_=void 0!==n&&n,i=(0,l.Z)(e,ee),s=r.createElement(J,(0,A.Z)({className:(0,a.Z)(_?"dropdown__link":"navbar__item navbar__link",t),isDropdownLink:_},i));return _?r.createElement("li",null,s):s}function ae(e){var t=e.className,n=(e.isDropdownItem,(0,l.Z)(e,te));return r.createElement("li",{className:"menu__list-item"},r.createElement(J,(0,A.Z)({className:(0,a.Z)("menu__link",t)},n)))}function _e(e){var t,n=e.mobile,a=void 0!==n&&n,_=(e.position,(0,l.Z)(e,ne)),i=a?ae:re;return r.createElement(i,(0,A.Z)({},_,{activeClassName:null!=(t=_.activeClassName)?t:a?"menu__link--active":"navbar__link--active"}))}var ie=n(48596),se=n(52263);var Ee=n(86043),oe=["items","position","className","onClick"],Te=["items","className","position","onClick"],de=["mobile"];function Ie(e,t){return e.some((function(e){return function(e,t){return!!(0,ie.Mg)(e.to,t)||!!z(e.activeBaseRegex,t)||!(!e.activeBasePath||!t.startsWith(e.activeBasePath))}(e,t)}))}function ue(e){var t,n=e.items,_=e.position,i=e.className,s=(e.onClick,(0,l.Z)(e,oe)),E=(0,r.useRef)(null),o=(0,r.useState)(!1),T=o[0],d=o[1];return(0,r.useEffect)((function(){var e=function(e){E.current&&!E.current.contains(e.target)&&d(!1)};return document.addEventListener("mousedown",e),document.addEventListener("touchstart",e),function(){document.removeEventListener("mousedown",e),document.removeEventListener("touchstart",e)}}),[E]),r.createElement("div",{ref:E,className:(0,a.Z)("navbar__item","dropdown","dropdown--hoverable",{"dropdown--right":"right"===_,"dropdown--show":T})},r.createElement(J,(0,A.Z)({"aria-haspopup":"true","aria-expanded":T,role:"button",href:s.to?void 0:"#",className:(0,a.Z)("navbar__link",i)},s,{onClick:s.to?void 0:function(e){return e.preventDefault()},onKeyDown:function(e){"Enter"===e.key&&(e.preventDefault(),d(!T))}}),null!=(t=s.children)?t:s.label),r.createElement("ul",{className:"dropdown__menu"},n.map((function(e,t){return r.createElement(be,(0,A.Z)({isDropdownItem:!0,onKeyDown:function(e){if(t===n.length-1&&"Tab"===e.key){e.preventDefault(),d(!1);var r=E.current.nextElementSibling;if(r)(r instanceof HTMLAnchorElement?r:r.querySelector("a")).focus()}},activeClassName:"dropdown__link--active"},e,{key:t}))}))))}function Ne(e){var t,n,_=e.items,i=e.className,s=(e.position,e.onClick),E=(0,l.Z)(e,Te),o=(n=(0,se.Z)().siteConfig.baseUrl,(0,T.TH)().pathname.replace(n,"/")),d=Ie(_,o),I=(0,Ee.u)({initialState:function(){return!d}}),u=I.collapsed,N=I.toggleCollapsed,R=I.setCollapsed;return(0,r.useEffect)((function(){d&&R(!d)}),[o,d,R]),r.createElement("li",{className:(0,a.Z)("menu__list-item",{"menu__list-item--collapsed":u})},r.createElement(J,(0,A.Z)({role:"button",className:(0,a.Z)("menu__link menu__link--sublist menu__link--sublist-caret",i)},E,{onClick:function(e){e.preventDefault(),N()}}),null!=(t=E.children)?t:E.label),r.createElement(Ee.z,{lazy:!0,as:"ul",className:"menu__list",collapsed:u},_.map((function(e,t){return r.createElement(be,(0,A.Z)({mobile:!0,isDropdownItem:!0,onClick:s,activeClassName:"menu__link--active"},e,{key:t}))}))))}function Re(e){var t=e.mobile,n=void 0!==t&&t,a=(0,l.Z)(e,de),_=n?Ne:ue;return r.createElement(_,a)}var Oe=n(94711),Ae=["width","height"];function le(e){var t=e.width,n=void 0===t?20:t,a=e.height,_=void 0===a?20:a,i=(0,l.Z)(e,Ae);return r.createElement("svg",(0,A.Z)({viewBox:"0 0 24 24",width:n,height:_,"aria-hidden":!0},i),r.createElement("path",{fill:"currentColor",d:"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"}))}var De="iconLanguage_nlXk",he=["mobile","dropdownItemsBefore","dropdownItemsAfter"];var Se=function(){return null},pe="searchBox_ZlJk";function ce(e){var t=e.children,n=e.className;return r.createElement("div",{className:(0,a.Z)(n,pe)},t)}var Pe=n(94104),Ce=n(53791),Ue=["docId","label","docsPluginId"];var fe=["sidebarId","label","docsPluginId"];var me=["label","to","docsPluginId"];var Le=n(60373),Fe=["mobile","docsPluginId","dropdownActiveClassDisabled","dropdownItemsBefore","dropdownItemsAfter"],Me=function(e){return e.docs.find((function(t){return t.id===e.mainDocId}))};var we={default:_e,localeDropdown:function(e){var t=e.mobile,n=e.dropdownItemsBefore,a=e.dropdownItemsAfter,_=(0,l.Z)(e,he),i=(0,se.Z)().i18n,s=i.currentLocale,E=i.locales,T=i.localeConfigs,d=(0,Oe.l)(),I=E.map((function(e){var n="pathname://"+d.createUrl({locale:e,fullyQualified:!1});return{label:T[e].label,to:n,target:"_self",autoAddBaseUrl:!1,className:e===s?t?"menu__link--active":"dropdown__link--active":""}})),u=[].concat(n,I,a),N=t?(0,o.I)({message:"Languages",id:"theme.navbar.mobileLanguageDropdown.label",description:"The label for the mobile language switcher dropdown"}):T[s].label;return r.createElement(Re,(0,A.Z)({},_,{mobile:t,label:r.createElement(r.Fragment,null,r.createElement(le,{className:De}),N),items:u}))},search:function(e){var t=e.mobile,n=e.className;return t?null:r.createElement(ce,{className:n},r.createElement(Se,null))},dropdown:Re,html:function(e){var t=e.value,n=e.className,_=e.mobile,i=void 0!==_&&_,s=e.isDropdownItem,E=void 0!==s&&s,o=E?"li":"div";return r.createElement(o,{className:(0,a.Z)({navbar__item:!i&&!E,"menu__list-item":i},n),dangerouslySetInnerHTML:{__html:t}})},doc:function(e){var t=e.docId,n=e.label,a=e.docsPluginId,_=(0,l.Z)(e,Ue),i=(0,Pe.Iw)(a).activeDoc,s=(0,Ce.vY)(t,a);return null===s?null:r.createElement(_e,(0,A.Z)({exact:!0},_,{isActive:function(){return(null==i?void 0:i.path)===s.path||!(null==i||!i.sidebar)&&i.sidebar===s.sidebar},label:null!=n?n:s.id,to:s.path}))},docSidebar:function(e){var t=e.sidebarId,n=e.label,a=e.docsPluginId,_=(0,l.Z)(e,fe),i=(0,Pe.Iw)(a).activeDoc,s=(0,Ce.oz)(t,a).link;if(!s)throw new Error('DocSidebarNavbarItem: Sidebar with ID "'+t+"\" doesn't have anything to be linked to.");return r.createElement(_e,(0,A.Z)({exact:!0},_,{isActive:function(){return(null==i?void 0:i.sidebar)===t},label:null!=n?n:s.label,to:s.path}))},docsVersion:function(e){var t=e.label,n=e.to,a=e.docsPluginId,_=(0,l.Z)(e,me),i=(0,Ce.lO)(a)[0],s=null!=t?t:i.label,E=null!=n?n:function(e){return e.docs.find((function(t){return t.id===e.mainDocId}))}(i).path;return r.createElement(_e,(0,A.Z)({},_,{label:s,to:E}))},docsVersionDropdown:function(e){var t=e.mobile,n=e.docsPluginId,a=e.dropdownActiveClassDisabled,_=e.dropdownItemsBefore,i=e.dropdownItemsAfter,s=(0,l.Z)(e,Fe),E=(0,Pe.Iw)(n),T=(0,Pe.gB)(n),d=(0,Le.J)(n).savePreferredVersionName,I=T.map((function(e){var t,n=null!=(t=E.alternateDocVersions[e.name])?t:Me(e);return{label:e.label,to:n.path,isActive:function(){return e===E.activeVersion},onClick:function(){return d(e.name)}}})),u=[].concat(_,I,i),N=(0,Ce.lO)(n)[0],R=t&&u.length>1?(0,o.I)({id:"theme.navbar.mobileVersionsDropdown.label",message:"Versions",description:"The label for the navbar versions dropdown on mobile view"}):N.label,O=t&&u.length>1?void 0:Me(N).path;return u.length<=1?r.createElement(_e,(0,A.Z)({},s,{mobile:t,label:R,to:O,isActive:a?function(){return!1}:void 0})):r.createElement(Re,(0,A.Z)({},s,{mobile:t,label:R,to:O,items:u,isActive:a?function(){return!1}:void 0}))}},ge=["type"];function be(e){var t=e.type,n=(0,l.Z)(e,ge),a=function(e,t){return e&&"default"!==e?e:"items"in t?"dropdown":"default"}(t,n),_=we[a];if(!_)throw new Error('No NavbarItem component found for type "'+t+'".');return r.createElement(_,n)}function ye(){var e=(0,U.e)(),t=(0,O.L)().navbar.items;return r.createElement("ul",{className:"menu__list"},t.map((function(t,n){return r.createElement(be,(0,A.Z)({mobile:!0},t,{onClick:function(){return e.toggle()},key:n}))})))}function Xe(e){return r.createElement("button",(0,A.Z)({},e,{type:"button",className:"clean-btn navbar-sidebar__back"}),r.createElement(o.Z,{id:"theme.navbar.mobileSidebarSecondaryMenu.backButtonLabel",description:"The label of the back button to return to main menu, inside the mobile navbar sidebar secondary menu (notably used to display the docs sidebar)"},"\u2190 Back to main menu"))}function ve(){var e=0===(0,O.L)().navbar.items.length,t=g();return r.createElement(r.Fragment,null,!e&&r.createElement(Xe,{onClick:function(){return t.hide()}}),t.content)}function Ve(){var e,t=(0,U.e)();return void 0===(e=t.shown)&&(e=!0),(0,r.useEffect)((function(){return document.body.style.overflow=e?"hidden":"visible",function(){document.body.style.overflow="visible"}}),[e]),t.shouldRender?r.createElement(b,{header:r.createElement(H,null),primaryMenu:r.createElement(ye,null),secondaryMenu:r.createElement(ve,null)}):null}var Be="navbarHideable_m1mJ",Ye="navbarHidden_jGov";function Ke(e){return r.createElement("div",(0,A.Z)({role:"presentation"},e,{className:(0,a.Z)("navbar-sidebar__backdrop",e.className)}))}function Ge(e){var t=e.children,n=(0,O.L)().navbar,_=n.hideOnScroll,i=n.style,s=(0,U.e)(),E=function(e){var t=(0,r.useState)(e),n=t[0],a=t[1],_=(0,r.useRef)(!1),i=(0,r.useRef)(0),s=(0,r.useCallback)((function(e){null!==e&&(i.current=e.getBoundingClientRect().height)}),[]);return(0,f.RF)((function(t,n){var r=t.scrollY;if(e)if(r<i.current)a(!0);else if(_.current)_.current=!1;else{var s=null==n?void 0:n.scrollY,E=document.documentElement.scrollHeight-i.current,o=window.innerHeight;s&&r>=s?a(!1):r+o<E&&a(!0)}})),(0,d.S)((function(t){if(e)return t.location.hash?(_.current=!0,void a(!1)):void a(!0)})),{navbarRef:s,isNavbarVisible:n}}(_),o=E.navbarRef,T=E.isNavbarVisible;return r.createElement("nav",{ref:o,className:(0,a.Z)("navbar","navbar--fixed-top",_&&[Be,!T&&Ye],{"navbar--dark":"dark"===i,"navbar--primary":"primary"===i,"navbar-sidebar--show":s.shown})},t,r.createElement(Ke,{onClick:s.toggle}),r.createElement(Ve,null))}function qe(e){var t=e.children;return r.createElement(L.n2,null,r.createElement(U.M,null,r.createElement(M,null,t)))}var ke=["width","height","className"];function xe(e){var t=e.width,n=void 0===t?30:t,a=e.height,_=void 0===a?30:a,i=e.className,s=(0,l.Z)(e,ke);return r.createElement("svg",(0,A.Z)({className:i,width:n,height:_,viewBox:"0 0 30 30","aria-hidden":"true"},s),r.createElement("path",{stroke:"currentColor",strokeLinecap:"round",strokeMiterlimit:"10",strokeWidth:"2",d:"M4 7h22M4 15h22M4 23h22"}))}function He(){var e=(0,U.e)();return r.createElement("button",{onClick:e.toggle,onKeyDown:e.toggle,"aria-label":"Navigation bar toggle",className:"navbar__toggle clean-btn",type:"button",tabIndex:0},r.createElement(xe,null))}var Qe="colorModeToggle_DEke";function je(e){var t=e.items;return r.createElement(r.Fragment,null,t.map((function(e,t){return r.createElement(be,(0,A.Z)({},e,{key:t}))})))}function We(e){var t=e.left,n=e.right;return r.createElement("div",{className:"navbar__inner"},r.createElement("div",{className:"navbar__items"},t),r.createElement("div",{className:"navbar__items navbar__items--right"},n))}function ze(){var e=(0,U.e)(),t=(0,O.L)().navbar.items,n=function(e){function t(e){var t;return"left"===(null!=(t=e.position)?t:"right")}return[e.filter(t),e.filter((function(e){return!t(e)}))]}(t),a=n[0],_=n[1],i=t.find((function(e){return"search"===e.type}));return r.createElement(We,{left:r.createElement(r.Fragment,null,!e.disabled&&r.createElement(He,null),r.createElement(k,null),r.createElement(je,{items:a})),right:r.createElement(r.Fragment,null,r.createElement(je,{items:_}),r.createElement(G,{className:Qe}),!i&&r.createElement(ce,null,r.createElement(Se,null)))})}function Ze(){return r.createElement(Ge,null,r.createElement(ze,null))}var $e=["to","href","label","prependBaseUrlToHref"];function Je(e){var t=e.item,n=t.to,a=t.href,_=t.label,i=t.prependBaseUrlToHref,s=(0,l.Z)(t,$e),E=(0,j.Z)(n),o=(0,j.Z)(a,{forcePrependBaseUrl:!0});return r.createElement(Q.Z,(0,A.Z)({className:"footer__link-item"},a?{href:i?o:a}:{to:E},s),_,a&&!(0,W.Z)(a)&&r.createElement(Z.Z,null))}function et(e){var t,n=e.item;return n.html?r.createElement("li",{className:"footer__item",dangerouslySetInnerHTML:{__html:n.html}}):r.createElement("li",{key:null!=(t=n.href)?t:n.to,className:"footer__item"},r.createElement(Je,{item:n}))}function tt(e){var t=e.column;return r.createElement("div",{className:"col footer__col"},r.createElement("div",{className:"footer__title"},t.title),r.createElement("ul",{className:"footer__items clean-list"},t.items.map((function(e,t){return r.createElement(et,{key:t,item:e})}))))}function nt(e){var t=e.columns;return r.createElement("div",{className:"row footer__links"},t.map((function(e,t){return r.createElement(tt,{key:t,column:e})})))}function rt(){return r.createElement("span",{className:"footer__link-separator"},"\xb7")}function at(e){var t=e.item;return t.html?r.createElement("span",{className:"footer__link-item",dangerouslySetInnerHTML:{__html:t.html}}):r.createElement(Je,{item:t})}function _t(e){var t=e.links;return r.createElement("div",{className:"footer__links text--center"},r.createElement("div",{className:"footer__links"},t.map((function(e,n){return r.createElement(r.Fragment,{key:n},r.createElement(at,{item:e}),t.length!==n+1&&r.createElement(rt,null))}))))}function it(e){var t=e.links;return function(e){return"title"in e[0]}(t)?r.createElement(nt,{columns:t}):r.createElement(_t,{links:t})}var st=n(50941),Et="footerLogoLink_BH7S";function ot(e){var t,n=e.logo,a=(0,j.C)().withBaseUrl,_={light:a(n.src),dark:a(null!=(t=n.srcDark)?t:n.src)};return r.createElement(st.Z,{className:"footer__logo",alt:n.alt,sources:_,width:n.width,height:n.height})}function Tt(e){var t=e.logo;return t.href?r.createElement(Q.Z,{href:t.href,className:Et},r.createElement(ot,{logo:t})):r.createElement(ot,{logo:t})}function dt(e){var t=e.copyright;return r.createElement("div",{className:"footer__copyright",dangerouslySetInnerHTML:{__html:t}})}function It(e){var t=e.style,n=e.links,_=e.logo,i=e.copyright;return r.createElement("footer",{className:(0,a.Z)("footer",{"footer--dark":"dark"===t})},r.createElement("div",{className:"container container-fluid"},n,(_||i)&&r.createElement("div",{className:"footer__bottom text--center"},_&&r.createElement("div",{className:"margin-bottom--sm"},_),i)))}function ut(){var e=(0,O.L)().footer;if(!e)return null;var t=e.copyright,n=e.links,a=e.logo,_=e.style;return r.createElement(It,{style:_,links:n&&n.length>0&&r.createElement(it,{links:n}),logo:a&&r.createElement(Tt,{logo:a}),copyright:t&&r.createElement(dt,{copyright:t})})}var Nt=r.memo(ut),Rt=n(7094);function Ot(e){var t=e.children;return r.createElement(y.S,null,r.createElement(R.pl,null,r.createElement(Rt.z,null,r.createElement(f.OC,null,r.createElement(Le.L5,null,r.createElement(s.VC,null,r.createElement(qe,null,t)))))))}function At(e){var t=e.error,n=e.tryAgain;return r.createElement("main",{className:"container margin-vert--xl"},r.createElement("div",{className:"row"},r.createElement("div",{className:"col col--6 col--offset-3"},r.createElement("h1",{className:"hero__title"},r.createElement(o.Z,{id:"theme.ErrorPageContent.title",description:"The title of the fallback page when the page crashed"},"This page crashed.")),r.createElement("p",null,t.message),r.createElement("div",null,r.createElement("button",{type:"button",onClick:n},r.createElement(o.Z,{id:"theme.ErrorPageContent.tryAgain",description:"The label of the button to try again when the page crashed"},"Try again"))))))}function lt(e){var t=e.children,n=e.noFooter,o=e.wrapperClassName,T=e.title,d=e.description;return(0,i.t)(),r.createElement(Ot,null,r.createElement(s.d,{title:T,description:d}),r.createElement(N,null),r.createElement(C,null),r.createElement(Ze,null),r.createElement("div",{className:(0,a.Z)(E.k.wrapper.main,o)},r.createElement(_.Z,{fallback:function(e){return r.createElement(At,e)}},t)),!n&&r.createElement(Nt,null))}},21327:function(e,t,n){"use strict";n.d(t,{Z:function(){return I}});var r=n(87462),a=n(63366),_=n(67294),i=n(39960),s=n(44996),E=n(52263),o=n(86668),T=n(50941),d=["imageClassName","titleClassName"];function I(e){var t=(0,E.Z)().siteConfig.title,n=(0,o.L)().navbar,I=n.title,u=n.logo,N=void 0===u?{src:""}:u,R=e.imageClassName,O=e.titleClassName,A=(0,a.Z)(e,d),l=(0,s.Z)(N.href||"/"),D={light:(0,s.Z)(N.src),dark:(0,s.Z)(N.srcDark||N.src)},h=_.createElement(T.Z,{sources:D,height:N.height,width:N.width,alt:N.alt||I||t});return _.createElement(i.Z,(0,r.Z)({to:l},A,N.target&&{target:N.target}),N.src&&(R?_.createElement("div",{className:R},h):h),null!=I&&_.createElement("b",{className:O},I))}},90197:function(e,t,n){"use strict";n.d(t,{Z:function(){return _}});var r=n(67294),a=n(35742);function _(e){var t=e.locale,n=e.version,_=e.tag,i=t;return r.createElement(a.Z,null,t&&r.createElement("meta",{name:"docusaurus_locale",content:t}),n&&r.createElement("meta",{name:"docusaurus_version",content:n}),_&&r.createElement("meta",{name:"docusaurus_tag",content:_}),i&&r.createElement("meta",{name:"docsearch:language",content:i}),n&&r.createElement("meta",{name:"docsearch:version",content:n}),_&&r.createElement("meta",{name:"docsearch:docusaurus_tag",content:_}))}},50941:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var r=n(87462),a=n(63366),_=n(67294),i=n(86010),s=n(72389),E=n(92949),o={themedImage:"themedImage_ToTc","themedImage--light":"themedImage--light_HNdA","themedImage--dark":"themedImage--dark_i4oU"},T=["sources","className","alt"];function d(e){var t=(0,s.Z)(),n=(0,E.I)().colorMode,d=e.sources,I=e.className,u=e.alt,N=(0,a.Z)(e,T),R=t?"dark"===n?["dark"]:["light"]:["light","dark"];return _.createElement(_.Fragment,null,R.map((function(e){return _.createElement("img",(0,r.Z)({key:e,src:d[e],alt:u,className:(0,i.Z)(o.themedImage,o["themedImage--"+e],I)},N))})))}},86043:function(e,t,n){"use strict";n.d(t,{u:function(){return o},z:function(){return A}});var r=n(87462),a=n(63366),_=n(67294),i=n(10412),s=["collapsed"],E=["lazy"];function o(e){var t=e.initialState,n=(0,_.useState)(null!=t&&t),r=n[0],a=n[1],i=(0,_.useCallback)((function(){a((function(e){return!e}))}),[]);return{collapsed:r,setCollapsed:a,toggleCollapsed:i}}var T={display:"none",overflow:"hidden",height:"0px"},d={display:"block",overflow:"visible",height:"auto"};function I(e,t){var n=t?T:d;e.style.display=n.display,e.style.overflow=n.overflow,e.style.height=n.height}function u(e){var t=e.collapsibleRef,n=e.collapsed,r=e.animation,a=(0,_.useRef)(!1);(0,_.useEffect)((function(){var e,_=t.current;function i(){var e,t,n=_.scrollHeight,a=null!=(e=null==r?void 0:r.duration)?e:function(e){var t=e/36;return Math.round(10*(4+15*Math.pow(t,.25)+t/5))}(n);return{transition:"height "+a+"ms "+(null!=(t=null==r?void 0:r.easing)?t:"ease-in-out"),height:n+"px"}}function s(){var e=i();_.style.transition=e.transition,_.style.height=e.height}if(!a.current)return I(_,n),void(a.current=!0);return _.style.willChange="height",e=requestAnimationFrame((function(){n?(s(),requestAnimationFrame((function(){_.style.height=T.height,_.style.overflow=T.overflow}))):(_.style.display="block",requestAnimationFrame((function(){s()})))})),function(){return cancelAnimationFrame(e)}}),[t,n,r])}function N(e){if(!i.default.canUseDOM)return e?T:d}function R(e){var t=e.as,n=void 0===t?"div":t,r=e.collapsed,a=e.children,i=e.animation,s=e.onCollapseTransitionEnd,E=e.className,o=e.disableSSRStyle,T=(0,_.useRef)(null);return u({collapsibleRef:T,collapsed:r,animation:i}),_.createElement(n,{ref:T,style:o?void 0:N(r),onTransitionEnd:function(e){"height"===e.propertyName&&(I(T.current,r),null==s||s(r))},className:E},a)}function O(e){var t=e.collapsed,n=(0,a.Z)(e,s),i=(0,_.useState)(!t),E=i[0],o=i[1],T=(0,_.useState)(t),d=T[0],I=T[1];return(0,_.useLayoutEffect)((function(){t||o(!0)}),[t]),(0,_.useLayoutEffect)((function(){E&&I(t)}),[E,t]),E?_.createElement(R,(0,r.Z)({},n,{collapsed:d})):null}function A(e){var t=e.lazy,n=(0,a.Z)(e,E),r=t?O:R;return _.createElement(r,n)}},59689:function(e,t,n){"use strict";n.d(t,{nT:function(){return N},pl:function(){return u}});var r=n(67294),a=n(72389),_=n(50012),i=n(902),s=n(86668),E=(0,_.W)("docusaurus.announcement.dismiss"),o=(0,_.W)("docusaurus.announcement.id"),T=function(){return"true"===E.get()},d=function(e){return E.set(String(e))},I=r.createContext(null);function u(e){var t=e.children,n=function(){var e=(0,s.L)().announcementBar,t=(0,a.Z)(),n=(0,r.useState)((function(){return!!t&&T()})),_=n[0],i=n[1];(0,r.useEffect)((function(){i(T())}),[]);var E=(0,r.useCallback)((function(){d(!0),i(!0)}),[]);return(0,r.useEffect)((function(){if(e){var t=e.id,n=o.get();"annoucement-bar"===n&&(n="announcement-bar");var r=t!==n;o.set(t),r&&d(!1),!r&&T()||i(!1)}}),[e]),(0,r.useMemo)((function(){return{isActive:!!e&&!_,close:E}}),[e,_,E])}();return r.createElement(I.Provider,{value:n},t)}function N(){var e=(0,r.useContext)(I);if(!e)throw new i.i6("AnnouncementBarProvider");return e}},92949:function(e,t,n){"use strict";n.d(t,{I:function(){return O},S:function(){return R}});var r=n(67294),a=n(10412),_=n(902),i=n(50012),s=n(86668),E=r.createContext(void 0),o="theme",T=(0,i.W)(o),d="light",I="dark",u=function(e){return e===I?I:d};function N(){var e=(0,s.L)().colorMode,t=e.defaultMode,n=e.disableSwitch,_=e.respectPrefersColorScheme,i=(0,r.useState)(function(e){return a.default.canUseDOM?u(document.documentElement.getAttribute("data-theme")):u(e)}(t)),E=i[0],N=i[1];(0,r.useEffect)((function(){n&&T.del()}),[n]);var R=(0,r.useCallback)((function(e,n){void 0===n&&(n={});var r=n.persist,a=void 0===r||r;e?(N(e),a&&function(e){T.set(u(e))}(e)):(N(_?window.matchMedia("(prefers-color-scheme: dark)").matches?I:d:t),T.del())}),[_,t]);(0,r.useEffect)((function(){document.documentElement.setAttribute("data-theme",u(E))}),[E]),(0,r.useEffect)((function(){if(!n){var e=function(e){if(e.key===o){var t=T.get();null!==t&&R(u(t))}};return window.addEventListener("storage",e),function(){return window.removeEventListener("storage",e)}}}),[n,R]);var O=(0,r.useRef)(!1);return(0,r.useEffect)((function(){if(!n||_){var e=window.matchMedia("(prefers-color-scheme: dark)"),t=function(){window.matchMedia("print").matches||O.current?O.current=window.matchMedia("print").matches:R(null)};return e.addListener(t),function(){return e.removeListener(t)}}}),[R,n,_]),(0,r.useMemo)((function(){return{colorMode:E,setColorMode:R,get isDarkTheme(){return E===I},setLightTheme:function(){R(d)},setDarkTheme:function(){R(I)}}}),[E,R])}function R(e){var t=e.children,n=N();return r.createElement(E.Provider,{value:n},t)}function O(){var e=(0,r.useContext)(E);if(null==e)throw new _.i6("ColorModeProvider","Please see https://docusaurus.io/docs/api/themes/configuration#use-color-mode.");return e}},60373:function(e,t,n){"use strict";n.d(t,{J:function(){return D},L5:function(){return A}});var r=n(67294),a=n(94104),_=n(29935),i=n(86668),s=n(53791),E=n(902),o=n(50012),T=function(e){return"docs-preferred-version-"+e},d=function(e,t,n){(0,o.W)(T(e),{persistence:t}).set(n)},I=function(e,t){return(0,o.W)(T(e),{persistence:t}).get()},u=function(e,t){(0,o.W)(T(e),{persistence:t}).del()};var N=r.createContext(null);function R(){var e=(0,a._r)(),t=(0,i.L)().docs.versionPersistence,n=(0,r.useMemo)((function(){return Object.keys(e)}),[e]),_=(0,r.useState)((function(){return function(e){return Object.fromEntries(e.map((function(e){return[e,{preferredVersionName:null}]})))}(n)})),s=_[0],E=_[1];return(0,r.useEffect)((function(){E(function(e){var t=e.pluginIds,n=e.versionPersistence,r=e.allDocsData;return Object.fromEntries(t.map((function(e){return[e,(t=e,a=I(t,n),r[t].versions.some((function(e){return e.name===a}))?{preferredVersionName:a}:(u(t,n),{preferredVersionName:null}))];var t,a})))}({allDocsData:e,versionPersistence:t,pluginIds:n}))}),[e,t,n]),[s,(0,r.useMemo)((function(){return{savePreferredVersion:function(e,n){d(e,t,n),E((function(t){var r;return Object.assign({},t,((r={})[e]={preferredVersionName:n},r))}))}}}),[t])]}function O(e){var t=e.children,n=R();return r.createElement(N.Provider,{value:n},t)}function A(e){var t=e.children;return s.cE?r.createElement(O,null,t):t}function l(){var e=(0,r.useContext)(N);if(!e)throw new E.i6("DocsPreferredVersionContextProvider");return e}function D(e){var t;void 0===e&&(e=_.m);var n=(0,a.zh)(e),i=l(),s=i[0],E=i[1],o=s[e].preferredVersionName;return{preferredVersion:null!=(t=n.versions.find((function(e){return e.name===o})))?t:null,savePreferredVersionName:(0,r.useCallback)((function(t){E.savePreferredVersion(e,t)}),[E,e])}}},1116:function(e,t,n){"use strict";n.d(t,{V:function(){return E},b:function(){return s}});var r=n(67294),a=n(902),_=Symbol("EmptyContext"),i=r.createContext(_);function s(e){var t=e.children,n=e.name,a=e.items,_=(0,r.useMemo)((function(){return n&&a?{name:n,items:a}:null}),[n,a]);return r.createElement(i.Provider,{value:_},t)}function E(){var e=(0,r.useContext)(i);if(e===_)throw new a.i6("DocsSidebarProvider");return e}},72961:function(e,t,n){"use strict";n.d(t,{M:function(){return I},e:function(){return u}});var r=n(67294),a=n(13102),_=n(87524),i=n(76775),s=n(902);function E(e){!function(e){var t=(0,i.k6)().block,n=(0,s.ed)(e);(0,r.useEffect)((function(){return t((function(e,t){return n(e,t)}))}),[t,n])}((function(t,n){if("POP"===n)return e(t,n)}))}var o=n(86668),T=r.createContext(void 0);function d(){var e,t=(e=(0,a.HY)(),0===(0,o.L)().navbar.items.length&&!e.component),n=(0,_.i)(),i=!t&&"mobile"===n,s=(0,r.useState)(!1),T=s[0],d=s[1];E((function(){if(T)return d(!1),!1}));var I=(0,r.useCallback)((function(){d((function(e){return!e}))}),[]);return(0,r.useEffect)((function(){"desktop"===n&&d(!1)}),[n]),(0,r.useMemo)((function(){return{disabled:t,shouldRender:i,toggle:I,shown:T}}),[t,i,I,T])}function I(e){var t=e.children,n=d();return r.createElement(T.Provider,{value:n},t)}function u(){var e=r.useContext(T);if(void 0===e)throw new s.i6("NavbarMobileSidebarProvider");return e}},13102:function(e,t,n){"use strict";n.d(t,{HY:function(){return s},Zo:function(){return E},n2:function(){return i}});var r=n(67294),a=n(902),_=r.createContext(null);function i(e){var t=e.children,n=(0,r.useState)({component:null,props:null});return r.createElement(_.Provider,{value:n},t)}function s(){var e=(0,r.useContext)(_);if(!e)throw new a.i6("NavbarSecondaryMenuContentProvider");return e[0]}function E(e){var t=e.component,n=e.props,i=(0,r.useContext)(_);if(!i)throw new a.i6("NavbarSecondaryMenuContentProvider");var s,E=i[1],o=(s=n,(0,r.useMemo)((function(){return s}),[].concat(Object.keys(s),Object.values(s))));return(0,r.useEffect)((function(){E({component:t,props:o})}),[E,t,o]),(0,r.useEffect)((function(){return function(){return E({component:null,props:null})}}),[E]),null}},7094:function(e,t,n){"use strict";n.d(t,{U:function(){return o},z:function(){return E}});var r=n(67294),a=n(50012),_=n(902),i="docusaurus.tab.",s=r.createContext(void 0);function E(e){var t=e.children,n=function(){var e=(0,r.useState)({}),t=e[0],n=e[1],_=(0,r.useCallback)((function(e,t){(0,a.W)("docusaurus.tab."+e).set(t)}),[]);(0,r.useEffect)((function(){try{var e={};(0,a._)().forEach((function(t){if(t.startsWith(i)){var n=t.substring(i.length);e[n]=(0,a.W)(t).get()}})),n(e)}catch(t){console.error(t)}}),[]);var s=(0,r.useCallback)((function(e,t){n((function(n){var r;return Object.assign({},n,((r={})[e]=t,r))})),_(e,t)}),[_]);return(0,r.useMemo)((function(){return{tabGroupChoices:t,setTabGroupChoices:s}}),[t,s])}();return r.createElement(s.Provider,{value:n},t)}function o(){var e=(0,r.useContext)(s);if(null==e)throw new _.i6("TabGroupChoiceProvider");return e}},19727:function(e,t,n){"use strict";n.d(t,{h:function(){return a},t:function(){return _}});var r=n(67294),a="navigation-with-keyboard";function _(){(0,r.useEffect)((function(){function e(e){"keydown"===e.type&&"Tab"===e.key&&document.body.classList.add(a),"mousedown"===e.type&&document.body.classList.remove(a)}return document.addEventListener("keydown",e),document.addEventListener("mousedown",e),function(){document.body.classList.remove(a),document.removeEventListener("keydown",e),document.removeEventListener("mousedown",e)}}),[])}},87524:function(e,t,n){"use strict";n.d(t,{i:function(){return o}});var r=n(67294),a=n(10412),_="desktop",i="mobile",s="ssr";function E(){return a.default.canUseDOM?window.innerWidth>996?_:i:s}function o(){var e=(0,r.useState)((function(){return E()})),t=e[0],n=e[1];return(0,r.useEffect)((function(){function e(){n(E())}return window.addEventListener("resize",e),function(){window.removeEventListener("resize",e),clearTimeout(undefined)}}),[]),t}},35281:function(e,t,n){"use strict";n.d(t,{k:function(){return r}});var r={page:{blogListPage:"blog-list-page",blogPostPage:"blog-post-page",blogTagsListPage:"blog-tags-list-page",blogTagPostListPage:"blog-tags-post-list-page",docsDocPage:"docs-doc-page",docsTagsListPage:"docs-tags-list-page",docsTagDocListPage:"docs-tags-doc-list-page",mdxPage:"mdx-page"},wrapper:{main:"main-wrapper",blogPages:"blog-wrapper",docsPages:"docs-wrapper",mdxPages:"mdx-wrapper"},common:{editThisPage:"theme-edit-this-page",lastUpdated:"theme-last-updated",backToTopButton:"theme-back-to-top-button",codeBlock:"theme-code-block"},layout:{},docs:{docVersionBanner:"theme-doc-version-banner",docVersionBadge:"theme-doc-version-badge",docBreadcrumbs:"theme-doc-breadcrumbs",docMarkdown:"theme-doc-markdown",docTocMobile:"theme-doc-toc-mobile",docTocDesktop:"theme-doc-toc-desktop",docFooter:"theme-doc-footer",docFooterTagsRow:"theme-doc-footer-tags-row",docFooterEditMetaRow:"theme-doc-footer-edit-meta-row",docSidebarContainer:"theme-doc-sidebar-container",docSidebarMenu:"theme-doc-sidebar-menu",docSidebarItemCategory:"theme-doc-sidebar-item-category",docSidebarItemLink:"theme-doc-sidebar-item-link",docSidebarItemCategoryLevel:function(e){return"theme-doc-sidebar-item-category-level-"+e},docSidebarItemLinkLevel:function(e){return"theme-doc-sidebar-item-link-level-"+e}},blog:{}}},53791:function(e,t,n){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function a(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var a=0;return function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}n.d(t,{Wl:function(){return N},_F:function(){return O},cE:function(){return u},hI:function(){return S},lO:function(){return l},vY:function(){return h},oz:function(){return D},s1:function(){return A}});var _=n(67294),i=n(76775),s=n(18790),E=n(94104),o=n(60373),T=n(1116),d=n(67392),I=n(48596),u=!!E._r;function N(e){if(e.href)return e.href;for(var t,n=a(e.items);!(t=n()).done;){var r=t.value;if("link"===r.type)return r.href;if("category"===r.type){var _=N(r);if(_)return _}}}var R=function(e,t){return void 0!==e&&(0,I.Mg)(e,t)};function O(e,t){return"link"===e.type?R(e.href,t):"category"===e.type&&(R(e.href,t)||function(e,t){return e.some((function(e){return O(e,t)}))}(e.items,t))}function A(){var e,t=(0,T.V)(),n=(0,i.TH)().pathname;if(!1===(null==(e=(0,E.gA)())?void 0:e.pluginData.breadcrumbs)||!t)return null;var r=[];return function e(t){for(var _,i=a(t);!(_=i()).done;){var s=_.value;if("category"===s.type&&((0,I.Mg)(s.href,n)||e(s.items))||"link"===s.type&&(0,I.Mg)(s.href,n))return r.push(s),!0}return!1}(t.items),r.reverse()}function l(e){var t=(0,E.Iw)(e).activeVersion,n=(0,o.J)(e).preferredVersion,r=(0,E.yW)(e);return(0,_.useMemo)((function(){return(0,d.j)([t,n,r].filter(Boolean))}),[t,n,r])}function D(e,t){var n=l(t);return(0,_.useMemo)((function(){var t=n.flatMap((function(e){return e.sidebars?Object.entries(e.sidebars):[]})),r=t.find((function(t){return t[0]===e}));if(!r)throw new Error("Can't find any sidebar with id \""+e+'" in version'+(n.length>1?"s":"")+" "+n.map((function(e){return e.name})).join(", ")+'".\n  Available sidebar ids are:\n  - '+Object.keys(t).join("\n- "));return r[1]}),[e,n])}function h(e,t){var n=l(t);return(0,_.useMemo)((function(){var t=n.flatMap((function(e){return e.docs})),r=t.find((function(t){return t.id===e}));if(!r){if(n.flatMap((function(e){return e.draftIds})).includes(e))return null;throw new Error("DocNavbarItem: couldn't find any doc with id \""+e+'" in version'+(n.length>1?"s":"")+" "+n.map((function(e){return e.name})).join(", ")+'".\nAvailable doc ids are:\n- '+(0,d.j)(t.map((function(e){return e.id}))).join("\n- "))}return r}),[e,n])}function S(e){var t=e.route,n=e.versionMetadata,r=(0,i.TH)(),a=t.routes,_=a.find((function(e){return(0,i.LX)(r.pathname,e)}));if(!_)return null;var E=_.sidebar,o=E?n.docsSidebars[E]:void 0;return{docElement:(0,s.H)(a,{versionMetadata:n}),sidebarName:E,sidebarItems:o}}},67392:function(e,t,n){"use strict";function r(e,t){return void 0===t&&(t=function(e,t){return e===t}),e.filter((function(n,r){return e.findIndex((function(e){return t(e,n)}))!==r}))}function a(e){return Array.from(new Set(e))}n.d(t,{j:function(){return a},l:function(){return r}})},1944:function(e,t,n){"use strict";n.d(t,{FG:function(){return I},d:function(){return T},VC:function(){return u}});var r=n(67294),a=n(86010),_=n(35742),i=n(30226);function s(){var e=r.useContext(i._);if(!e)throw new Error("Unexpected: no Docusaurus route context found");return e}var E=n(44996),o=n(52263);function T(e){var t=e.title,n=e.description,a=e.keywords,i=e.image,s=e.children,T=function(e){var t=(0,o.Z)().siteConfig,n=t.title,r=t.titleDelimiter;return null!=e&&e.trim().length?e.trim()+" "+r+" "+n:n}(t),d=(0,E.C)().withBaseUrl,I=i?d(i,{absolute:!0}):void 0;return r.createElement(_.Z,null,t&&r.createElement("title",null,T),t&&r.createElement("meta",{property:"og:title",content:T}),n&&r.createElement("meta",{name:"description",content:n}),n&&r.createElement("meta",{property:"og:description",content:n}),a&&r.createElement("meta",{name:"keywords",content:Array.isArray(a)?a.join(","):a}),I&&r.createElement("meta",{property:"og:image",content:I}),I&&r.createElement("meta",{name:"twitter:image",content:I}),s)}var d=r.createContext(void 0);function I(e){var t=e.className,n=e.children,i=r.useContext(d),s=(0,a.Z)(i,t);return r.createElement(d.Provider,{value:s},r.createElement(_.Z,null,r.createElement("html",{className:s})),n)}function u(e){var t=e.children,n=s(),_="plugin-"+n.plugin.name.replace(/docusaurus-(?:plugin|theme)-(?:content-)?/gi,""),i="plugin-id-"+n.plugin.id;return r.createElement(I,{className:(0,a.Z)(_,i)},t)}},902:function(e,t,n){"use strict";n.d(t,{D9:function(){return o},ed:function(){return E},i6:function(){return T}});var r=n(87099),a=n(94578),_=n(74542),i=n(67294),s=n(10412).default.canUseDOM?i.useLayoutEffect:i.useEffect;function E(e){var t=(0,i.useRef)(e);return s((function(){t.current=e}),[e]),(0,i.useCallback)((function(){return t.current.apply(t,arguments)}),[])}function o(e){var t=(0,i.useRef)();return s((function(){t.current=e})),t.current}var T=function(e){function t(t,n){var a,_,i,s,E;return(E=e.call(this)||this).name="ReactContextError",E.message="Hook "+(null!=(a=null==(_=E.stack)||null==(i=_.split("\n")[1])||null==(s=i.match((0,r.Z)(/at (?:\w+\.)?(\w+)/,{name:1})))?void 0:s.groups.name)?a:"")+" is called outside the <"+t+">. "+(null!=n?n:""),E}return(0,a.Z)(t,e),t}((0,_.Z)(Error))},48596:function(e,t,n){"use strict";n.d(t,{Mg:function(){return i},Ns:function(){return s}});var r=n(67294),a=n(723),_=n(52263);function i(e,t){var n=function(e){var t;return null==(t=!e||e.endsWith("/")?e:e+"/")?void 0:t.toLowerCase()};return n(e)===n(t)}function s(){var e=(0,_.Z)().siteConfig.baseUrl;return(0,r.useMemo)((function(){return function(e){var t=e.baseUrl;function n(e){return e.path===t&&!0===e.exact}function r(e){return e.path===t&&!e.exact}return function e(t){if(0!==t.length)return t.find(n)||e(t.filter(r).flatMap((function(e){var t;return null!=(t=e.routes)?t:[]})))}(e.routes)}({routes:a.Z,baseUrl:e})}),[e])}},12466:function(e,t,n){"use strict";n.d(t,{Ct:function(){return u},OC:function(){return E},RF:function(){return d},o5:function(){return I}});var r=n(67294),a=n(10412),_=n(72389),i=n(902);var s=r.createContext(void 0);function E(e){var t,n=e.children,a=(t=(0,r.useRef)(!0),(0,r.useMemo)((function(){return{scrollEventsEnabledRef:t,enableScrollEvents:function(){t.current=!0},disableScrollEvents:function(){t.current=!1}}}),[]));return r.createElement(s.Provider,{value:a},n)}function o(){var e=(0,r.useContext)(s);if(null==e)throw new i.i6("ScrollControllerProvider");return e}var T=function(){return a.default.canUseDOM?{scrollX:window.pageXOffset,scrollY:window.pageYOffset}:null};function d(e,t){void 0===t&&(t=[]);var n=o().scrollEventsEnabledRef,a=(0,r.useRef)(T()),_=(0,i.ed)(e);(0,r.useEffect)((function(){var e=function(){if(n.current){var e=T();_(e,a.current),a.current=e}},t={passive:!0};return e(),window.addEventListener("scroll",e,t),function(){return window.removeEventListener("scroll",e,t)}}),[_,n].concat(t))}function I(){var e,t,n,a=o(),_=(e=(0,r.useRef)({elem:null,top:0}),t=(0,r.useCallback)((function(t){e.current={elem:t,top:t.getBoundingClientRect().top}}),[]),n=(0,r.useCallback)((function(){var t=e.current,n=t.elem,r=t.top;if(!n)return{restored:!1};var a=n.getBoundingClientRect().top-r;return a&&window.scrollBy({left:0,top:a}),e.current={elem:null,top:0},{restored:0!==a}}),[]),(0,r.useMemo)((function(){return{save:t,restore:n}}),[n,t])),i=(0,r.useRef)(void 0),s=(0,r.useCallback)((function(e){_.save(e),a.disableScrollEvents(),i.current=function(){var e=_.restore().restored;if(i.current=void 0,e){window.addEventListener("scroll",(function e(){a.enableScrollEvents(),window.removeEventListener("scroll",e)}))}else a.enableScrollEvents()}}),[a,_]);return(0,r.useLayoutEffect)((function(){null==i.current||i.current()})),{blockElementScrollPositionUntilNextRender:s}}function u(){var e=(0,r.useRef)(null),t=(0,_.Z)()&&"smooth"===getComputedStyle(document.documentElement).scrollBehavior;return{startScroll:function(n){e.current=t?function(e){return window.scrollTo({top:e,behavior:"smooth"}),function(){}}(n):function(e){var t=null,n=document.documentElement.scrollTop>e;return function r(){var a=document.documentElement.scrollTop;(n&&a>e||!n&&a<e)&&(t=requestAnimationFrame(r),window.scrollTo(0,Math.floor(.85*(a-e))+e))}(),function(){return t&&cancelAnimationFrame(t)}}(n)},cancelScroll:function(){return null==e.current?void 0:e.current()}}}},43320:function(e,t,n){"use strict";n.d(t,{HX:function(){return r},os:function(){return a}});n(52263);var r="default";function a(e,t){return"docs-"+e+"-"+t}},50012:function(e,t,n){"use strict";n.d(t,{W:function(){return s},_:function(){return E}});var r="localStorage";function a(e){if(void 0===e&&(e=r),"undefined"==typeof window)throw new Error("Browser storage is not available on Node.js/Docusaurus SSR process.");if("none"===e)return null;try{return window[e]}catch(n){return t=n,_||(console.warn("Docusaurus browser storage is not available.\nPossible reasons: running Docusaurus in an iframe, in an incognito browser session, or using too strict browser privacy settings.",t),_=!0),null}var t}var _=!1;var i={get:function(){return null},set:function(){},del:function(){}};function s(e,t){if("undefined"==typeof window)return function(e){function t(){throw new Error('Illegal storage API usage for storage key "'+e+'".\nDocusaurus storage APIs are not supposed to be called on the server-rendering process.\nPlease only call storage APIs in effects and event handlers.')}return{get:t,set:t,del:t}}(e);var n=a(null==t?void 0:t.persistence);return null===n?i:{get:function(){try{return n.getItem(e)}catch(t){return console.error("Docusaurus storage error, can't get key="+e,t),null}},set:function(t){try{n.setItem(e,t)}catch(r){console.error("Docusaurus storage error, can't set "+e+"="+t,r)}},del:function(){try{n.removeItem(e)}catch(t){console.error("Docusaurus storage error, can't delete key="+e,t)}}}}function E(e){void 0===e&&(e=r);var t=a(e);if(!t)return[];for(var n=[],_=0;_<t.length;_+=1){var i=t.key(_);null!==i&&n.push(i)}return n}},94711:function(e,t,n){"use strict";n.d(t,{l:function(){return _}});var r=n(52263),a=n(76775);function _(){var e=(0,r.Z)(),t=e.siteConfig,n=t.baseUrl,_=t.url,i=e.i18n,s=i.defaultLocale,E=i.currentLocale,o=(0,a.TH)().pathname,T=E===s?n:n.replace("/"+E+"/","/"),d=o.replace(n,"");return{createUrl:function(e){var t=e.locale;return""+(e.fullyQualified?_:"")+function(e){return e===s?""+T:""+T+e+"/"}(t)+d}}}},85936:function(e,t,n){"use strict";n.d(t,{S:function(){return i}});var r=n(67294),a=n(76775),_=n(902);function i(e){var t=(0,a.TH)(),n=(0,_.D9)(t),i=(0,_.ed)(e);(0,r.useEffect)((function(){n&&t!==n&&i({location:t,previousLocation:n})}),[i,t,n])}},86668:function(e,t,n){"use strict";n.d(t,{L:function(){return a}});var r=n(52263);function a(){return(0,r.Z)().siteConfig.themeConfig}},8802:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=t.trailingSlash,r=t.baseUrl;if(e.startsWith("#"))return e;if(void 0===n)return e;var a,_=e.split(/[#?]/)[0],i="/"===_||_===r?_:(a=_,n?function(e){return e.endsWith("/")?e:e+"/"}(a):function(e){return e.endsWith("/")?e.slice(0,-1):e}(a));return e.replace(_,i)}},18780:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.applyTrailingSlash=t.blogPostContainerID=void 0,t.blogPostContainerID="post-content";var a=n(8802);Object.defineProperty(t,"applyTrailingSlash",{enumerable:!0,get:function(){return r(a).default}})},4750:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),r(n(10412)).default.canUseDOM&&(window.Prism=window.Prism||{},window.Prism.manual=!0)},86010:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:function(){return a}})},99318:function(e,t,n){"use strict";n.d(t,{lX:function(){return h},q_:function(){return U},ob:function(){return u},PP:function(){return m},Ep:function(){return I}});var r=n(87462);function a(e){return"/"===e.charAt(0)}function _(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}var i=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],i=t&&t.split("/")||[],s=e&&a(e),E=t&&a(t),o=s||E;if(e&&a(e)?i=r:r.length&&(i.pop(),i=i.concat(r)),!i.length)return"/";if(i.length){var T=i[i.length-1];n="."===T||".."===T||""===T}else n=!1;for(var d=0,I=i.length;I>=0;I--){var u=i[I];"."===u?_(i,I):".."===u?(_(i,I),d++):d&&(_(i,I),d--)}if(!o)for(;d--;d)i.unshift("..");!o||""===i[0]||i[0]&&a(i[0])||i.unshift("");var N=i.join("/");return n&&"/"!==N.substr(-1)&&(N+="/"),N},s=n(2177);function E(e){return"/"===e.charAt(0)?e:"/"+e}function o(e){return"/"===e.charAt(0)?e.substr(1):e}function T(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function d(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function I(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function u(e,t,n,a){var _;"string"==typeof e?(_=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var _=t.indexOf("?");return-1!==_&&(n=t.substr(_),t=t.substr(0,_)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e),_.state=t):(void 0===(_=(0,r.Z)({},e)).pathname&&(_.pathname=""),_.search?"?"!==_.search.charAt(0)&&(_.search="?"+_.search):_.search="",_.hash?"#"!==_.hash.charAt(0)&&(_.hash="#"+_.hash):_.hash="",void 0!==t&&void 0===_.state&&(_.state=t));try{_.pathname=decodeURI(_.pathname)}catch(s){throw s instanceof URIError?new URIError('Pathname "'+_.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):s}return n&&(_.key=n),a?_.pathname?"/"!==_.pathname.charAt(0)&&(_.pathname=i(_.pathname,a.pathname)):_.pathname=a.pathname:_.pathname||(_.pathname="/"),_}function N(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var _="function"==typeof e?e(t,n):e;"string"==typeof _?"function"==typeof r?r(_,a):a(!0):a(!1!==_)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var R=!("undefined"==typeof window||!window.document||!window.document.createElement);function O(e,t){t(window.confirm(e))}var A="popstate",l="hashchange";function D(){try{return window.history.state||{}}catch(e){return{}}}function h(e){void 0===e&&(e={}),R||(0,s.Z)(!1);var t,n=window.history,a=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,_=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,o=i.forceRefresh,h=void 0!==o&&o,S=i.getUserConfirmation,p=void 0===S?O:S,c=i.keyLength,P=void 0===c?6:c,C=e.basename?d(E(e.basename)):"";function U(e){var t=e||{},n=t.key,r=t.state,a=window.location,_=a.pathname+a.search+a.hash;return C&&(_=T(_,C)),u(_,r,n)}function f(){return Math.random().toString(36).substr(2,P)}var m=N();function L(e){(0,r.Z)(K,e),K.length=n.length,m.notifyListeners(K.location,K.action)}function F(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||g(U(e.state))}function M(){g(U(D()))}var w=!1;function g(e){if(w)w=!1,L();else{m.confirmTransitionTo(e,"POP",p,(function(t){t?L({action:"POP",location:e}):function(e){var t=K.location,n=y.indexOf(t.key);-1===n&&(n=0);var r=y.indexOf(e.key);-1===r&&(r=0);var a=n-r;a&&(w=!0,v(a))}(e)}))}}var b=U(D()),y=[b.key];function X(e){return C+I(e)}function v(e){n.go(e)}var V=0;function B(e){1===(V+=e)&&1===e?(window.addEventListener(A,F),_&&window.addEventListener(l,M)):0===V&&(window.removeEventListener(A,F),_&&window.removeEventListener(l,M))}var Y=!1;var K={length:n.length,action:"POP",location:b,createHref:X,push:function(e,t){var r="PUSH",_=u(e,t,f(),K.location);m.confirmTransitionTo(_,r,p,(function(e){if(e){var t=X(_),i=_.key,s=_.state;if(a)if(n.pushState({key:i,state:s},null,t),h)window.location.href=t;else{var E=y.indexOf(K.location.key),o=y.slice(0,E+1);o.push(_.key),y=o,L({action:r,location:_})}else window.location.href=t}}))},replace:function(e,t){var r="REPLACE",_=u(e,t,f(),K.location);m.confirmTransitionTo(_,r,p,(function(e){if(e){var t=X(_),i=_.key,s=_.state;if(a)if(n.replaceState({key:i,state:s},null,t),h)window.location.replace(t);else{var E=y.indexOf(K.location.key);-1!==E&&(y[E]=_.key),L({action:r,location:_})}else window.location.replace(t)}}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},block:function(e){void 0===e&&(e=!1);var t=m.setPrompt(e);return Y||(B(1),Y=!0),function(){return Y&&(Y=!1,B(-1)),t()}},listen:function(e){var t=m.appendListener(e);return B(1),function(){B(-1),t()}}};return K}var S="hashchange",p={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+o(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:o,decodePath:E},slash:{encodePath:E,decodePath:E}};function c(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function P(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function C(e){window.location.replace(c(window.location.href)+"#"+e)}function U(e){void 0===e&&(e={}),R||(0,s.Z)(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),a=n.getUserConfirmation,_=void 0===a?O:a,i=n.hashType,o=void 0===i?"slash":i,A=e.basename?d(E(e.basename)):"",l=p[o],D=l.encodePath,h=l.decodePath;function U(){var e=h(P());return A&&(e=T(e,A)),u(e)}var f=N();function m(e){(0,r.Z)(Y,e),Y.length=t.length,f.notifyListeners(Y.location,Y.action)}var L=!1,F=null;function M(){var e,t,n=P(),r=D(n);if(n!==r)C(r);else{var a=U(),i=Y.location;if(!L&&(t=a,(e=i).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(F===I(a))return;F=null,function(e){if(L)L=!1,m();else{var t="POP";f.confirmTransitionTo(e,t,_,(function(n){n?m({action:t,location:e}):function(e){var t=Y.location,n=y.lastIndexOf(I(t));-1===n&&(n=0);var r=y.lastIndexOf(I(e));-1===r&&(r=0);var a=n-r;a&&(L=!0,X(a))}(e)}))}}(a)}}var w=P(),g=D(w);w!==g&&C(g);var b=U(),y=[I(b)];function X(e){t.go(e)}var v=0;function V(e){1===(v+=e)&&1===e?window.addEventListener(S,M):0===v&&window.removeEventListener(S,M)}var B=!1;var Y={length:t.length,action:"POP",location:b,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=c(window.location.href)),n+"#"+D(A+I(e))},push:function(e,t){var n="PUSH",r=u(e,void 0,void 0,Y.location);f.confirmTransitionTo(r,n,_,(function(e){if(e){var t=I(r),a=D(A+t);if(P()!==a){F=t,function(e){window.location.hash=e}(a);var _=y.lastIndexOf(I(Y.location)),i=y.slice(0,_+1);i.push(t),y=i,m({action:n,location:r})}else m()}}))},replace:function(e,t){var n="REPLACE",r=u(e,void 0,void 0,Y.location);f.confirmTransitionTo(r,n,_,(function(e){if(e){var t=I(r),a=D(A+t);P()!==a&&(F=t,C(a));var _=y.indexOf(I(Y.location));-1!==_&&(y[_]=t),m({action:n,location:r})}}))},go:X,goBack:function(){X(-1)},goForward:function(){X(1)},block:function(e){void 0===e&&(e=!1);var t=f.setPrompt(e);return B||(V(1),B=!0),function(){return B&&(B=!1,V(-1)),t()}},listen:function(e){var t=f.appendListener(e);return V(1),function(){V(-1),t()}}};return Y}function f(e,t,n){return Math.min(Math.max(e,t),n)}function m(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,a=t.initialEntries,_=void 0===a?["/"]:a,i=t.initialIndex,s=void 0===i?0:i,E=t.keyLength,o=void 0===E?6:E,T=N();function d(e){(0,r.Z)(h,e),h.length=h.entries.length,T.notifyListeners(h.location,h.action)}function R(){return Math.random().toString(36).substr(2,o)}var O=f(s,0,_.length-1),A=_.map((function(e){return u(e,void 0,"string"==typeof e?R():e.key||R())})),l=I;function D(e){var t=f(h.index+e,0,h.entries.length-1),r=h.entries[t];T.confirmTransitionTo(r,"POP",n,(function(e){e?d({action:"POP",location:r,index:t}):d()}))}var h={length:A.length,action:"POP",location:A[O],index:O,entries:A,createHref:l,push:function(e,t){var r="PUSH",a=u(e,t,R(),h.location);T.confirmTransitionTo(a,r,n,(function(e){if(e){var t=h.index+1,n=h.entries.slice(0);n.length>t?n.splice(t,n.length-t,a):n.push(a),d({action:r,location:a,index:t,entries:n})}}))},replace:function(e,t){var r="REPLACE",a=u(e,t,R(),h.location);T.confirmTransitionTo(a,r,n,(function(e){e&&(h.entries[h.index]=a,d({action:r,location:a}))}))},go:D,goBack:function(){D(-1)},goForward:function(){D(1)},canGo:function(e){var t=h.index+e;return t>=0&&t<h.entries.length},block:function(e){return void 0===e&&(e=!1),T.setPrompt(e)},listen:function(e){return T.appendListener(e)}};return h}},8679:function(e,t,n){"use strict";var r=n(59864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},_={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},s={};function E(e){return r.isMemo(e)?i:s[e.$$typeof]||a}s[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},s[r.Memo]=i;var o=Object.defineProperty,T=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,I=Object.getOwnPropertyDescriptor,u=Object.getPrototypeOf,N=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(N){var a=u(n);a&&a!==N&&e(t,a,r)}var i=T(n);d&&(i=i.concat(d(n)));for(var s=E(t),R=E(n),O=0;O<i.length;++O){var A=i[O];if(!(_[A]||r&&r[A]||R&&R[A]||s&&s[A])){var l=I(n,A);try{o(t,A,l)}catch(D){}}}}return t}},41143:function(e){"use strict";e.exports=function(e,t,n,r,a,_,i,s){if(!e){var E;if(void 0===t)E=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var o=[n,r,a,_,i,s],T=0;(E=new Error(t.replace(/%s/g,(function(){return o[T++]})))).name="Invariant Violation"}throw E.framesToPop=1,E}}},5826:function(e){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},36743:function(e,t,n){"use strict";n.r(t)},41304:function(e,t,n){"use strict";n.r(t)},32497:function(e,t,n){"use strict";n.r(t)},52295:function(e,t,n){"use strict";n.r(t)},74865:function(e,t,n){var r,a;r=function(){var e,t,n={version:"0.2.0"},r=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(e,t,n){return e<t?t:e>n?n:e}function _(e){return 100*(-1+e)}function i(e,t,n){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+_(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+_(e)+"%,0)"}:{"margin-left":_(e)+"%"}).transition="all "+t+"ms "+n,a}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(r[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=a(e,r.minimum,1),n.status=1===e?null:e;var _=n.render(!t),o=_.querySelector(r.barSelector),T=r.speed,d=r.easing;return _.offsetWidth,s((function(t){""===r.positionUsing&&(r.positionUsing=n.getPositioningCSS()),E(o,i(e,T,d)),1===e?(E(_,{transition:"none",opacity:1}),_.offsetWidth,setTimeout((function(){E(_,{transition:"all "+T+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),T)}),T)):setTimeout(t,T)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*a(Math.random()*t,.1,.95)),t=a(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*r.trickleRate)},e=0,t=0,n.promise=function(r){return r&&"resolved"!==r.state()?(0===t&&n.start(),e++,t++,r.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");T(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=r.template;var a,i=t.querySelector(r.barSelector),s=e?"-100":_(n.status||0),o=document.querySelector(r.parent);return E(i,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),r.showSpinner||(a=t.querySelector(r.spinnerSelector))&&u(a),o!=document.body&&T(o,"nprogress-custom-parent"),o.appendChild(t),t},n.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&u(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var s=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),E=function(){var e=["Webkit","O","Moz","ms"],t={};function n(e){return e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()}))}function r(t){var n=document.body.style;if(t in n)return t;for(var r,a=e.length,_=t.charAt(0).toUpperCase()+t.slice(1);a--;)if((r=e[a]+_)in n)return r;return t}function a(e){return e=n(e),t[e]||(t[e]=r(e))}function _(e,t,n){t=a(t),e.style[t]=n}return function(e,t){var n,r,a=arguments;if(2==a.length)for(n in t)void 0!==(r=t[n])&&t.hasOwnProperty(n)&&_(e,n,r);else _(e,a[1],a[2])}}();function o(e,t){return("string"==typeof e?e:I(e)).indexOf(" "+t+" ")>=0}function T(e,t){var n=I(e),r=n+t;o(n,t)||(e.className=r.substring(1))}function d(e,t){var n,r=I(e);o(e,t)&&(n=r.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function I(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function u(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n},void 0===(a="function"==typeof r?r.call(t,n,t,e):r)||(e.exports=a)},27418:function(e){"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(a){return!1}}()?Object.assign:function(e,_){for(var i,s,E=a(e),o=1;o<arguments.length;o++){for(var T in i=Object(arguments[o]))n.call(i,T)&&(E[T]=i[T]);if(t){s=t(i);for(var d=0;d<s.length;d++)r.call(i,s[d])&&(E[s[d]]=i[s[d]])}}return E}},14779:function(e,t,n){var r=n(5826);e.exports=u,e.exports.parse=_,e.exports.compile=function(e,t){return s(_(e,t),t)},e.exports.tokensToFunction=s,e.exports.tokensToRegExp=I;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function _(e,t){for(var n,r=[],_=0,i=0,s="",T=t&&t.delimiter||"/";null!=(n=a.exec(e));){var d=n[0],I=n[1],u=n.index;if(s+=e.slice(i,u),i=u+d.length,I)s+=I[1];else{var N=e[i],R=n[2],O=n[3],A=n[4],l=n[5],D=n[6],h=n[7];s&&(r.push(s),s="");var S=null!=R&&null!=N&&N!==R,p="+"===D||"*"===D,c="?"===D||"*"===D,P=n[2]||T,C=A||l;r.push({name:O||_++,prefix:R||"",delimiter:P,optional:c,repeat:p,partial:S,asterisk:!!h,pattern:C?o(C):h?".*":"[^"+E(P)+"]+?"})}}return i<e.length&&(s+=e.substr(i)),s&&r.push(s),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function s(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",d(t)));return function(t,a){for(var _="",s=t||{},E=(a||{}).pretty?i:encodeURIComponent,o=0;o<e.length;o++){var T=e[o];if("string"!=typeof T){var d,I=s[T.name];if(null==I){if(T.optional){T.partial&&(_+=T.prefix);continue}throw new TypeError('Expected "'+T.name+'" to be defined')}if(r(I)){if(!T.repeat)throw new TypeError('Expected "'+T.name+'" to not repeat, but received `'+JSON.stringify(I)+"`");if(0===I.length){if(T.optional)continue;throw new TypeError('Expected "'+T.name+'" to not be empty')}for(var u=0;u<I.length;u++){if(d=E(I[u]),!n[o].test(d))throw new TypeError('Expected all "'+T.name+'" to match "'+T.pattern+'", but received `'+JSON.stringify(d)+"`");_+=(0===u?T.prefix:T.delimiter)+d}}else{if(d=T.asterisk?encodeURI(I).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):E(I),!n[o].test(d))throw new TypeError('Expected "'+T.name+'" to match "'+T.pattern+'", but received "'+d+'"');_+=T.prefix+d}}else _+=T}return _}}function E(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function o(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function T(e,t){return e.keys=t,e}function d(e){return e&&e.sensitive?"":"i"}function I(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,_=!1!==n.end,i="",s=0;s<e.length;s++){var o=e[s];if("string"==typeof o)i+=E(o);else{var I=E(o.prefix),u="(?:"+o.pattern+")";t.push(o),o.repeat&&(u+="(?:"+I+u+")*"),i+=u=o.optional?o.partial?I+"("+u+")?":"(?:"+I+"("+u+"))?":I+"("+u+")"}}var N=E(n.delimiter||"/"),R=i.slice(-N.length)===N;return a||(i=(R?i.slice(0,-N.length):i)+"(?:"+N+"(?=$))?"),i+=_?"$":a&&R?"":"(?="+N+"|$)",T(new RegExp("^"+i,d(n)),t)}function u(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return T(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],a=0;a<e.length;a++)r.push(u(e[a],t,n).source);return T(new RegExp("(?:"+r.join("|")+")",d(n)),t)}(e,t,n):function(e,t,n){return I(_(e,n),t,n)}(e,t,n)}},87410:function(e,t){"use strict";var n=function(){var e=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,t=0,n={},r={util:{encode:function e(t){return t instanceof a?new a(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function e(t,n){var a,_;switch(n=n||{},r.util.type(t)){case"Object":if(_=r.util.objId(t),n[_])return n[_];for(var i in a={},n[_]=a,t)t.hasOwnProperty(i)&&(a[i]=e(t[i],n));return a;case"Array":return _=r.util.objId(t),n[_]?n[_]:(a=[],n[_]=a,t.forEach((function(t,r){a[r]=e(t,n)})),a);default:return t}},getLanguage:function(t){for(;t;){var n=e.exec(t.className);if(n)return n[1].toLowerCase();t=t.parentElement}return"none"},setLanguage:function(t,n){t.className=t.className.replace(RegExp(e,"gi"),""),t.classList.add("language-"+n)},isActive:function(e,t,n){for(var r="no-"+t;e;){var a=e.classList;if(a.contains(t))return!0;if(a.contains(r))return!1;e=e.parentElement}return!!n}},languages:{plain:n,plaintext:n,text:n,txt:n,extend:function(e,t){var n=r.util.clone(r.languages[e]);for(var a in t)n[a]=t[a];return n},insertBefore:function(e,t,n,a){var _=(a=a||r.languages)[e],i={};for(var s in _)if(_.hasOwnProperty(s)){if(s==t)for(var E in n)n.hasOwnProperty(E)&&(i[E]=n[E]);n.hasOwnProperty(s)||(i[s]=_[s])}var o=a[e];return a[e]=i,r.languages.DFS(r.languages,(function(t,n){n===o&&t!=e&&(this[t]=i)})),i},DFS:function e(t,n,a,_){_=_||{};var i=r.util.objId;for(var s in t)if(t.hasOwnProperty(s)){n.call(t,s,t[s],a||s);var E=t[s],o=r.util.type(E);"Object"!==o||_[i(E)]?"Array"!==o||_[i(E)]||(_[i(E)]=!0,e(E,n,s,_)):(_[i(E)]=!0,e(E,n,null,_))}}},plugins:{},highlight:function(e,t,n){var _={code:e,grammar:t,language:n};return r.hooks.run("before-tokenize",_),_.tokens=r.tokenize(_.code,_.grammar),r.hooks.run("after-tokenize",_),a.stringify(r.util.encode(_.tokens),_.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var r in n)t[r]=n[r];delete t.rest}var a=new s;return E(a,a.head,e),i(e,a,t,a.head,0),function(e){var t=[],n=e.head.next;for(;n!==e.tail;)t.push(n.value),n=n.next;return t}(a)},hooks:{all:{},add:function(e,t){var n=r.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=r.hooks.all[e];if(n&&n.length)for(var a,_=0;a=n[_++];)a(t)}},Token:a};function a(e,t,n,r){this.type=e,this.content=t,this.alias=n,this.length=0|(r||"").length}function _(e,t,n,r){e.lastIndex=t;var a=e.exec(n);if(a&&r&&a[1]){var _=a[1].length;a.index+=_,a[0]=a[0].slice(_)}return a}function i(e,t,n,s,T,d){for(var I in n)if(n.hasOwnProperty(I)&&n[I]){var u=n[I];u=Array.isArray(u)?u:[u];for(var N=0;N<u.length;++N){if(d&&d.cause==I+","+N)return;var R=u[N],O=R.inside,A=!!R.lookbehind,l=!!R.greedy,D=R.alias;if(l&&!R.pattern.global){var h=R.pattern.toString().match(/[imsuy]*$/)[0];R.pattern=RegExp(R.pattern.source,h+"g")}for(var S=R.pattern||R,p=s.next,c=T;p!==t.tail&&!(d&&c>=d.reach);c+=p.value.length,p=p.next){var P=p.value;if(t.length>e.length)return;if(!(P instanceof a)){var C,U=1;if(l){if(!(C=_(S,c,e,A))||C.index>=e.length)break;var f=C.index,m=C.index+C[0].length,L=c;for(L+=p.value.length;f>=L;)L+=(p=p.next).value.length;if(c=L-=p.value.length,p.value instanceof a)continue;for(var F=p;F!==t.tail&&(L<m||"string"==typeof F.value);F=F.next)U++,L+=F.value.length;U--,P=e.slice(c,L),C.index-=c}else if(!(C=_(S,0,P,A)))continue;f=C.index;var M=C[0],w=P.slice(0,f),g=P.slice(f+M.length),b=c+P.length;d&&b>d.reach&&(d.reach=b);var y=p.prev;if(w&&(y=E(t,y,w),c+=w.length),o(t,y,U),p=E(t,y,new a(I,O?r.tokenize(M,O):M,D,M)),g&&E(t,p,g),U>1){var X={cause:I+","+N,reach:b};i(e,t,n,p.prev,c,X),d&&X.reach>d.reach&&(d.reach=X.reach)}}}}}}function s(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function E(e,t,n){var r=t.next,a={value:n,prev:t,next:r};return t.next=a,r.prev=a,e.length++,a}function o(e,t,n){for(var r=t.next,a=0;a<n&&r!==e.tail;a++)r=r.next;t.next=r,r.prev=t,e.length-=a}return a.stringify=function e(t,n){if("string"==typeof t)return t;if(Array.isArray(t)){var a="";return t.forEach((function(t){a+=e(t,n)})),a}var _={type:t.type,content:e(t.content,n),tag:"span",classes:["token",t.type],attributes:{},language:n},i=t.alias;i&&(Array.isArray(i)?Array.prototype.push.apply(_.classes,i):_.classes.push(i)),r.hooks.run("wrap",_);var s="";for(var E in _.attributes)s+=" "+E+'="'+(_.attributes[E]||"").replace(/"/g,"&quot;")+'"';return"<"+_.tag+' class="'+_.classes.join(" ")+'"'+s+">"+_.content+"</"+_.tag+">"},r}(),r=n;n.default=n,r.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},r.languages.markup.tag.inside["attr-value"].inside.entity=r.languages.markup.entity,r.languages.markup.doctype.inside["internal-subset"].inside=r.languages.markup,r.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(r.languages.markup.tag,"addInlined",{value:function(e,t){var n={};n["language-"+t]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:r.languages[t]},n.cdata=/^<!\[CDATA\[|\]\]>$/i;var a={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:n}};a["language-"+t]={pattern:/[\s\S]+/,inside:r.languages[t]};var _={};_[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:a},r.languages.insertBefore("markup","cdata",_)}}),Object.defineProperty(r.languages.markup.tag,"addAttribute",{value:function(e,t){r.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[t,"language-"+t],inside:r.languages[t]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),r.languages.html=r.languages.markup,r.languages.mathml=r.languages.markup,r.languages.svg=r.languages.markup,r.languages.xml=r.languages.extend("markup",{}),r.languages.ssml=r.languages.xml,r.languages.atom=r.languages.xml,r.languages.rss=r.languages.xml,function(e){var t="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",n={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},r={bash:n,environment:{pattern:RegExp("\\$"+t),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+t),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};e.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+t),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:r},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:n}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:r},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:r.entity}}],environment:{pattern:RegExp("\\$?"+t),alias:"constant"},variable:r.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},n.inside=e.languages.bash;for(var a=["comment","function-name","for-or-select","assign-left","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],_=r.variable[1].inside,i=0;i<a.length;i++)_[a[i]]=e.languages.bash[a[i]];e.languages.shell=e.languages.bash}(r),r.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},r.languages.c=r.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/}),r.languages.insertBefore("c","string",{char:{pattern:/'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,greedy:!0}}),r.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},r.languages.c.string],char:r.languages.c.char,comment:r.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:r.languages.c}}}}),r.languages.insertBefore("c","function",{constant:/\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/}),delete r.languages.c.boolean,function(e){var t=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,n=/\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g,(function(){return t.source}));e.languages.cpp=e.languages.extend("c",{"class-name":[{pattern:RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g,(function(){return t.source}))),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:t,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:false|true)\b/}),e.languages.insertBefore("cpp","string",{module:{pattern:RegExp(/(\b(?:import|module)\s+)/.source+"(?:"+/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source+"|"+/<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g,(function(){return n}))+")"),lookbehind:!0,greedy:!0,inside:{string:/^[<"][\s\S]+/,operator:/:/,punctuation:/\./}},"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),e.languages.insertBefore("cpp","keyword",{"generic-function":{pattern:/\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,inside:{function:/^\w+/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:e.languages.cpp}}}}),e.languages.insertBefore("cpp","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}}),e.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend("cpp",{})}}),e.languages.insertBefore("inside","double-colon",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},e.languages.cpp["base-clause"])}(r),function(e){var t=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+t.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+t.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+t.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined("style","css"),n.tag.addAttribute("style","css"))}(r),function(e){var t,n=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;e.languages.css.selector={pattern:e.languages.css.selector.pattern,lookbehind:!0,inside:t={"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-\w]+/,id:/#[-\w]+/,attribute:{pattern:RegExp("\\[(?:[^[\\]\"']|"+n.source+")*\\]"),greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},"attr-name":{pattern:/^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,lookbehind:!0},"attr-value":[n,{pattern:/(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],combinator:/>|\+|~|\|\|/,punctuation:/[(),]/}},e.languages.css.atrule.inside["selector-function-argument"].inside=t,e.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,lookbehind:!0}});var r={pattern:/(\b\d+)(?:%|[a-z]+(?![\w-]))/,lookbehind:!0},a={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0};e.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:{pattern:/\B#[\da-f]{3,8}\b/i,alias:"color"},color:[{pattern:/(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,lookbehind:!0},{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:r,number:a,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:r,number:a})}(r),r.languages.javascript=r.languages.extend("clike",{"class-name":[r.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),r.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,r.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:r.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:r.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:r.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:r.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:r.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),r.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:r.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),r.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),r.languages.markup&&(r.languages.markup.tag.addInlined("script","javascript"),r.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),r.languages.js=r.languages.javascript,function(e){var t=/#(?!\{).+/,n={pattern:/#\{[^}]+\}/,alias:"variable"};e.languages.coffeescript=e.languages.extend("javascript",{comment:t,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:n}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),e.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:t,interpolation:n}}}),e.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},script:{pattern:/[\s\S]+/,alias:"language-javascript",inside:e.languages.javascript}}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:n}}]}),e.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete e.languages.coffeescript["template-string"],e.languages.coffee=e.languages.coffeescript}(r),function(e){var t=/[*&][^\s[\]{},]+/,n=/!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,r="(?:"+n.source+"(?:[ \t]+"+t.source+")?|"+t.source+"(?:[ \t]+"+n.source+")?)",a=/(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g,(function(){return/[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source})),_=/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;function i(e,t){t=(t||"").replace(/m/g,"")+"m";var n=/([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<value>>/g,(function(){return e}));return RegExp(n,t)}e.languages.yaml={scalar:{pattern:RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g,(function(){return r}))),lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<key>>/g,(function(){return"(?:"+a+"|"+_+")"}))),lookbehind:!0,greedy:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:i(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),lookbehind:!0,alias:"number"},boolean:{pattern:i(/false|true/.source,"i"),lookbehind:!0,alias:"important"},null:{pattern:i(/null|~/.source,"i"),lookbehind:!0,alias:"important"},string:{pattern:i(_),lookbehind:!0,greedy:!0},number:{pattern:i(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,"i"),lookbehind:!0},tag:n,important:t,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},e.languages.yml=e.languages.yaml}(r),function(e){var t=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;function n(e){return e=e.replace(/<inner>/g,(function(){return t})),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var r=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,a=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,(function(){return r})),_=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"front-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:e.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+a+_+"(?:"+a+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+a+_+")(?:"+a+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(r),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+a+")"+_+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+a+"$"),inside:{"table-header":{pattern:RegExp(r),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:n(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:n(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:n(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:n(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach((function(t){["url","bold","italic","strike","code-snippet"].forEach((function(n){t!==n&&(e.languages.markdown[t].inside.content.inside[n]=e.languages.markdown[n])}))})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(t){if(t&&"string"!=typeof t)for(var n=0,r=t.length;n<r;n++){var a=t[n];if("code"===a.type){var _=a.content[1],i=a.content[3];if(_&&i&&"code-language"===_.type&&"code-block"===i.type&&"string"==typeof _.content){var s=_.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp"),E="language-"+(s=(/[a-z][\w-]*/i.exec(s)||[""])[0].toLowerCase());i.alias?"string"==typeof i.alias?i.alias=[i.alias,E]:i.alias.push(E):i.alias=[E]}}else e(a.content)}}(e.tokens)})),e.hooks.add("wrap",(function(t){if("code-block"===t.type){for(var n="",r=0,a=t.classes.length;r<a;r++){var _=t.classes[r],o=/language-(.+)/.exec(_);if(o){n=o[1];break}}var T,d=e.languages[n];if(d)t.content=e.highlight((T=t.content,T.replace(i,"").replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi,(function(e,t){var n;if("#"===(t=t.toLowerCase())[0])return n="x"===t[1]?parseInt(t.slice(2),16):Number(t.slice(1)),E(n);var r=s[t];return r||e}))),d,n);else if(n&&"none"!==n&&e.plugins.autoloader){var I="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random());t.attributes.id=I,e.plugins.autoloader.loadLanguages(n,(function(){var t=document.getElementById(I);t&&(t.innerHTML=e.highlight(t.textContent,e.languages[n],n))}))}}}));var i=RegExp(e.languages.markup.tag.pattern.source,"gi"),s={amp:"&",lt:"<",gt:">",quot:'"'},E=String.fromCodePoint||String.fromCharCode;e.languages.md=e.languages.markdown}(r),r.languages.graphql={comment:/#.*/,description:{pattern:/(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,greedy:!0,alias:"string",inside:{"language-markdown":{pattern:/(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,lookbehind:!0,inside:r.languages.markdown}}},string:{pattern:/"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:false|true)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"atom-input":{pattern:/\b[A-Z]\w*Input\b/,alias:"class-name"},scalar:/\b(?:Boolean|Float|ID|Int|String)\b/,constant:/\b[A-Z][A-Z_\d]*\b/,"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-mutation":{pattern:/(\bmutation\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-query":{pattern:/(\bquery\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,operator:/[!=|&]|\.{3}/,"property-query":/\w+(?=\s*\()/,object:/\w+(?=\s*\{)/,punctuation:/[!(){}\[\]:=,]/,property:/\w+/},r.hooks.add("after-tokenize",(function(e){if("graphql"===e.language)for(var t=e.tokens.filter((function(e){return"string"!=typeof e&&"comment"!==e.type&&"scalar"!==e.type})),n=0;n<t.length;){var r=t[n++];if("keyword"===r.type&&"mutation"===r.content){var a=[];if(d(["definition-mutation","punctuation"])&&"("===T(1).content){n+=2;var _=I(/^\($/,/^\)$/);if(-1===_)continue;for(;n<_;n++){var i=T(0);"variable"===i.type&&(u(i,"variable-input"),a.push(i.content))}n=_+1}if(d(["punctuation","property-query"])&&"{"===T(0).content&&(n++,u(T(0),"property-mutation"),a.length>0)){var s=I(/^\{$/,/^\}$/);if(-1===s)continue;for(var E=n;E<s;E++){var o=t[E];"variable"===o.type&&a.indexOf(o.content)>=0&&u(o,"variable-input")}}}}function T(e){return t[n+e]}function d(e,t){t=t||0;for(var n=0;n<e.length;n++){var r=T(n+t);if(!r||r.type!==e[n])return!1}return!0}function I(e,r){for(var a=1,_=n;_<t.length;_++){var i=t[_],s=i.content;if("punctuation"===i.type&&"string"==typeof s)if(e.test(s))a++;else if(r.test(s)&&0===--a)return _}return-1}function u(e,t){var n=e.alias;n?Array.isArray(n)||(e.alias=n=[n]):e.alias=n=[],n.push(t)}})),r.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},identifier:{pattern:/(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,greedy:!0,lookbehind:!0,inside:{punctuation:/^`|`$/}},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:FALSE|NULL|TRUE)\b/i,number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){var t=e.languages.javascript["template-string"],n=t.pattern.source,r=t.inside.interpolation,a=r.inside["interpolation-punctuation"],_=r.pattern.source;function i(t,r){if(e.languages[t])return{pattern:RegExp("((?:"+r+")\\s*)"+n),lookbehind:!0,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},"embedded-code":{pattern:/[\s\S]+/,alias:t}}}}function s(e,t){return"___"+t.toUpperCase()+"_"+e+"___"}function E(t,n,r){var a={code:t,grammar:n,language:r};return e.hooks.run("before-tokenize",a),a.tokens=e.tokenize(a.code,a.grammar),e.hooks.run("after-tokenize",a),a.tokens}function o(t){var n={};n["interpolation-punctuation"]=a;var _=e.tokenize(t,n);if(3===_.length){var i=[1,1];i.push.apply(i,E(_[1],e.languages.javascript,"javascript")),_.splice.apply(_,i)}return new e.Token("interpolation",_,r.alias,t)}function T(t,n,r){var a=e.tokenize(t,{interpolation:{pattern:RegExp(_),lookbehind:!0}}),i=0,T={},d=E(a.map((function(e){if("string"==typeof e)return e;for(var n,a=e.content;-1!==t.indexOf(n=s(i++,r)););return T[n]=a,n})).join(""),n,r),I=Object.keys(T);return i=0,function e(t){for(var n=0;n<t.length;n++){if(i>=I.length)return;var r=t[n];if("string"==typeof r||"string"==typeof r.content){var a=I[i],_="string"==typeof r?r:r.content,s=_.indexOf(a);if(-1!==s){++i;var E=_.substring(0,s),d=o(T[a]),u=_.substring(s+a.length),N=[];if(E&&N.push(E),N.push(d),u){var R=[u];e(R),N.push.apply(N,R)}"string"==typeof r?(t.splice.apply(t,[n,1].concat(N)),n+=N.length-1):r.content=N}}else{var O=r.content;Array.isArray(O)?e(O):e([O])}}}(d),new e.Token(r,d,"language-"+r,t)}e.languages.javascript["template-string"]=[i("css",/\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),i("html",/\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),i("svg",/\bsvg/.source),i("markdown",/\b(?:markdown|md)/.source),i("graphql",/\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),i("sql",/\bsql/.source),t].filter(Boolean);var d={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};function I(e){return"string"==typeof e?e:Array.isArray(e)?e.map(I).join(""):I(e.content)}e.hooks.add("after-tokenize",(function(t){t.language in d&&function t(n){for(var r=0,a=n.length;r<a;r++){var _=n[r];if("string"!=typeof _){var i=_.content;if(Array.isArray(i))if("template-string"===_.type){var s=i[1];if(3===i.length&&"string"!=typeof s&&"embedded-code"===s.type){var E=I(s),o=s.alias,d=Array.isArray(o)?o[0]:o,u=e.languages[d];if(!u)continue;i[1]=T(E,u,d)}}else t(i);else"string"!=typeof i&&t([i])}}}(t.tokens)}))}(r),function(e){e.languages.typescript=e.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/}),e.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete e.languages.typescript.parameter,delete e.languages.typescript["literal-property"];var t=e.languages.extend("typescript",{});delete t["class-name"],e.languages.typescript["class-name"].inside=t,e.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:t}}}}),e.languages.ts=e.languages.typescript}(r),function(e){function t(e,t){return RegExp(e.replace(/<ID>/g,(function(){return/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source})),t)}e.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+e.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),e.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+e.languages.javascript.function.source),lookbehind:!0,alias:["function","property-access"]}}),e.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]}),e.languages.insertBefore("javascript","keyword",{imports:{pattern:t(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),lookbehind:!0,inside:e.languages.javascript},exports:{pattern:t(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),lookbehind:!0,inside:e.languages.javascript}}),e.languages.javascript.keyword.unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,alias:"control-flow"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),e.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),e.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:t(/(\.\s*)#?<ID>/.source),lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var n=["function","function-variable","method","method-variable","property-access"],r=0;r<n.length;r++){var a=n[r],_=e.languages.javascript[a];"RegExp"===e.util.type(_)&&(_=e.languages.javascript[a]={pattern:_});var i=_.inside||{};_.inside=i,i["maybe-class-name"]=/^[A-Z][\s\S]*/}}(r),function(e){var t=e.util.clone(e.languages.javascript),n=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,r=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,a=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function _(e,t){return e=e.replace(/<S>/g,(function(){return n})).replace(/<BRACES>/g,(function(){return r})).replace(/<SPREAD>/g,(function(){return a})),RegExp(e,t)}a=_(a).source,e.languages.jsx=e.languages.extend("markup",t),e.languages.jsx.tag.pattern=_(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.jsx.tag.inside.comment=t.comment,e.languages.insertBefore("inside","attr-name",{spread:{pattern:_(/<SPREAD>/.source),inside:e.languages.jsx}},e.languages.jsx.tag),e.languages.insertBefore("inside","special-attr",{script:{pattern:_(/=<BRACES>/.source),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:e.languages.jsx}}},e.languages.jsx.tag);var i=function(e){return e?"string"==typeof e?e:"string"==typeof e.content?e.content:e.content.map(i).join(""):""},s=function(t){for(var n=[],r=0;r<t.length;r++){var a=t[r],_=!1;if("string"!=typeof a&&("tag"===a.type&&a.content[0]&&"tag"===a.content[0].type?"</"===a.content[0].content[0].content?n.length>0&&n[n.length-1].tagName===i(a.content[0].content[1])&&n.pop():"/>"===a.content[a.content.length-1].content||n.push({tagName:i(a.content[0].content[1]),openedBraces:0}):n.length>0&&"punctuation"===a.type&&"{"===a.content?n[n.length-1].openedBraces++:n.length>0&&n[n.length-1].openedBraces>0&&"punctuation"===a.type&&"}"===a.content?n[n.length-1].openedBraces--:_=!0),(_||"string"==typeof a)&&n.length>0&&0===n[n.length-1].openedBraces){var E=i(a);r<t.length-1&&("string"==typeof t[r+1]||"plain-text"===t[r+1].type)&&(E+=i(t[r+1]),t.splice(r+1,1)),r>0&&("string"==typeof t[r-1]||"plain-text"===t[r-1].type)&&(E=i(t[r-1])+E,t.splice(r-1,1),r--),t[r]=new e.Token("plain-text",E,null,E)}a.content&&"string"!=typeof a.content&&s(a.content)}};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||s(e.tokens)}))}(r),function(e){e.languages.diff={coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d.*$/m]};var t={"deleted-sign":"-","deleted-arrow":"<","inserted-sign":"+","inserted-arrow":">",unchanged:" ",diff:"!"};Object.keys(t).forEach((function(n){var r=t[n],a=[];/^\w+$/.test(n)||a.push(/\w+/.exec(n)[0]),"diff"===n&&a.push("bold"),e.languages.diff[n]={pattern:RegExp("^(?:["+r+"].*(?:\r\n?|\n|(?![\\s\\S])))+","m"),alias:a,inside:{line:{pattern:/(.)(?=[\s\S]).*(?:\r\n?|\n)?/,lookbehind:!0},prefix:{pattern:/[\s\S]/,alias:/\w+/.exec(n)[0]}}}})),Object.defineProperty(e.languages.diff,"PREFIXES",{value:t})}(r),r.languages.git={comment:/^#.*/m,deleted:/^[-\u2013].*/m,inserted:/^\+.*/m,string:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,command:{pattern:/^.*\$ git .*$/m,inside:{parameter:/\s--?\w+/}},coord:/^@@.*@@$/m,"commit-sha1":/^commit \w{40}$/m},r.languages.go=r.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,boolean:/\b(?:_|false|iota|nil|true)\b/,number:[/\b0(?:b[01_]+|o[0-7_]+)i?\b/i,/\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,/(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i],operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,builtin:/\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/}),r.languages.insertBefore("go","string",{char:{pattern:/'(?:\\.|[^'\\\r\n]){0,10}'/,greedy:!0}}),delete r.languages.go["class-name"],function(e){function t(e,t){return"___"+e.toUpperCase()+t+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(n,r,a,_){if(n.language===r){var i=n.tokenStack=[];n.code=n.code.replace(a,(function(e){if("function"==typeof _&&!_(e))return e;for(var a,s=i.length;-1!==n.code.indexOf(a=t(r,s));)++s;return i[s]=e,a})),n.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(n,r){if(n.language===r&&n.tokenStack){n.grammar=e.languages[r];var a=0,_=Object.keys(n.tokenStack);!function i(s){for(var E=0;E<s.length&&!(a>=_.length);E++){var o=s[E];if("string"==typeof o||o.content&&"string"==typeof o.content){var T=_[a],d=n.tokenStack[T],I="string"==typeof o?o:o.content,u=t(r,T),N=I.indexOf(u);if(N>-1){++a;var R=I.substring(0,N),O=new e.Token(r,e.tokenize(d,n.grammar),"language-"+r,d),A=I.substring(N+u.length),l=[];R&&l.push.apply(l,i([R])),l.push(O),A&&l.push.apply(l,i([A])),"string"==typeof o?s.splice.apply(s,[E,1].concat(l)):o.content=l}}else o.content&&i(o.content)}return s}(n.tokens)}}}})}(r),function(e){e.languages.handlebars={comment:/\{\{![\s\S]*?\}\}/,delimiter:{pattern:/^\{\{\{?|\}\}\}?$/,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,boolean:/\b(?:false|true)\b/,block:{pattern:/^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,lookbehind:!0,alias:"keyword"},brackets:{pattern:/\[[^\]]+\]/,inside:{punctuation:/\[|\]/,variable:/[\s\S]+/}},punctuation:/[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,variable:/[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/},e.hooks.add("before-tokenize",(function(t){e.languages["markup-templating"].buildPlaceholders(t,"handlebars",/\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g)})),e.hooks.add("after-tokenize",(function(t){e.languages["markup-templating"].tokenizePlaceholders(t,"handlebars")})),e.languages.hbs=e.languages.handlebars}(r),r.languages.json={property:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},r.languages.webmanifest=r.languages.json,r.languages.less=r.languages.extend("css",{comment:[/\/\*[\s\S]*?\*\//,{pattern:/(^|[^\\])\/\/.*/,lookbehind:!0}],atrule:{pattern:/@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{variable:/@+[\w-]+/}},property:/(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,operator:/[+\-*\/]/}),r.languages.insertBefore("less","property",{variable:[{pattern:/@[\w-]+\s*:/,inside:{punctuation:/:/}},/@@?[\w-]+/],"mixin-usage":{pattern:/([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,lookbehind:!0,alias:"function"}}),r.languages.makefile={comment:{pattern:/(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,lookbehind:!0},string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"builtin-target":{pattern:/\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,alias:"builtin"},target:{pattern:/^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,alias:"symbol",inside:{variable:/\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/}},variable:/\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,keyword:/-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,function:{pattern:/(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,lookbehind:!0},operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/},r.languages.objectivec=r.languages.extend("c",{string:{pattern:/@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},keyword:/\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete r.languages.objectivec["class-name"],r.languages.objc=r.languages.objectivec,r.languages.ocaml={comment:{pattern:/\(\*[\s\S]*?\*\)/,greedy:!0},char:{pattern:/'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,greedy:!0},string:[{pattern:/"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,greedy:!0},{pattern:/\{([a-z_]*)\|[\s\S]*?\|\1\}/,greedy:!0}],number:[/\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,/\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,/\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i],directive:{pattern:/\B#\w+/,alias:"property"},label:{pattern:/\B~\w+/,alias:"property"},"type-variable":{pattern:/\B'\w+/,alias:"function"},variant:{pattern:/`\w+/,alias:"symbol"},keyword:/\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,boolean:/\b(?:false|true)\b/,"operator-like-punctuation":{pattern:/\[[<>|]|[>|]\]|\{<|>\}/,alias:"punctuation"},operator:/\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,punctuation:/;;|::|[(){}\[\].,:;#]|\b_\b/},r.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},r.languages.python["string-interpolation"].inside.interpolation.inside.rest=r.languages.python,r.languages.py=r.languages.python,r.languages.reason=r.languages.extend("clike",{string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/}),r.languages.insertBefore("reason","class-name",{char:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,greedy:!0},constructor:/\b[A-Z]\w*\b(?!\s*\.)/,label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete r.languages.reason.function,function(e){e.languages.sass=e.languages.extend("css",{comment:{pattern:/^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,lookbehind:!0,greedy:!0}}),e.languages.insertBefore("sass","atrule",{"atrule-line":{pattern:/^(?:[ \t]*)[@+=].+/m,greedy:!0,inside:{atrule:/(?:@[\w-]+|[+=])/}}}),delete e.languages.sass.atrule;var t=/\$[-\w]+|#\{\$[-\w]+\}/,n=[/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,{pattern:/(\s)-(?=\s)/,lookbehind:!0}];e.languages.insertBefore("sass","property",{"variable-line":{pattern:/^[ \t]*\$.+/m,greedy:!0,inside:{punctuation:/:/,variable:t,operator:n}},"property-line":{pattern:/^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,greedy:!0,inside:{property:[/[^:\s]+(?=\s*:)/,{pattern:/(:)[^:\s]+/,lookbehind:!0}],punctuation:/:/,variable:t,operator:n,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,e.languages.insertBefore("sass","punctuation",{selector:{pattern:/^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,lookbehind:!0,greedy:!0}})}(r),r.languages.scss=r.languages.extend("css",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},atrule:{pattern:/@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,inside:{rule:/@[\w-]+/}},url:/(?:[-a-z]+-)?url(?=\()/i,selector:{pattern:/(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,inside:{parent:{pattern:/&/,alias:"important"},placeholder:/%[-\w]+/,variable:/\$[-\w]+|#\{\$[-\w]+\}/}},property:{pattern:/(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,inside:{variable:/\$[-\w]+|#\{\$[-\w]+\}/}}}),r.languages.insertBefore("scss","atrule",{keyword:[/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,{pattern:/( )(?:from|through)(?= )/,lookbehind:!0}]}),r.languages.insertBefore("scss","important",{variable:/\$[-\w]+|#\{\$[-\w]+\}/}),r.languages.insertBefore("scss","function",{"module-modifier":{pattern:/\b(?:as|hide|show|with)\b/i,alias:"keyword"},placeholder:{pattern:/%[-\w]+/,alias:"selector"},statement:{pattern:/\B!(?:default|optional)\b/i,alias:"keyword"},boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"},operator:{pattern:/(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,lookbehind:!0}}),r.languages.scss.atrule.inside.rest=r.languages.scss,function(e){var t={pattern:/(\b\d+)(?:%|[a-z]+)/,lookbehind:!0},n={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0},r={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},url:{pattern:/\burl\((["']?).*?\1\)/i,greedy:!0},string:{pattern:/("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,greedy:!0},interpolation:null,func:null,important:/\B!(?:important|optional)\b/i,keyword:{pattern:/(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,lookbehind:!0},hexcode:/#[\da-f]{3,6}/i,color:[/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:t,number:n,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:t,boolean:/\b(?:false|true)\b/,operator:[/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],number:n,punctuation:/[{}()\[\];:,]/};r.interpolation={pattern:/\{[^\r\n}:]+\}/,alias:"variable",inside:{delimiter:{pattern:/^\{|\}$/,alias:"punctuation"},rest:r}},r.func={pattern:/[\w-]+\([^)]*\).*/,inside:{function:/^[^(]+/,rest:r}},e.languages.stylus={"atrule-declaration":{pattern:/(^[ \t]*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\w-]+/,rest:r}},"variable-declaration":{pattern:/(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,lookbehind:!0,inside:{variable:/^\S+/,rest:r}},statement:{pattern:/(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,lookbehind:!0,inside:{keyword:/^\S+/,rest:r}},"property-declaration":{pattern:/((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,lookbehind:!0,inside:{property:{pattern:/^[^\s:]+/,inside:{interpolation:r.interpolation}},rest:r}},selector:{pattern:/(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,lookbehind:!0,inside:{interpolation:r.interpolation,comment:r.comment,punctuation:/[{},]/}},func:r.func,string:r.string,comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0,greedy:!0},interpolation:r.interpolation,punctuation:/[{}()\[\];:.]/}}(r),function(e){var t=e.util.clone(e.languages.typescript);e.languages.tsx=e.languages.extend("jsx",t),delete e.languages.tsx.parameter,delete e.languages.tsx["literal-property"];var n=e.languages.tsx.tag;n.pattern=RegExp(/(^|[^\w$]|(?=<\/))/.source+"(?:"+n.pattern.source+")",n.pattern.flags),n.lookbehind=!0}(r),r.languages.wasm={comment:[/\(;[\s\S]*?;\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/"(?:\\[\s\S]|[^"\\])*"/,greedy:!0},keyword:[{pattern:/\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,inside:{punctuation:/\./}},/\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],variable:/\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,number:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,punctuation:/[()]/},t.Z=r},29901:function(e){e.exports&&(e.exports={core:{meta:{path:"components/prism-core.js",option:"mandatory"},core:"Core"},themes:{meta:{path:"themes/{id}.css",link:"index.html?theme={id}",exclusive:!0},prism:{title:"Default",option:"default"},"prism-dark":"Dark","prism-funky":"Funky","prism-okaidia":{title:"Okaidia",owner:"ocodia"},"prism-twilight":{title:"Twilight",owner:"remybach"},"prism-coy":{title:"Coy",owner:"tshedor"},"prism-solarizedlight":{title:"Solarized Light",owner:"hectormatos2011 "},"prism-tomorrow":{title:"Tomorrow Night",owner:"Rosey"}},languages:{meta:{path:"components/prism-{id}",noCSS:!0,examplesPath:"examples/prism-{id}",addCheckAll:!0},markup:{title:"Markup",alias:["html","xml","svg","mathml","ssml","atom","rss"],aliasTitles:{html:"HTML",xml:"XML",svg:"SVG",mathml:"MathML",ssml:"SSML",atom:"Atom",rss:"RSS"},option:"default"},css:{title:"CSS",option:"default",modify:"markup"},clike:{title:"C-like",option:"default"},javascript:{title:"JavaScript",require:"clike",modify:"markup",optional:"regex",alias:"js",option:"default"},abap:{title:"ABAP",owner:"dellagustin"},abnf:{title:"ABNF",owner:"RunDevelopment"},actionscript:{title:"ActionScript",require:"javascript",modify:"markup",owner:"Golmote"},ada:{title:"Ada",owner:"Lucretia"},agda:{title:"Agda",owner:"xy-ren"},al:{title:"AL",owner:"RunDevelopment"},antlr4:{title:"ANTLR4",alias:"g4",owner:"RunDevelopment"},apacheconf:{title:"Apache Configuration",owner:"GuiTeK"},apex:{title:"Apex",require:["clike","sql"],owner:"RunDevelopment"},apl:{title:"APL",owner:"ngn"},applescript:{title:"AppleScript",owner:"Golmote"},aql:{title:"AQL",owner:"RunDevelopment"},arduino:{title:"Arduino",require:"cpp",alias:"ino",owner:"dkern"},arff:{title:"ARFF",owner:"Golmote"},armasm:{title:"ARM Assembly",alias:"arm-asm",owner:"RunDevelopment"},arturo:{title:"Arturo",alias:"art",optional:["bash","css","javascript","markup","markdown","sql"],owner:"drkameleon"},asciidoc:{alias:"adoc",title:"AsciiDoc",owner:"Golmote"},aspnet:{title:"ASP.NET (C#)",require:["markup","csharp"],owner:"nauzilus"},asm6502:{title:"6502 Assembly",owner:"kzurawel"},asmatmel:{title:"Atmel AVR Assembly",owner:"cerkit"},autohotkey:{title:"AutoHotkey",owner:"aviaryan"},autoit:{title:"AutoIt",owner:"Golmote"},avisynth:{title:"AviSynth",alias:"avs",owner:"Zinfidel"},"avro-idl":{title:"Avro IDL",alias:"avdl",owner:"RunDevelopment"},awk:{title:"AWK",alias:"gawk",aliasTitles:{gawk:"GAWK"},owner:"RunDevelopment"},bash:{title:"Bash",alias:"shell",aliasTitles:{shell:"Shell"},owner:"zeitgeist87"},basic:{title:"BASIC",owner:"Golmote"},batch:{title:"Batch",owner:"Golmote"},bbcode:{title:"BBcode",alias:"shortcode",aliasTitles:{shortcode:"Shortcode"},owner:"RunDevelopment"},bicep:{title:"Bicep",owner:"johnnyreilly"},birb:{title:"Birb",require:"clike",owner:"Calamity210"},bison:{title:"Bison",require:"c",owner:"Golmote"},bnf:{title:"BNF",alias:"rbnf",aliasTitles:{rbnf:"RBNF"},owner:"RunDevelopment"},brainfuck:{title:"Brainfuck",owner:"Golmote"},brightscript:{title:"BrightScript",owner:"RunDevelopment"},bro:{title:"Bro",owner:"wayward710"},bsl:{title:"BSL (1C:Enterprise)",alias:"oscript",aliasTitles:{oscript:"OneScript"},owner:"Diversus23"},c:{title:"C",require:"clike",owner:"zeitgeist87"},csharp:{title:"C#",require:"clike",alias:["cs","dotnet"],owner:"mvalipour"},cpp:{title:"C++",require:"c",owner:"zeitgeist87"},cfscript:{title:"CFScript",require:"clike",alias:"cfc",owner:"mjclemente"},chaiscript:{title:"ChaiScript",require:["clike","cpp"],owner:"RunDevelopment"},cil:{title:"CIL",owner:"sbrl"},clojure:{title:"Clojure",owner:"troglotit"},cmake:{title:"CMake",owner:"mjrogozinski"},cobol:{title:"COBOL",owner:"RunDevelopment"},coffeescript:{title:"CoffeeScript",require:"javascript",alias:"coffee",owner:"R-osey"},concurnas:{title:"Concurnas",alias:"conc",owner:"jasontatton"},csp:{title:"Content-Security-Policy",owner:"ScottHelme"},cooklang:{title:"Cooklang",owner:"ahue"},coq:{title:"Coq",owner:"RunDevelopment"},crystal:{title:"Crystal",require:"ruby",owner:"MakeNowJust"},"css-extras":{title:"CSS Extras",require:"css",modify:"css",owner:"milesj"},csv:{title:"CSV",owner:"RunDevelopment"},cue:{title:"CUE",owner:"RunDevelopment"},cypher:{title:"Cypher",owner:"RunDevelopment"},d:{title:"D",require:"clike",owner:"Golmote"},dart:{title:"Dart",require:"clike",owner:"Golmote"},dataweave:{title:"DataWeave",owner:"machaval"},dax:{title:"DAX",owner:"peterbud"},dhall:{title:"Dhall",owner:"RunDevelopment"},diff:{title:"Diff",owner:"uranusjr"},django:{title:"Django/Jinja2",require:"markup-templating",alias:"jinja2",owner:"romanvm"},"dns-zone-file":{title:"DNS zone file",owner:"RunDevelopment",alias:"dns-zone"},docker:{title:"Docker",alias:"dockerfile",owner:"JustinBeckwith"},dot:{title:"DOT (Graphviz)",alias:"gv",optional:"markup",owner:"RunDevelopment"},ebnf:{title:"EBNF",owner:"RunDevelopment"},editorconfig:{title:"EditorConfig",owner:"osipxd"},eiffel:{title:"Eiffel",owner:"Conaclos"},ejs:{title:"EJS",require:["javascript","markup-templating"],owner:"RunDevelopment",alias:"eta",aliasTitles:{eta:"Eta"}},elixir:{title:"Elixir",owner:"Golmote"},elm:{title:"Elm",owner:"zwilias"},etlua:{title:"Embedded Lua templating",require:["lua","markup-templating"],owner:"RunDevelopment"},erb:{title:"ERB",require:["ruby","markup-templating"],owner:"Golmote"},erlang:{title:"Erlang",owner:"Golmote"},"excel-formula":{title:"Excel Formula",alias:["xlsx","xls"],owner:"RunDevelopment"},fsharp:{title:"F#",require:"clike",owner:"simonreynolds7"},factor:{title:"Factor",owner:"catb0t"},false:{title:"False",owner:"edukisto"},"firestore-security-rules":{title:"Firestore security rules",require:"clike",owner:"RunDevelopment"},flow:{title:"Flow",require:"javascript",owner:"Golmote"},fortran:{title:"Fortran",owner:"Golmote"},ftl:{title:"FreeMarker Template Language",require:"markup-templating",owner:"RunDevelopment"},gml:{title:"GameMaker Language",alias:"gamemakerlanguage",require:"clike",owner:"LiarOnce"},gap:{title:"GAP (CAS)",owner:"RunDevelopment"},gcode:{title:"G-code",owner:"RunDevelopment"},gdscript:{title:"GDScript",owner:"RunDevelopment"},gedcom:{title:"GEDCOM",owner:"Golmote"},gettext:{title:"gettext",alias:"po",owner:"RunDevelopment"},gherkin:{title:"Gherkin",owner:"hason"},git:{title:"Git",owner:"lgiraudel"},glsl:{title:"GLSL",require:"c",owner:"Golmote"},gn:{title:"GN",alias:"gni",owner:"RunDevelopment"},"linker-script":{title:"GNU Linker Script",alias:"ld",owner:"RunDevelopment"},go:{title:"Go",require:"clike",owner:"arnehormann"},"go-module":{title:"Go module",alias:"go-mod",owner:"RunDevelopment"},graphql:{title:"GraphQL",optional:"markdown",owner:"Golmote"},groovy:{title:"Groovy",require:"clike",owner:"robfletcher"},haml:{title:"Haml",require:"ruby",optional:["css","css-extras","coffeescript","erb","javascript","less","markdown","scss","textile"],owner:"Golmote"},handlebars:{title:"Handlebars",require:"markup-templating",alias:["hbs","mustache"],aliasTitles:{mustache:"Mustache"},owner:"Golmote"},haskell:{title:"Haskell",alias:"hs",owner:"bholst"},haxe:{title:"Haxe",require:"clike",optional:"regex",owner:"Golmote"},hcl:{title:"HCL",owner:"outsideris"},hlsl:{title:"HLSL",require:"c",owner:"RunDevelopment"},hoon:{title:"Hoon",owner:"matildepark"},http:{title:"HTTP",optional:["csp","css","hpkp","hsts","javascript","json","markup","uri"],owner:"danielgtaylor"},hpkp:{title:"HTTP Public-Key-Pins",owner:"ScottHelme"},hsts:{title:"HTTP Strict-Transport-Security",owner:"ScottHelme"},ichigojam:{title:"IchigoJam",owner:"BlueCocoa"},icon:{title:"Icon",owner:"Golmote"},"icu-message-format":{title:"ICU Message Format",owner:"RunDevelopment"},idris:{title:"Idris",alias:"idr",owner:"KeenS",require:"haskell"},ignore:{title:".ignore",owner:"osipxd",alias:["gitignore","hgignore","npmignore"],aliasTitles:{gitignore:".gitignore",hgignore:".hgignore",npmignore:".npmignore"}},inform7:{title:"Inform 7",owner:"Golmote"},ini:{title:"Ini",owner:"aviaryan"},io:{title:"Io",owner:"AlesTsurko"},j:{title:"J",owner:"Golmote"},java:{title:"Java",require:"clike",owner:"sherblot"},javadoc:{title:"JavaDoc",require:["markup","java","javadoclike"],modify:"java",optional:"scala",owner:"RunDevelopment"},javadoclike:{title:"JavaDoc-like",modify:["java","javascript","php"],owner:"RunDevelopment"},javastacktrace:{title:"Java stack trace",owner:"RunDevelopment"},jexl:{title:"Jexl",owner:"czosel"},jolie:{title:"Jolie",require:"clike",owner:"thesave"},jq:{title:"JQ",owner:"RunDevelopment"},jsdoc:{title:"JSDoc",require:["javascript","javadoclike","typescript"],modify:"javascript",optional:["actionscript","coffeescript"],owner:"RunDevelopment"},"js-extras":{title:"JS Extras",require:"javascript",modify:"javascript",optional:["actionscript","coffeescript","flow","n4js","typescript"],owner:"RunDevelopment"},json:{title:"JSON",alias:"webmanifest",aliasTitles:{webmanifest:"Web App Manifest"},owner:"CupOfTea696"},json5:{title:"JSON5",require:"json",owner:"RunDevelopment"},jsonp:{title:"JSONP",require:"json",owner:"RunDevelopment"},jsstacktrace:{title:"JS stack trace",owner:"sbrl"},"js-templates":{title:"JS Templates",require:"javascript",modify:"javascript",optional:["css","css-extras","graphql","markdown","markup","sql"],owner:"RunDevelopment"},julia:{title:"Julia",owner:"cdagnino"},keepalived:{title:"Keepalived Configure",owner:"dev-itsheng"},keyman:{title:"Keyman",owner:"mcdurdin"},kotlin:{title:"Kotlin",alias:["kt","kts"],aliasTitles:{kts:"Kotlin Script"},require:"clike",owner:"Golmote"},kumir:{title:"KuMir (\u041a\u0443\u041c\u0438\u0440)",alias:"kum",owner:"edukisto"},kusto:{title:"Kusto",owner:"RunDevelopment"},latex:{title:"LaTeX",alias:["tex","context"],aliasTitles:{tex:"TeX",context:"ConTeXt"},owner:"japborst"},latte:{title:"Latte",require:["clike","markup-templating","php"],owner:"nette"},less:{title:"Less",require:"css",optional:"css-extras",owner:"Golmote"},lilypond:{title:"LilyPond",require:"scheme",alias:"ly",owner:"RunDevelopment"},liquid:{title:"Liquid",require:"markup-templating",owner:"cinhtau"},lisp:{title:"Lisp",alias:["emacs","elisp","emacs-lisp"],owner:"JuanCaicedo"},livescript:{title:"LiveScript",owner:"Golmote"},llvm:{title:"LLVM IR",owner:"porglezomp"},log:{title:"Log file",optional:"javastacktrace",owner:"RunDevelopment"},lolcode:{title:"LOLCODE",owner:"Golmote"},lua:{title:"Lua",owner:"Golmote"},magma:{title:"Magma (CAS)",owner:"RunDevelopment"},makefile:{title:"Makefile",owner:"Golmote"},markdown:{title:"Markdown",require:"markup",optional:"yaml",alias:"md",owner:"Golmote"},"markup-templating":{title:"Markup templating",require:"markup",owner:"Golmote"},mata:{title:"Mata",owner:"RunDevelopment"},matlab:{title:"MATLAB",owner:"Golmote"},maxscript:{title:"MAXScript",owner:"RunDevelopment"},mel:{title:"MEL",owner:"Golmote"},mermaid:{title:"Mermaid",owner:"RunDevelopment"},mizar:{title:"Mizar",owner:"Golmote"},mongodb:{title:"MongoDB",owner:"airs0urce",require:"javascript"},monkey:{title:"Monkey",owner:"Golmote"},moonscript:{title:"MoonScript",alias:"moon",owner:"RunDevelopment"},n1ql:{title:"N1QL",owner:"TMWilds"},n4js:{title:"N4JS",require:"javascript",optional:"jsdoc",alias:"n4jsd",owner:"bsmith-n4"},"nand2tetris-hdl":{title:"Nand To Tetris HDL",owner:"stephanmax"},naniscript:{title:"Naninovel Script",owner:"Elringus",alias:"nani"},nasm:{title:"NASM",owner:"rbmj"},neon:{title:"NEON",owner:"nette"},nevod:{title:"Nevod",owner:"nezaboodka"},nginx:{title:"nginx",owner:"volado"},nim:{title:"Nim",owner:"Golmote"},nix:{title:"Nix",owner:"Golmote"},nsis:{title:"NSIS",owner:"idleberg"},objectivec:{title:"Objective-C",require:"c",alias:"objc",owner:"uranusjr"},ocaml:{title:"OCaml",owner:"Golmote"},odin:{title:"Odin",owner:"edukisto"},opencl:{title:"OpenCL",require:"c",modify:["c","cpp"],owner:"Milania1"},openqasm:{title:"OpenQasm",alias:"qasm",owner:"RunDevelopment"},oz:{title:"Oz",owner:"Golmote"},parigp:{title:"PARI/GP",owner:"Golmote"},parser:{title:"Parser",require:"markup",owner:"Golmote"},pascal:{title:"Pascal",alias:"objectpascal",aliasTitles:{objectpascal:"Object Pascal"},owner:"Golmote"},pascaligo:{title:"Pascaligo",owner:"DefinitelyNotAGoat"},psl:{title:"PATROL Scripting Language",owner:"bertysentry"},pcaxis:{title:"PC-Axis",alias:"px",owner:"RunDevelopment"},peoplecode:{title:"PeopleCode",alias:"pcode",owner:"RunDevelopment"},perl:{title:"Perl",owner:"Golmote"},php:{title:"PHP",require:"markup-templating",owner:"milesj"},phpdoc:{title:"PHPDoc",require:["php","javadoclike"],modify:"php",owner:"RunDevelopment"},"php-extras":{title:"PHP Extras",require:"php",modify:"php",owner:"milesj"},"plant-uml":{title:"PlantUML",alias:"plantuml",owner:"RunDevelopment"},plsql:{title:"PL/SQL",require:"sql",owner:"Golmote"},powerquery:{title:"PowerQuery",alias:["pq","mscript"],owner:"peterbud"},powershell:{title:"PowerShell",owner:"nauzilus"},processing:{title:"Processing",require:"clike",owner:"Golmote"},prolog:{title:"Prolog",owner:"Golmote"},promql:{title:"PromQL",owner:"arendjr"},properties:{title:".properties",owner:"Golmote"},protobuf:{title:"Protocol Buffers",require:"clike",owner:"just-boris"},pug:{title:"Pug",require:["markup","javascript"],optional:["coffeescript","ejs","handlebars","less","livescript","markdown","scss","stylus","twig"],owner:"Golmote"},puppet:{title:"Puppet",owner:"Golmote"},pure:{title:"Pure",optional:["c","cpp","fortran"],owner:"Golmote"},purebasic:{title:"PureBasic",require:"clike",alias:"pbfasm",owner:"HeX0R101"},purescript:{title:"PureScript",require:"haskell",alias:"purs",owner:"sriharshachilakapati"},python:{title:"Python",alias:"py",owner:"multipetros"},qsharp:{title:"Q#",require:"clike",alias:"qs",owner:"fedonman"},q:{title:"Q (kdb+ database)",owner:"Golmote"},qml:{title:"QML",require:"javascript",owner:"RunDevelopment"},qore:{title:"Qore",require:"clike",owner:"temnroegg"},r:{title:"R",owner:"Golmote"},racket:{title:"Racket",require:"scheme",alias:"rkt",owner:"RunDevelopment"},cshtml:{title:"Razor C#",alias:"razor",require:["markup","csharp"],optional:["css","css-extras","javascript","js-extras"],owner:"RunDevelopment"},jsx:{title:"React JSX",require:["markup","javascript"],optional:["jsdoc","js-extras","js-templates"],owner:"vkbansal"},tsx:{title:"React TSX",require:["jsx","typescript"]},reason:{title:"Reason",require:"clike",owner:"Golmote"},regex:{title:"Regex",owner:"RunDevelopment"},rego:{title:"Rego",owner:"JordanSh"},renpy:{title:"Ren'py",alias:"rpy",owner:"HyuchiaDiego"},rescript:{title:"ReScript",alias:"res",owner:"vmarcosp"},rest:{title:"reST (reStructuredText)",owner:"Golmote"},rip:{title:"Rip",owner:"ravinggenius"},roboconf:{title:"Roboconf",owner:"Golmote"},robotframework:{title:"Robot Framework",alias:"robot",owner:"RunDevelopment"},ruby:{title:"Ruby",require:"clike",alias:"rb",owner:"samflores"},rust:{title:"Rust",owner:"Golmote"},sas:{title:"SAS",optional:["groovy","lua","sql"],owner:"Golmote"},sass:{title:"Sass (Sass)",require:"css",optional:"css-extras",owner:"Golmote"},scss:{title:"Sass (Scss)",require:"css",optional:"css-extras",owner:"MoOx"},scala:{title:"Scala",require:"java",owner:"jozic"},scheme:{title:"Scheme",owner:"bacchus123"},"shell-session":{title:"Shell session",require:"bash",alias:["sh-session","shellsession"],owner:"RunDevelopment"},smali:{title:"Smali",owner:"RunDevelopment"},smalltalk:{title:"Smalltalk",owner:"Golmote"},smarty:{title:"Smarty",require:"markup-templating",optional:"php",owner:"Golmote"},sml:{title:"SML",alias:"smlnj",aliasTitles:{smlnj:"SML/NJ"},owner:"RunDevelopment"},solidity:{title:"Solidity (Ethereum)",alias:"sol",require:"clike",owner:"glachaud"},"solution-file":{title:"Solution file",alias:"sln",owner:"RunDevelopment"},soy:{title:"Soy (Closure Template)",require:"markup-templating",owner:"Golmote"},sparql:{title:"SPARQL",require:"turtle",owner:"Triply-Dev",alias:"rq"},"splunk-spl":{title:"Splunk SPL",owner:"RunDevelopment"},sqf:{title:"SQF: Status Quo Function (Arma 3)",require:"clike",owner:"RunDevelopment"},sql:{title:"SQL",owner:"multipetros"},squirrel:{title:"Squirrel",require:"clike",owner:"RunDevelopment"},stan:{title:"Stan",owner:"RunDevelopment"},stata:{title:"Stata Ado",require:["mata","java","python"],owner:"RunDevelopment"},iecst:{title:"Structured Text (IEC 61131-3)",owner:"serhioromano"},stylus:{title:"Stylus",owner:"vkbansal"},supercollider:{title:"SuperCollider",alias:"sclang",owner:"RunDevelopment"},swift:{title:"Swift",owner:"chrischares"},systemd:{title:"Systemd configuration file",owner:"RunDevelopment"},"t4-templating":{title:"T4 templating",owner:"RunDevelopment"},"t4-cs":{title:"T4 Text Templates (C#)",require:["t4-templating","csharp"],alias:"t4",owner:"RunDevelopment"},"t4-vb":{title:"T4 Text Templates (VB)",require:["t4-templating","vbnet"],owner:"RunDevelopment"},tap:{title:"TAP",owner:"isaacs",require:"yaml"},tcl:{title:"Tcl",owner:"PeterChaplin"},tt2:{title:"Template Toolkit 2",require:["clike","markup-templating"],owner:"gflohr"},textile:{title:"Textile",require:"markup",optional:"css",owner:"Golmote"},toml:{title:"TOML",owner:"RunDevelopment"},tremor:{title:"Tremor",alias:["trickle","troy"],owner:"darach",aliasTitles:{trickle:"trickle",troy:"troy"}},turtle:{title:"Turtle",alias:"trig",aliasTitles:{trig:"TriG"},owner:"jakubklimek"},twig:{title:"Twig",require:"markup-templating",owner:"brandonkelly"},typescript:{title:"TypeScript",require:"javascript",optional:"js-templates",alias:"ts",owner:"vkbansal"},typoscript:{title:"TypoScript",alias:"tsconfig",aliasTitles:{tsconfig:"TSConfig"},owner:"dkern"},unrealscript:{title:"UnrealScript",alias:["uscript","uc"],owner:"RunDevelopment"},uorazor:{title:"UO Razor Script",owner:"jaseowns"},uri:{title:"URI",alias:"url",aliasTitles:{url:"URL"},owner:"RunDevelopment"},v:{title:"V",require:"clike",owner:"taggon"},vala:{title:"Vala",require:"clike",optional:"regex",owner:"TemplarVolk"},vbnet:{title:"VB.Net",require:"basic",owner:"Bigsby"},velocity:{title:"Velocity",require:"markup",owner:"Golmote"},verilog:{title:"Verilog",owner:"a-rey"},vhdl:{title:"VHDL",owner:"a-rey"},vim:{title:"vim",owner:"westonganger"},"visual-basic":{title:"Visual Basic",alias:["vb","vba"],aliasTitles:{vba:"VBA"},owner:"Golmote"},warpscript:{title:"WarpScript",owner:"RunDevelopment"},wasm:{title:"WebAssembly",owner:"Golmote"},"web-idl":{title:"Web IDL",alias:"webidl",owner:"RunDevelopment"},wiki:{title:"Wiki markup",require:"markup",owner:"Golmote"},wolfram:{title:"Wolfram language",alias:["mathematica","nb","wl"],aliasTitles:{mathematica:"Mathematica",nb:"Mathematica Notebook"},owner:"msollami"},wren:{title:"Wren",owner:"clsource"},xeora:{title:"Xeora",require:"markup",alias:"xeoracube",aliasTitles:{xeoracube:"XeoraCube"},owner:"freakmaxi"},"xml-doc":{title:"XML doc (.net)",require:"markup",modify:["csharp","fsharp","vbnet"],owner:"RunDevelopment"},xojo:{title:"Xojo (REALbasic)",owner:"Golmote"},xquery:{title:"XQuery",require:"markup",owner:"Golmote"},yaml:{title:"YAML",alias:"yml",owner:"hason"},yang:{title:"YANG",owner:"RunDevelopment"},zig:{title:"Zig",owner:"RunDevelopment"}},plugins:{meta:{path:"plugins/{id}/prism-{id}",link:"plugins/{id}/"},"line-highlight":{title:"Line Highlight",description:"Highlights specific lines and/or line ranges."},"line-numbers":{title:"Line Numbers",description:"Line number at the beginning of code lines.",owner:"kuba-kubula"},"show-invisibles":{title:"Show Invisibles",description:"Show hidden characters such as tabs and line breaks.",optional:["autolinker","data-uri-highlight"]},autolinker:{title:"Autolinker",description:"Converts URLs and emails in code to clickable links. Parses Markdown links in comments."},wpd:{title:"WebPlatform Docs",description:'Makes tokens link to <a href="https://webplatform.github.io/docs/">WebPlatform.org documentation</a>. The links open in a new tab.'},"custom-class":{title:"Custom Class",description:"This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.",owner:"dvkndn",noCSS:!0},"file-highlight":{title:"File Highlight",description:"Fetch external files and highlight them with Prism. Used on the Prism website itself.",noCSS:!0},"show-language":{title:"Show Language",description:"Display the highlighted language in code blocks (inline code does not show the label).",owner:"nauzilus",noCSS:!0,require:"toolbar"},"jsonp-highlight":{title:"JSONP Highlight",description:"Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).",noCSS:!0,owner:"nauzilus"},"highlight-keywords":{title:"Highlight Keywords",description:"Adds special CSS classes for each keyword for fine-grained highlighting.",owner:"vkbansal",noCSS:!0},"remove-initial-line-feed":{title:"Remove initial line feed",description:"Removes the initial line feed in code blocks.",owner:"Golmote",noCSS:!0},"inline-color":{title:"Inline color",description:"Adds a small inline preview for colors in style sheets.",require:"css-extras",owner:"RunDevelopment"},previewers:{title:"Previewers",description:"Previewers for angles, colors, gradients, easing and time.",require:"css-extras",owner:"Golmote"},autoloader:{title:"Autoloader",description:"Automatically loads the needed languages to highlight the code blocks.",owner:"Golmote",noCSS:!0},"keep-markup":{title:"Keep Markup",description:"Prevents custom markup from being dropped out during highlighting.",owner:"Golmote",optional:"normalize-whitespace",noCSS:!0},"command-line":{title:"Command Line",description:"Display a command line with a prompt and, optionally, the output/response from the commands.",owner:"chriswells0"},"unescaped-markup":{title:"Unescaped Markup",description:"Write markup without having to escape anything."},"normalize-whitespace":{title:"Normalize Whitespace",description:"Supports multiple operations to normalize whitespace in code blocks.",owner:"zeitgeist87",optional:"unescaped-markup",noCSS:!0},"data-uri-highlight":{title:"Data-URI Highlight",description:"Highlights data-URI contents.",owner:"Golmote",noCSS:!0},toolbar:{title:"Toolbar",description:"Attach a toolbar for plugins to easily register buttons on the top of a code block.",owner:"mAAdhaTTah"},"copy-to-clipboard":{title:"Copy to Clipboard Button",description:"Add a button that copies the code block to the clipboard when clicked.",owner:"mAAdhaTTah",require:"toolbar",noCSS:!0},"download-button":{title:"Download Button",description:"A button in the toolbar of a code block adding a convenient way to download a code file.",owner:"Golmote",require:"toolbar",noCSS:!0},"match-braces":{title:"Match braces",description:"Highlights matching braces.",owner:"RunDevelopment"},"diff-highlight":{title:"Diff Highlight",description:"Highlights the code inside diff blocks.",owner:"RunDevelopment",require:"diff"},"filter-highlight-all":{title:"Filter highlightAll",description:"Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.",owner:"RunDevelopment",noCSS:!0},treeview:{title:"Treeview",description:"A language with special styles to highlight file system tree structures.",owner:"Golmote"}}})},2885:function(e,t,n){const r=n(29901),a=n(39642),_=new Set;function i(e){void 0===e?e=Object.keys(r.languages).filter((e=>"meta"!=e)):Array.isArray(e)||(e=[e]);const t=[..._,...Object.keys(Prism.languages)];a(r,e,t).load((e=>{if(!(e in r.languages))return void(i.silent||console.warn("Language does not exist: "+e));const t="./prism-"+e;delete n.c[n(16500).resolve(t)],delete Prism.languages[e],n(16500)(t),_.add(e)}))}i.silent=!1,e.exports=i},6726:function(e,t,n){var r={"./":2885};function a(e){var t=_(e);return n(t)}function _(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=_,e.exports=a,a.id=6726},16500:function(e,t,n){var r={"./":2885};function a(e){var t=_(e);return n(t)}function _(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=_,e.exports=a,a.id=16500},39642:function(e){"use strict";var t=function(){var e=function(){};function t(e,t){Array.isArray(e)?e.forEach(t):null!=e&&t(e,0)}function n(e){for(var t={},n=0,r=e.length;n<r;n++)t[e[n]]=!0;return t}function r(e){var n={},r=[];function a(r,_){if(!(r in n)){_.push(r);var i=_.indexOf(r);if(i<_.length-1)throw new Error("Circular dependency: "+_.slice(i).join(" -> "));var s={},E=e[r];if(E){function o(t){if(!(t in e))throw new Error(r+" depends on an unknown component "+t);if(!(t in s))for(var i in a(t,_),s[t]=!0,n[t])s[i]=!0}t(E.require,o),t(E.optional,o),t(E.modify,o)}n[r]=s,_.pop()}}return function(e){var t=n[e];return t||(a(e,r),t=n[e]),t}}function a(e){for(var t in e)return!0;return!1}return function(_,i,s){var E=function(e){var t={};for(var n in e){var r=e[n];for(var a in r)if("meta"!=a){var _=r[a];t[a]="string"==typeof _?{title:_}:_}}return t}(_),o=function(e){var n;return function(r){if(r in e)return r;if(!n)for(var a in n={},e){var _=e[a];t(_&&_.alias,(function(t){if(t in n)throw new Error(t+" cannot be alias for both "+a+" and "+n[t]);if(t in e)throw new Error(t+" cannot be alias of "+a+" because it is a component.");n[t]=a}))}return n[r]||r}}(E);i=i.map(o),s=(s||[]).map(o);var T=n(i),d=n(s);i.forEach((function e(n){var r=E[n];t(r&&r.require,(function(t){t in d||(T[t]=!0,e(t))}))}));for(var I,u=r(E),N=T;a(N);){for(var R in I={},N){var O=E[R];t(O&&O.modify,(function(e){e in d&&(I[e]=!0)}))}for(var A in d)if(!(A in T))for(var l in u(A))if(l in T){I[A]=!0;break}for(var D in N=I)T[D]=!0}var h={getIds:function(){var e=[];return h.load((function(t){e.push(t)})),e},load:function(t,n){return function(t,n,r,a){var _=a?a.series:void 0,i=a?a.parallel:e,s={},E={};function o(e){if(e in s)return s[e];E[e]=!0;var a,T=[];for(var d in t(e))d in n&&T.push(d);if(0===T.length)a=r(e);else{var I=i(T.map((function(e){var t=o(e);return delete E[e],t})));_?a=_(I,(function(){return r(e)})):r(e)}return s[e]=a}for(var T in n)o(T);var d=[];for(var I in E)d.push(s[I]);return i(d)}(u,T,t,n)}};return h}}();e.exports=t},92703:function(e,t,n){"use strict";var r=n(50414);function a(){}function _(){}_.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,_,i){if(i!==r){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:_,resetWarningCache:a};return n.PropTypes=n,n}},45697:function(e,t,n){e.exports=n(92703)()},50414:function(e){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},64448:function(e,t,n){"use strict";var r=n(67294),a=n(27418),_=n(63840);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var s=new Set,E={};function o(e,t){T(e,t),T(e+"Capture",t)}function T(e,t){for(E[e]=t,e=0;e<t.length;e++)s.add(t[e])}var d=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),I=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,u=Object.prototype.hasOwnProperty,N={},R={};function O(e,t,n,r,a,_,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=_,this.removeEmptyString=i}var A={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){A[e]=new O(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];A[t]=new O(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){A[e]=new O(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){A[e]=new O(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){A[e]=new O(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){A[e]=new O(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){A[e]=new O(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){A[e]=new O(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){A[e]=new O(e,5,!1,e.toLowerCase(),null,!1,!1)}));var l=/[\-:]([a-z])/g;function D(e){return e[1].toUpperCase()}function h(e,t,n,r){var a=A.hasOwnProperty(t)?A[t]:null;(null!==a?0===a.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!u.call(R,e)||!u.call(N,e)&&(I.test(e)?R[e]=!0:(N[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(l,D);A[t]=new O(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(l,D);A[t]=new O(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(l,D);A[t]=new O(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){A[e]=new O(e,1,!1,e.toLowerCase(),null,!1,!1)})),A.xlinkHref=new O("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){A[e]=new O(e,1,!1,e.toLowerCase(),null,!0,!0)}));var S=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,p=60103,c=60106,P=60107,C=60108,U=60114,f=60109,m=60110,L=60112,F=60113,M=60120,w=60115,g=60116,b=60121,y=60128,X=60129,v=60130,V=60131;if("function"==typeof Symbol&&Symbol.for){var B=Symbol.for;p=B("react.element"),c=B("react.portal"),P=B("react.fragment"),C=B("react.strict_mode"),U=B("react.profiler"),f=B("react.provider"),m=B("react.context"),L=B("react.forward_ref"),F=B("react.suspense"),M=B("react.suspense_list"),w=B("react.memo"),g=B("react.lazy"),b=B("react.block"),B("react.scope"),y=B("react.opaque.id"),X=B("react.debug_trace_mode"),v=B("react.offscreen"),V=B("react.legacy_hidden")}var Y,K="function"==typeof Symbol&&Symbol.iterator;function G(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=K&&e[K]||e["@@iterator"])?e:null}function q(e){if(void 0===Y)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);Y=t&&t[1]||""}return"\n"+Y+e}var k=!1;function x(e,t){if(!e||k)return"";k=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(E){var r=E}Reflect.construct(e,[],t)}else{try{t.call()}catch(E){r=E}e.call(t.prototype)}else{try{throw Error()}catch(E){r=E}e()}}catch(E){if(E&&r&&"string"==typeof E.stack){for(var a=E.stack.split("\n"),_=r.stack.split("\n"),i=a.length-1,s=_.length-1;1<=i&&0<=s&&a[i]!==_[s];)s--;for(;1<=i&&0<=s;i--,s--)if(a[i]!==_[s]){if(1!==i||1!==s)do{if(i--,0>--s||a[i]!==_[s])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=s);break}}}finally{k=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?q(e):""}function H(e){switch(e.tag){case 5:return q(e.type);case 16:return q("Lazy");case 13:return q("Suspense");case 19:return q("SuspenseList");case 0:case 2:case 15:return e=x(e.type,!1);case 11:return e=x(e.type.render,!1);case 22:return e=x(e.type._render,!1);case 1:return e=x(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case P:return"Fragment";case c:return"Portal";case U:return"Profiler";case C:return"StrictMode";case F:return"Suspense";case M:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case m:return(e.displayName||"Context")+".Consumer";case f:return(e._context.displayName||"Context")+".Provider";case L:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case w:return Q(e.type);case b:return Q(e._render);case g:t=e._payload,e=e._init;try{return Q(e(t))}catch(n){}}return null}function j(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function W(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function z(e){e._valueTracker||(e._valueTracker=function(e){var t=W(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,_=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,_.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Z(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function $(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=j(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&h(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=j(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,j(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&$(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _e(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+j(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function se(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ee(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:j(n)}}function oe(e,t){var n=j(t.value),r=j(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Te(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var de="http://www.w3.org/1999/xhtml",Ie="http://www.w3.org/2000/svg";function ue(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ne(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ue(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Re,Oe,Ae=(Oe=function(e,t){if(e.namespaceURI!==Ie||"innerHTML"in e)e.innerHTML=t;else{for((Re=Re||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Re.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return Oe(e,t)}))}:Oe);function le(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var De={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function Se(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||De.hasOwnProperty(e)&&De[e]?(""+t).trim():t+"px"}function pe(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=Se(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(De).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),De[t]=De[e]}))}));var ce=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Pe(e,t){if(t){if(ce[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function Ce(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ue(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var fe=null,me=null,Le=null;function Fe(e){if(e=ra(e)){if("function"!=typeof fe)throw Error(i(280));var t=e.stateNode;t&&(t=_a(t),fe(e.stateNode,e.type,t))}}function Me(e){me?Le?Le.push(e):Le=[e]:me=e}function we(){if(me){var e=me,t=Le;if(Le=me=null,Fe(e),t)for(e=0;e<t.length;e++)Fe(t[e])}}function ge(e,t){return e(t)}function be(e,t,n,r,a){return e(t,n,r,a)}function ye(){}var Xe=ge,ve=!1,Ve=!1;function Be(){null===me&&null===Le||(ye(),we())}function Ye(e,t){var n=e.stateNode;if(null===n)return null;var r=_a(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var Ke=!1;if(d)try{var Ge={};Object.defineProperty(Ge,"passive",{get:function(){Ke=!0}}),window.addEventListener("test",Ge,Ge),window.removeEventListener("test",Ge,Ge)}catch(Oe){Ke=!1}function qe(e,t,n,r,a,_,i,s,E){var o=Array.prototype.slice.call(arguments,3);try{t.apply(n,o)}catch(T){this.onError(T)}}var ke=!1,xe=null,He=!1,Qe=null,je={onError:function(e){ke=!0,xe=e}};function We(e,t,n,r,a,_,i,s,E){ke=!1,xe=null,qe.apply(je,arguments)}function ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ze(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function $e(e){if(ze(e)!==e)throw Error(i(188))}function Je(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=ze(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var _=a.alternate;if(null===_){if(null!==(r=a.return)){n=r;continue}break}if(a.child===_.child){for(_=a.child;_;){if(_===n)return $e(a),e;if(_===r)return $e(a),t;_=_.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=_;else{for(var s=!1,E=a.child;E;){if(E===n){s=!0,n=a,r=_;break}if(E===r){s=!0,r=a,n=_;break}E=E.sibling}if(!s){for(E=_.child;E;){if(E===n){s=!0,n=_,r=a;break}if(E===r){s=!0,r=_,n=a;break}E=E.sibling}if(!s)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var tt,nt,rt,at,_t=!1,it=[],st=null,Et=null,ot=null,Tt=new Map,dt=new Map,It=[],ut="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Nt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function Rt(e,t){switch(e){case"focusin":case"focusout":st=null;break;case"dragenter":case"dragleave":Et=null;break;case"mouseover":case"mouseout":ot=null;break;case"pointerover":case"pointerout":Tt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":dt.delete(t.pointerId)}}function Ot(e,t,n,r,a,_){return null===e||e.nativeEvent!==_?(e=Nt(t,n,r,a,_),null!==t&&(null!==(t=ra(t))&&nt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function At(e){var t=na(e.target);if(null!==t){var n=ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ze(n)))return e.blockedOn=t,void at(e.lanePriority,(function(){_.unstable_runWithPriority(e.priority,(function(){rt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function lt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ra(n))&&nt(t),e.blockedOn=n,!1;t.shift()}return!0}function Dt(e,t,n){lt(e)&&n.delete(t)}function ht(){for(_t=!1;0<it.length;){var e=it[0];if(null!==e.blockedOn){null!==(e=ra(e.blockedOn))&&tt(e);break}for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&it.shift()}null!==st&&lt(st)&&(st=null),null!==Et&&lt(Et)&&(Et=null),null!==ot&&lt(ot)&&(ot=null),Tt.forEach(Dt),dt.forEach(Dt)}function St(e,t){e.blockedOn===t&&(e.blockedOn=null,_t||(_t=!0,_.unstable_scheduleCallback(_.unstable_NormalPriority,ht)))}function pt(e){function t(t){return St(t,e)}if(0<it.length){St(it[0],e);for(var n=1;n<it.length;n++){var r=it[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==st&&St(st,e),null!==Et&&St(Et,e),null!==ot&&St(ot,e),Tt.forEach(t),dt.forEach(t),n=0;n<It.length;n++)(r=It[n]).blockedOn===e&&(r.blockedOn=null);for(;0<It.length&&null===(n=It[0]).blockedOn;)At(n),null===n.blockedOn&&It.shift()}function ct(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Pt={animationend:ct("Animation","AnimationEnd"),animationiteration:ct("Animation","AnimationIteration"),animationstart:ct("Animation","AnimationStart"),transitionend:ct("Transition","TransitionEnd")},Ct={},Ut={};function ft(e){if(Ct[e])return Ct[e];if(!Pt[e])return e;var t,n=Pt[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ut)return Ct[e]=n[t];return e}d&&(Ut=document.createElement("div").style,"AnimationEvent"in window||(delete Pt.animationend.animation,delete Pt.animationiteration.animation,delete Pt.animationstart.animation),"TransitionEvent"in window||delete Pt.transitionend.transition);var mt=ft("animationend"),Lt=ft("animationiteration"),Ft=ft("animationstart"),Mt=ft("transitionend"),wt=new Map,gt=new Map,bt=["abort","abort",mt,"animationEnd",Lt,"animationIteration",Ft,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Mt,"transitionEnd","waiting","waiting"];function yt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),gt.set(r,t),wt.set(r,a),o(a,[r])}}(0,_.unstable_now)();var Xt=8;function vt(e){if(0!=(1&e))return Xt=15,1;if(0!=(2&e))return Xt=14,2;if(0!=(4&e))return Xt=13,4;var t=24&e;return 0!==t?(Xt=12,t):0!=(32&e)?(Xt=11,32):0!==(t=192&e)?(Xt=10,t):0!=(256&e)?(Xt=9,256):0!==(t=3584&e)?(Xt=8,t):0!=(4096&e)?(Xt=7,4096):0!==(t=4186112&e)?(Xt=6,t):0!==(t=62914560&e)?(Xt=5,t):67108864&e?(Xt=4,67108864):0!=(134217728&e)?(Xt=3,134217728):0!==(t=805306368&e)?(Xt=2,t):0!=(1073741824&e)?(Xt=1,1073741824):(Xt=8,e)}function Vt(e,t){var n=e.pendingLanes;if(0===n)return Xt=0;var r=0,a=0,_=e.expiredLanes,i=e.suspendedLanes,s=e.pingedLanes;if(0!==_)r=_,a=Xt=15;else if(0!==(_=134217727&n)){var E=_&~i;0!==E?(r=vt(E),a=Xt):0!==(s&=_)&&(r=vt(s),a=Xt)}else 0!==(_=n&~i)?(r=vt(_),a=Xt):0!==s&&(r=vt(s),a=Xt);if(0===r)return 0;if(r=n&((0>(r=31-kt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(vt(t),a<=Xt)return t;Xt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-kt(t)),r|=e[n],t&=~a;return r}function Bt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Yt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Kt(24&~t))?Yt(10,t):e;case 10:return 0===(e=Kt(192&~t))?Yt(8,t):e;case 8:return 0===(e=Kt(3584&~t))&&(0===(e=Kt(4186112&~t))&&(e=512)),e;case 2:return 0===(t=Kt(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Kt(e){return e&-e}function Gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function qt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-kt(t)]=n}var kt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(xt(e)/Ht|0)|0},xt=Math.log,Ht=Math.LN2;var Qt=_.unstable_UserBlockingPriority,jt=_.unstable_runWithPriority,Wt=!0;function zt(e,t,n,r){ve||ye();var a=$t,_=ve;ve=!0;try{be(a,e,t,n,r)}finally{(ve=_)||Be()}}function Zt(e,t,n,r){jt(Qt,$t.bind(null,e,t,n,r))}function $t(e,t,n,r){var a;if(Wt)if((a=0==(4&t))&&0<it.length&&-1<ut.indexOf(e))e=Nt(null,e,t,n,r),it.push(e);else{var _=Jt(e,t,n,r);if(null===_)a&&Rt(e,r);else{if(a){if(-1<ut.indexOf(e))return e=Nt(_,e,t,n,r),void it.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return st=Ot(st,e,t,n,r,a),!0;case"dragenter":return Et=Ot(Et,e,t,n,r,a),!0;case"mouseover":return ot=Ot(ot,e,t,n,r,a),!0;case"pointerover":var _=a.pointerId;return Tt.set(_,Ot(Tt.get(_)||null,e,t,n,r,a)),!0;case"gotpointercapture":return _=a.pointerId,dt.set(_,Ot(dt.get(_)||null,e,t,n,r,a)),!0}return!1}(_,e,t,n,r))return;Rt(e,r)}yr(e,t,r,null,n)}}}function Jt(e,t,n,r){var a=Ue(r);if(null!==(a=na(a))){var _=ze(a);if(null===_)a=null;else{var i=_.tag;if(13===i){if(null!==(a=Ze(_)))return a;a=null}else if(3===i){if(_.stateNode.hydrate)return 3===_.tag?_.stateNode.containerInfo:null;a=null}else _!==a&&(a=null)}}return yr(e,t,r,a,n),null}var en=null,tn=null,nn=null;function rn(){if(nn)return nn;var e,t,n=tn,r=n.length,a="value"in en?en.value:en.textContent,_=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[_-t];t++);return nn=a.slice(e,1<t?1-t:void 0)}function an(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function _n(){return!0}function sn(){return!1}function En(e){function t(t,n,r,a,_){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=_,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?_n:sn,this.isPropagationStopped=sn,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=_n)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=_n)},persist:function(){},isPersistent:_n}),t}var on,Tn,dn,In={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=En(In),Nn=a({},In,{view:0,detail:0}),Rn=En(Nn),On=a({},Nn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:mn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==dn&&(dn&&"mousemove"===e.type?(on=e.screenX-dn.screenX,Tn=e.screenY-dn.screenY):Tn=on=0,dn=e),on)},movementY:function(e){return"movementY"in e?e.movementY:Tn}}),An=En(On),ln=En(a({},On,{dataTransfer:0})),Dn=En(a({},Nn,{relatedTarget:0})),hn=En(a({},In,{animationName:0,elapsedTime:0,pseudoElement:0})),Sn=a({},In,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),pn=En(Sn),cn=En(a({},In,{data:0})),Pn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Un={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function fn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Un[e])&&!!t[e]}function mn(){return fn}var Ln=a({},Nn,{key:function(e){if(e.key){var t=Pn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=an(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Cn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:mn,charCode:function(e){return"keypress"===e.type?an(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?an(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Fn=En(Ln),Mn=En(a({},On,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),wn=En(a({},Nn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:mn})),gn=En(a({},In,{propertyName:0,elapsedTime:0,pseudoElement:0})),bn=a({},On,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),yn=En(bn),Xn=[9,13,27,32],vn=d&&"CompositionEvent"in window,Vn=null;d&&"documentMode"in document&&(Vn=document.documentMode);var Bn=d&&"TextEvent"in window&&!Vn,Yn=d&&(!vn||Vn&&8<Vn&&11>=Vn),Kn=String.fromCharCode(32),Gn=!1;function qn(e,t){switch(e){case"keyup":return-1!==Xn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function kn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var xn=!1;var Hn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hn[e.type]:"textarea"===t}function jn(e,t,n,r){Me(r),0<(t=vr(t,"onChange")).length&&(n=new un("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,zn=null;function Zn(e){Lr(e,0)}function $n(e){if(Z(aa(e)))return e}function Jn(e,t){if("change"===e)return t}var er=!1;if(d){var tr;if(d){var nr="oninput"in document;if(!nr){var rr=document.createElement("div");rr.setAttribute("oninput","return;"),nr="function"==typeof rr.oninput}tr=nr}else tr=!1;er=tr&&(!document.documentMode||9<document.documentMode)}function ar(){Wn&&(Wn.detachEvent("onpropertychange",_r),zn=Wn=null)}function _r(e){if("value"===e.propertyName&&$n(zn)){var t=[];if(jn(t,zn,e,Ue(e)),e=Zn,ve)e(t);else{ve=!0;try{ge(e,t)}finally{ve=!1,Be()}}}}function ir(e,t,n){"focusin"===e?(ar(),zn=n,(Wn=t).attachEvent("onpropertychange",_r)):"focusout"===e&&ar()}function sr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return $n(zn)}function Er(e,t){if("click"===e)return $n(t)}function or(e,t){if("input"===e||"change"===e)return $n(t)}var Tr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},dr=Object.prototype.hasOwnProperty;function Ir(e,t){if(Tr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!dr.call(t,n[r])||!Tr(e[n[r]],t[n[r]]))return!1;return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Nr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function Rr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?Rr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function Or(){for(var e=window,t=$();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=$((e=t.contentWindow).document)}return t}function Ar(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var lr=d&&"documentMode"in document&&11>=document.documentMode,Dr=null,hr=null,Sr=null,pr=!1;function cr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;pr||null==Dr||Dr!==$(r)||("selectionStart"in(r=Dr)&&Ar(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},Sr&&Ir(Sr,r)||(Sr=r,0<(r=vr(hr,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=Dr)))}yt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),yt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),yt(bt,2);for(var Pr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Cr=0;Cr<Pr.length;Cr++)gt.set(Pr[Cr],0);T("onMouseEnter",["mouseout","mouseover"]),T("onMouseLeave",["mouseout","mouseover"]),T("onPointerEnter",["pointerout","pointerover"]),T("onPointerLeave",["pointerout","pointerover"]),o("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),o("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),o("onBeforeInput",["compositionend","keypress","textInput","paste"]),o("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),o("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),o("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ur="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),fr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ur));function mr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,_,s,E,o){if(We.apply(this,arguments),ke){if(!ke)throw Error(i(198));var T=xe;ke=!1,xe=null,He||(He=!0,Qe=T)}}(r,t,void 0,e),e.currentTarget=null}function Lr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var _=void 0;if(t)for(var i=r.length-1;0<=i;i--){var s=r[i],E=s.instance,o=s.currentTarget;if(s=s.listener,E!==_&&a.isPropagationStopped())break e;mr(a,s,o),_=E}else for(i=0;i<r.length;i++){if(E=(s=r[i]).instance,o=s.currentTarget,s=s.listener,E!==_&&a.isPropagationStopped())break e;mr(a,s,o),_=E}}}if(He)throw e=Qe,He=!1,Qe=null,e}function Fr(e,t){var n=ia(t),r=e+"__bubble";n.has(r)||(br(t,e,2,!1),n.add(r))}var Mr="_reactListening"+Math.random().toString(36).slice(2);function wr(e){e[Mr]||(e[Mr]=!0,s.forEach((function(t){fr.has(t)||gr(t,!1,e,null),gr(t,!0,e,null)})))}function gr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,_=n;if("selectionchange"===e&&9!==n.nodeType&&(_=n.ownerDocument),null!==r&&!t&&fr.has(e)){if("scroll"!==e)return;a|=2,_=r}var i=ia(_),s=e+"__"+(t?"capture":"bubble");i.has(s)||(t&&(a|=4),br(_,e,a,t),i.add(s))}function br(e,t,n,r){var a=gt.get(t);switch(void 0===a?2:a){case 0:a=zt;break;case 1:a=Zt;break;default:a=$t}n=a.bind(null,t,n,e),a=void 0,!Ke||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function yr(e,t,n,r,a){var _=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var s=r.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var E=i.tag;if((3===E||4===E)&&((E=i.stateNode.containerInfo)===a||8===E.nodeType&&E.parentNode===a))return;i=i.return}for(;null!==s;){if(null===(i=na(s)))return;if(5===(E=i.tag)||6===E){r=_=i;continue e}s=s.parentNode}}r=r.return}!function(e,t,n){if(Ve)return e(t,n);Ve=!0;try{Xe(e,t,n)}finally{Ve=!1,Be()}}((function(){var r=_,a=Ue(n),i=[];e:{var s=wt.get(e);if(void 0!==s){var E=un,o=e;switch(e){case"keypress":if(0===an(n))break e;case"keydown":case"keyup":E=Fn;break;case"focusin":o="focus",E=Dn;break;case"focusout":o="blur",E=Dn;break;case"beforeblur":case"afterblur":E=Dn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":E=An;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":E=ln;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":E=wn;break;case mt:case Lt:case Ft:E=hn;break;case Mt:E=gn;break;case"scroll":E=Rn;break;case"wheel":E=yn;break;case"copy":case"cut":case"paste":E=pn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":E=Mn}var T=0!=(4&t),d=!T&&"scroll"===e,I=T?null!==s?s+"Capture":null:s;T=[];for(var u,N=r;null!==N;){var R=(u=N).stateNode;if(5===u.tag&&null!==R&&(u=R,null!==I&&(null!=(R=Ye(N,I))&&T.push(Xr(N,R,u)))),d)break;N=N.return}0<T.length&&(s=new E(s,o,null,n,a),i.push({event:s,listeners:T}))}}if(0==(7&t)){if(E="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(o=n.relatedTarget||n.fromElement)||!na(o)&&!o[ea])&&(E||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,E?(E=r,null!==(o=(o=n.relatedTarget||n.toElement)?na(o):null)&&(o!==(d=ze(o))||5!==o.tag&&6!==o.tag)&&(o=null)):(E=null,o=r),E!==o)){if(T=An,R="onMouseLeave",I="onMouseEnter",N="mouse","pointerout"!==e&&"pointerover"!==e||(T=Mn,R="onPointerLeave",I="onPointerEnter",N="pointer"),d=null==E?s:aa(E),u=null==o?s:aa(o),(s=new T(R,N+"leave",E,n,a)).target=d,s.relatedTarget=u,R=null,na(a)===r&&((T=new T(I,N+"enter",o,n,a)).target=u,T.relatedTarget=d,R=T),d=R,E&&o)e:{for(I=o,N=0,u=T=E;u;u=Vr(u))N++;for(u=0,R=I;R;R=Vr(R))u++;for(;0<N-u;)T=Vr(T),N--;for(;0<u-N;)I=Vr(I),u--;for(;N--;){if(T===I||null!==I&&T===I.alternate)break e;T=Vr(T),I=Vr(I)}T=null}else T=null;null!==E&&Br(i,s,E,T,!1),null!==o&&null!==d&&Br(i,d,o,T,!0)}if("select"===(E=(s=r?aa(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===E&&"file"===s.type)var O=Jn;else if(Qn(s))if(er)O=or;else{O=sr;var A=ir}else(E=s.nodeName)&&"input"===E.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(O=Er);switch(O&&(O=O(e,r))?jn(i,O,n,a):(A&&A(e,s,r),"focusout"===e&&(A=s._wrapperState)&&A.controlled&&"number"===s.type&&ae(s,"number",s.value)),A=r?aa(r):window,e){case"focusin":(Qn(A)||"true"===A.contentEditable)&&(Dr=A,hr=r,Sr=null);break;case"focusout":Sr=hr=Dr=null;break;case"mousedown":pr=!0;break;case"contextmenu":case"mouseup":case"dragend":pr=!1,cr(i,n,a);break;case"selectionchange":if(lr)break;case"keydown":case"keyup":cr(i,n,a)}var l;if(vn)e:{switch(e){case"compositionstart":var D="onCompositionStart";break e;case"compositionend":D="onCompositionEnd";break e;case"compositionupdate":D="onCompositionUpdate";break e}D=void 0}else xn?qn(e,n)&&(D="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(D="onCompositionStart");D&&(Yn&&"ko"!==n.locale&&(xn||"onCompositionStart"!==D?"onCompositionEnd"===D&&xn&&(l=rn()):(tn="value"in(en=a)?en.value:en.textContent,xn=!0)),0<(A=vr(r,D)).length&&(D=new cn(D,e,null,n,a),i.push({event:D,listeners:A}),l?D.data=l:null!==(l=kn(n))&&(D.data=l))),(l=Bn?function(e,t){switch(e){case"compositionend":return kn(t);case"keypress":return 32!==t.which?null:(Gn=!0,Kn);case"textInput":return(e=t.data)===Kn&&Gn?null:e;default:return null}}(e,n):function(e,t){if(xn)return"compositionend"===e||!vn&&qn(e,t)?(e=rn(),nn=tn=en=null,xn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Yn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=vr(r,"onBeforeInput")).length&&(a=new cn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=l))}Lr(i,t)}))}function Xr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function vr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,_=a.stateNode;5===a.tag&&null!==_&&(a=_,null!=(_=Ye(e,n))&&r.unshift(Xr(e,_,a)),null!=(_=Ye(e,t))&&r.push(Xr(e,_,a))),e=e.return}return r}function Vr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Br(e,t,n,r,a){for(var _=t._reactName,i=[];null!==n&&n!==r;){var s=n,E=s.alternate,o=s.stateNode;if(null!==E&&E===r)break;5===s.tag&&null!==o&&(s=o,a?null!=(E=Ye(n,_))&&i.unshift(Xr(n,E,s)):a||null!=(E=Ye(n,_))&&i.push(Xr(n,E,s))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function Yr(){}var Kr=null,Gr=null;function qr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function kr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var xr="function"==typeof setTimeout?setTimeout:void 0,Hr="function"==typeof clearTimeout?clearTimeout:void 0;function Qr(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function jr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Wr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var zr=0;var Zr=Math.random().toString(36).slice(2),$r="__reactFiber$"+Zr,Jr="__reactProps$"+Zr,ea="__reactContainer$"+Zr,ta="__reactEvents$"+Zr;function na(e){var t=e[$r];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ea]||n[$r]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Wr(e);null!==e;){if(n=e[$r])return n;e=Wr(e)}return t}n=(e=n).parentNode}return null}function ra(e){return!(e=e[$r]||e[ea])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function aa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function _a(e){return e[Jr]||null}function ia(e){var t=e[ta];return void 0===t&&(t=e[ta]=new Set),t}var sa=[],Ea=-1;function oa(e){return{current:e}}function Ta(e){0>Ea||(e.current=sa[Ea],sa[Ea]=null,Ea--)}function da(e,t){Ea++,sa[Ea]=e.current,e.current=t}var Ia={},ua=oa(Ia),Na=oa(!1),Ra=Ia;function Oa(e,t){var n=e.type.contextTypes;if(!n)return Ia;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,_={};for(a in n)_[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=_),_}function Aa(e){return null!=(e=e.childContextTypes)}function la(){Ta(Na),Ta(ua)}function Da(e,t,n){if(ua.current!==Ia)throw Error(i(168));da(ua,t),da(Na,n)}function ha(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var _ in r=r.getChildContext())if(!(_ in e))throw Error(i(108,Q(t)||"Unknown",_));return a({},n,r)}function Sa(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ia,Ra=ua.current,da(ua,e),da(Na,Na.current),!0}function pa(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=ha(e,t,Ra),r.__reactInternalMemoizedMergedChildContext=e,Ta(Na),Ta(ua),da(ua,e)):Ta(Na),da(Na,n)}var ca=null,Pa=null,Ca=_.unstable_runWithPriority,Ua=_.unstable_scheduleCallback,fa=_.unstable_cancelCallback,ma=_.unstable_shouldYield,La=_.unstable_requestPaint,Fa=_.unstable_now,Ma=_.unstable_getCurrentPriorityLevel,wa=_.unstable_ImmediatePriority,ga=_.unstable_UserBlockingPriority,ba=_.unstable_NormalPriority,ya=_.unstable_LowPriority,Xa=_.unstable_IdlePriority,va={},Va=void 0!==La?La:function(){},Ba=null,Ya=null,Ka=!1,Ga=Fa(),qa=1e4>Ga?Fa:function(){return Fa()-Ga};function ka(){switch(Ma()){case wa:return 99;case ga:return 98;case ba:return 97;case ya:return 96;case Xa:return 95;default:throw Error(i(332))}}function xa(e){switch(e){case 99:return wa;case 98:return ga;case 97:return ba;case 96:return ya;case 95:return Xa;default:throw Error(i(332))}}function Ha(e,t){return e=xa(e),Ca(e,t)}function Qa(e,t,n){return e=xa(e),Ua(e,t,n)}function ja(){if(null!==Ya){var e=Ya;Ya=null,fa(e)}Wa()}function Wa(){if(!Ka&&null!==Ba){Ka=!0;var e=0;try{var t=Ba;Ha(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ba=null}catch(n){throw null!==Ba&&(Ba=Ba.slice(e+1)),Ua(wa,ja),n}finally{Ka=!1}}}var za=S.ReactCurrentBatchConfig;function Za(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var $a=oa(null),Ja=null,e_=null,t_=null;function n_(){t_=e_=Ja=null}function r_(e){var t=$a.current;Ta($a),e.type._context._currentValue=t}function a_(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function __(e,t){Ja=e,t_=e_=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Xi=!0),e.firstContext=null)}function i_(e,t){if(t_!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(t_=e,t=1073741823),t={context:e,observedBits:t,next:null},null===e_){if(null===Ja)throw Error(i(308));e_=t,Ja.dependencies={lanes:0,firstContext:t,responders:null}}else e_=e_.next=t;return e._currentValue}var s_=!1;function E_(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function o_(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function T_(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function d_(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function I_(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,_=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===_?a=_=i:_=_.next=i,n=n.next}while(null!==n);null===_?a=_=t:_=_.next=t}else a=_=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:_,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function u_(e,t,n,r){var _=e.updateQueue;s_=!1;var i=_.firstBaseUpdate,s=_.lastBaseUpdate,E=_.shared.pending;if(null!==E){_.shared.pending=null;var o=E,T=o.next;o.next=null,null===s?i=T:s.next=T,s=o;var d=e.alternate;if(null!==d){var I=(d=d.updateQueue).lastBaseUpdate;I!==s&&(null===I?d.firstBaseUpdate=T:I.next=T,d.lastBaseUpdate=o)}}if(null!==i){for(I=_.baseState,s=0,d=T=o=null;;){E=i.lane;var u=i.eventTime;if((r&E)===E){null!==d&&(d=d.next={eventTime:u,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var N=e,R=i;switch(E=t,u=n,R.tag){case 1:if("function"==typeof(N=R.payload)){I=N.call(u,I,E);break e}I=N;break e;case 3:N.flags=-4097&N.flags|64;case 0:if(null==(E="function"==typeof(N=R.payload)?N.call(u,I,E):N))break e;I=a({},I,E);break e;case 2:s_=!0}}null!==i.callback&&(e.flags|=32,null===(E=_.effects)?_.effects=[i]:E.push(i))}else u={eventTime:u,lane:E,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===d?(T=d=u,o=I):d=d.next=u,s|=E;if(null===(i=i.next)){if(null===(E=_.shared.pending))break;i=E.next,E.next=null,_.lastBaseUpdate=E,_.shared.pending=null}}null===d&&(o=I),_.baseState=o,_.firstBaseUpdate=T,_.lastBaseUpdate=d,Ys|=s,e.lanes=s,e.memoizedState=I}}function N_(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var R_=(new r.Component).refs;function O_(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var A_={isMounted:function(e){return!!(e=e._reactInternals)&&ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=dE(),a=IE(e),_=T_(r,a);_.payload=t,null!=n&&(_.callback=n),d_(e,_),uE(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=dE(),a=IE(e),_=T_(r,a);_.tag=1,_.payload=t,null!=n&&(_.callback=n),d_(e,_),uE(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=dE(),r=IE(e),a=T_(n,r);a.tag=2,null!=t&&(a.callback=t),d_(e,a),uE(e,r,n)}};function l_(e,t,n,r,a,_,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,_,i):!t.prototype||!t.prototype.isPureReactComponent||(!Ir(n,r)||!Ir(a,_))}function D_(e,t,n){var r=!1,a=Ia,_=t.contextType;return"object"==typeof _&&null!==_?_=i_(_):(a=Aa(t)?Ra:ua.current,_=(r=null!=(r=t.contextTypes))?Oa(e,a):Ia),t=new t(n,_),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=A_,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=_),t}function h_(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&A_.enqueueReplaceState(t,t.state,null)}function S_(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=R_,E_(e);var _=t.contextType;"object"==typeof _&&null!==_?a.context=i_(_):(_=Aa(t)?Ra:ua.current,a.context=Oa(e,_)),u_(e,n,a,r),a.state=e.memoizedState,"function"==typeof(_=t.getDerivedStateFromProps)&&(O_(e,t,_,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&A_.enqueueReplaceState(a,a.state,null),u_(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var p_=Array.isArray;function c_(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:(t=function(e){var t=r.refs;t===R_&&(t=r.refs={}),null===e?delete t[a]:t[a]=e},t._stringRef=a,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function P_(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function C_(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=xE(e,t)).index=0,e.sibling=null,e}function _(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function s(t){return e&&null===t.alternate&&(t.flags=2),t}function E(e,t,n,r){return null===t||6!==t.tag?((t=WE(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function o(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=c_(e,t,n),r.return=e,r):((r=HE(n.type,n.key,n.props,null,e.mode,r)).ref=c_(e,t,n),r.return=e,r)}function T(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=zE(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,_){return null===t||7!==t.tag?((t=QE(n,e.mode,r,_)).return=e,t):((t=a(t,n)).return=e,t)}function I(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=WE(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case p:return(n=HE(t.type,t.key,t.props,null,e.mode,n)).ref=c_(e,null,t),n.return=e,n;case c:return(t=zE(t,e.mode,n)).return=e,t}if(p_(t)||G(t))return(t=QE(t,e.mode,n,null)).return=e,t;P_(e,t)}return null}function u(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:E(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case p:return n.key===a?n.type===P?d(e,t,n.props.children,r,a):o(e,t,n,r):null;case c:return n.key===a?T(e,t,n,r):null}if(p_(n)||G(n))return null!==a?null:d(e,t,n,r,null);P_(e,n)}return null}function N(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return E(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case p:return e=e.get(null===r.key?n:r.key)||null,r.type===P?d(t,e,r.props.children,a,r.key):o(t,e,r,a);case c:return T(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(p_(r)||G(r))return d(t,e=e.get(n)||null,r,a,null);P_(t,r)}return null}function R(a,i,s,E){for(var o=null,T=null,d=i,R=i=0,O=null;null!==d&&R<s.length;R++){d.index>R?(O=d,d=null):O=d.sibling;var A=u(a,d,s[R],E);if(null===A){null===d&&(d=O);break}e&&d&&null===A.alternate&&t(a,d),i=_(A,i,R),null===T?o=A:T.sibling=A,T=A,d=O}if(R===s.length)return n(a,d),o;if(null===d){for(;R<s.length;R++)null!==(d=I(a,s[R],E))&&(i=_(d,i,R),null===T?o=d:T.sibling=d,T=d);return o}for(d=r(a,d);R<s.length;R++)null!==(O=N(d,a,R,s[R],E))&&(e&&null!==O.alternate&&d.delete(null===O.key?R:O.key),i=_(O,i,R),null===T?o=O:T.sibling=O,T=O);return e&&d.forEach((function(e){return t(a,e)})),o}function O(a,s,E,o){var T=G(E);if("function"!=typeof T)throw Error(i(150));if(null==(E=T.call(E)))throw Error(i(151));for(var d=T=null,R=s,O=s=0,A=null,l=E.next();null!==R&&!l.done;O++,l=E.next()){R.index>O?(A=R,R=null):A=R.sibling;var D=u(a,R,l.value,o);if(null===D){null===R&&(R=A);break}e&&R&&null===D.alternate&&t(a,R),s=_(D,s,O),null===d?T=D:d.sibling=D,d=D,R=A}if(l.done)return n(a,R),T;if(null===R){for(;!l.done;O++,l=E.next())null!==(l=I(a,l.value,o))&&(s=_(l,s,O),null===d?T=l:d.sibling=l,d=l);return T}for(R=r(a,R);!l.done;O++,l=E.next())null!==(l=N(R,a,O,l.value,o))&&(e&&null!==l.alternate&&R.delete(null===l.key?O:l.key),s=_(l,s,O),null===d?T=l:d.sibling=l,d=l);return e&&R.forEach((function(e){return t(a,e)})),T}return function(e,r,_,E){var o="object"==typeof _&&null!==_&&_.type===P&&null===_.key;o&&(_=_.props.children);var T="object"==typeof _&&null!==_;if(T)switch(_.$$typeof){case p:e:{for(T=_.key,o=r;null!==o;){if(o.key===T){if(7===o.tag){if(_.type===P){n(e,o.sibling),(r=a(o,_.props.children)).return=e,e=r;break e}}else if(o.elementType===_.type){n(e,o.sibling),(r=a(o,_.props)).ref=c_(e,o,_),r.return=e,e=r;break e}n(e,o);break}t(e,o),o=o.sibling}_.type===P?((r=QE(_.props.children,e.mode,E,_.key)).return=e,e=r):((E=HE(_.type,_.key,_.props,null,e.mode,E)).ref=c_(e,r,_),E.return=e,e=E)}return s(e);case c:e:{for(o=_.key;null!==r;){if(r.key===o){if(4===r.tag&&r.stateNode.containerInfo===_.containerInfo&&r.stateNode.implementation===_.implementation){n(e,r.sibling),(r=a(r,_.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=zE(_,e.mode,E)).return=e,e=r}return s(e)}if("string"==typeof _||"number"==typeof _)return _=""+_,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,_)).return=e,e=r):(n(e,r),(r=WE(_,e.mode,E)).return=e,e=r),s(e);if(p_(_))return R(e,r,_,E);if(G(_))return O(e,r,_,E);if(T&&P_(e,_),void 0===_&&!o)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,Q(e.type)||"Component"))}return n(e,r)}}var U_=C_(!0),f_=C_(!1),m_={},L_=oa(m_),F_=oa(m_),M_=oa(m_);function w_(e){if(e===m_)throw Error(i(174));return e}function g_(e,t){switch(da(M_,t),da(F_,e),da(L_,m_),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Ne(null,"");break;default:t=Ne(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ta(L_),da(L_,t)}function b_(){Ta(L_),Ta(F_),Ta(M_)}function y_(e){w_(M_.current);var t=w_(L_.current),n=Ne(t,e.type);t!==n&&(da(F_,e),da(L_,n))}function X_(e){F_.current===e&&(Ta(L_),Ta(F_))}var v_=oa(0);function V_(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var B_=null,Y_=null,K_=!1;function G_(e,t){var n=qE(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function q_(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function k_(e){if(K_){var t=Y_;if(t){var n=t;if(!q_(e,t)){if(!(t=jr(n.nextSibling))||!q_(e,t))return e.flags=-1025&e.flags|2,K_=!1,void(B_=e);G_(B_,n)}B_=e,Y_=jr(t.firstChild)}else e.flags=-1025&e.flags|2,K_=!1,B_=e}}function x_(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;B_=e}function H_(e){if(e!==B_)return!1;if(!K_)return x_(e),K_=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!kr(t,e.memoizedProps))for(t=Y_;t;)G_(e,t),t=jr(t.nextSibling);if(x_(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Y_=jr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Y_=null}}else Y_=B_?jr(e.stateNode.nextSibling):null;return!0}function Q_(){Y_=B_=null,K_=!1}var j_=[];function W_(){for(var e=0;e<j_.length;e++)j_[e]._workInProgressVersionPrimary=null;j_.length=0}var z_=S.ReactCurrentDispatcher,Z_=S.ReactCurrentBatchConfig,$_=0,J_=null,ei=null,ti=null,ni=!1,ri=!1;function ai(){throw Error(i(321))}function _i(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Tr(e[n],t[n]))return!1;return!0}function ii(e,t,n,r,a,_){if($_=_,J_=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,z_.current=null===e||null===e.memoizedState?wi:gi,e=n(r,a),ri){_=0;do{if(ri=!1,!(25>_))throw Error(i(301));_+=1,ti=ei=null,t.updateQueue=null,z_.current=bi,e=n(r,a)}while(ri)}if(z_.current=Mi,t=null!==ei&&null!==ei.next,$_=0,ti=ei=J_=null,ni=!1,t)throw Error(i(300));return e}function si(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ti?J_.memoizedState=ti=e:ti=ti.next=e,ti}function Ei(){if(null===ei){var e=J_.alternate;e=null!==e?e.memoizedState:null}else e=ei.next;var t=null===ti?J_.memoizedState:ti.next;if(null!==t)ti=t,ei=e;else{if(null===e)throw Error(i(310));e={memoizedState:(ei=e).memoizedState,baseState:ei.baseState,baseQueue:ei.baseQueue,queue:ei.queue,next:null},null===ti?J_.memoizedState=ti=e:ti=ti.next=e}return ti}function oi(e,t){return"function"==typeof t?t(e):t}function Ti(e){var t=Ei(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=ei,a=r.baseQueue,_=n.pending;if(null!==_){if(null!==a){var s=a.next;a.next=_.next,_.next=s}r.baseQueue=a=_,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var E=s=_=null,o=a;do{var T=o.lane;if(($_&T)===T)null!==E&&(E=E.next={lane:0,action:o.action,eagerReducer:o.eagerReducer,eagerState:o.eagerState,next:null}),r=o.eagerReducer===e?o.eagerState:e(r,o.action);else{var d={lane:T,action:o.action,eagerReducer:o.eagerReducer,eagerState:o.eagerState,next:null};null===E?(s=E=d,_=r):E=E.next=d,J_.lanes|=T,Ys|=T}o=o.next}while(null!==o&&o!==a);null===E?_=r:E.next=s,Tr(r,t.memoizedState)||(Xi=!0),t.memoizedState=r,t.baseState=_,t.baseQueue=E,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function di(e){var t=Ei(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,_=t.memoizedState;if(null!==a){n.pending=null;var s=a=a.next;do{_=e(_,s.action),s=s.next}while(s!==a);Tr(_,t.memoizedState)||(Xi=!0),t.memoizedState=_,null===t.baseQueue&&(t.baseState=_),n.lastRenderedState=_}return[_,r]}function Ii(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=($_&e)===e)&&(t._workInProgressVersionPrimary=r,j_.push(t))),e)return n(t._source);throw j_.push(t),Error(i(350))}function ui(e,t,n,r){var a=ws;if(null===a)throw Error(i(349));var _=t._getVersion,s=_(t._source),E=z_.current,o=E.useState((function(){return Ii(a,t,n)})),T=o[1],d=o[0];o=ti;var I=e.memoizedState,u=I.refs,N=u.getSnapshot,R=I.source;I=I.subscribe;var O=J_;return e.memoizedState={refs:u,source:t,subscribe:r},E.useEffect((function(){u.getSnapshot=n,u.setSnapshot=T;var e=_(t._source);if(!Tr(s,e)){e=n(t._source),Tr(d,e)||(T(e),e=IE(O),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,i=e;0<i;){var E=31-kt(i),o=1<<E;r[E]|=e,i&=~o}}}),[n,t,r]),E.useEffect((function(){return r(t._source,(function(){var e=u.getSnapshot,n=u.setSnapshot;try{n(e(t._source));var r=IE(O);a.mutableReadLanes|=r&a.pendingLanes}catch(_){n((function(){throw _}))}}))}),[t,r]),Tr(N,n)&&Tr(R,t)&&Tr(I,r)||((e={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:d}).dispatch=T=Fi.bind(null,J_,e),o.queue=e,o.baseQueue=null,d=Ii(a,t,n),o.memoizedState=o.baseState=d),d}function Ni(e,t,n){return ui(Ei(),e,t,n)}function Ri(e){var t=si();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:e}).dispatch=Fi.bind(null,J_,e),[t.memoizedState,e]}function Oi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=J_.updateQueue)?(t={lastEffect:null},J_.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Ai(e){return e={current:e},si().memoizedState=e}function li(){return Ei().memoizedState}function Di(e,t,n,r){var a=si();J_.flags|=e,a.memoizedState=Oi(1|t,n,void 0,void 0===r?null:r)}function hi(e,t,n,r){var a=Ei();r=void 0===r?null:r;var _=void 0;if(null!==ei){var i=ei.memoizedState;if(_=i.destroy,null!==r&&_i(r,i.deps))return void Oi(t,n,_,r)}J_.flags|=e,a.memoizedState=Oi(1|t,n,_,r)}function Si(e,t){return Di(516,4,e,t)}function pi(e,t){return hi(516,4,e,t)}function ci(e,t){return hi(4,2,e,t)}function Pi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ci(e,t,n){return n=null!=n?n.concat([e]):null,hi(4,2,Pi.bind(null,t,e),n)}function Ui(){}function fi(e,t){var n=Ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&_i(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function mi(e,t){var n=Ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&_i(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Li(e,t){var n=ka();Ha(98>n?98:n,(function(){e(!0)})),Ha(97<n?97:n,(function(){var n=Z_.transition;Z_.transition=1;try{e(!1),t()}finally{Z_.transition=n}}))}function Fi(e,t,n){var r=dE(),a=IE(e),_={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?_.next=_:(_.next=i.next,i.next=_),t.pending=_,i=e.alternate,e===J_||null!==i&&i===J_)ri=ni=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var s=t.lastRenderedState,E=i(s,n);if(_.eagerReducer=i,_.eagerState=E,Tr(E,s))return}catch(o){}uE(e,a,r)}}var Mi={readContext:i_,useCallback:ai,useContext:ai,useEffect:ai,useImperativeHandle:ai,useLayoutEffect:ai,useMemo:ai,useReducer:ai,useRef:ai,useState:ai,useDebugValue:ai,useDeferredValue:ai,useTransition:ai,useMutableSource:ai,useOpaqueIdentifier:ai,unstable_isNewReconciler:!1},wi={readContext:i_,useCallback:function(e,t){return si().memoizedState=[e,void 0===t?null:t],e},useContext:i_,useEffect:Si,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Di(4,2,Pi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Di(4,2,e,t)},useMemo:function(e,t){var n=si();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=si();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Fi.bind(null,J_,e),[r.memoizedState,e]},useRef:Ai,useState:Ri,useDebugValue:Ui,useDeferredValue:function(e){var t=Ri(e),n=t[0],r=t[1];return Si((function(){var t=Z_.transition;Z_.transition=1;try{r(e)}finally{Z_.transition=t}}),[e]),n},useTransition:function(){var e=Ri(!1),t=e[0];return Ai(e=Li.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=si();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},ui(r,e,t,n)},useOpaqueIdentifier:function(){if(K_){var e=!1,t=function(e){return{$$typeof:y,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(zr++).toString(36))),Error(i(355))})),n=Ri(t)[1];return 0==(2&J_.mode)&&(J_.flags|=516,Oi(5,(function(){n("r:"+(zr++).toString(36))}),void 0,null)),t}return Ri(t="r:"+(zr++).toString(36)),t},unstable_isNewReconciler:!1},gi={readContext:i_,useCallback:fi,useContext:i_,useEffect:pi,useImperativeHandle:Ci,useLayoutEffect:ci,useMemo:mi,useReducer:Ti,useRef:li,useState:function(){return Ti(oi)},useDebugValue:Ui,useDeferredValue:function(e){var t=Ti(oi),n=t[0],r=t[1];return pi((function(){var t=Z_.transition;Z_.transition=1;try{r(e)}finally{Z_.transition=t}}),[e]),n},useTransition:function(){var e=Ti(oi)[0];return[li().current,e]},useMutableSource:Ni,useOpaqueIdentifier:function(){return Ti(oi)[0]},unstable_isNewReconciler:!1},bi={readContext:i_,useCallback:fi,useContext:i_,useEffect:pi,useImperativeHandle:Ci,useLayoutEffect:ci,useMemo:mi,useReducer:di,useRef:li,useState:function(){return di(oi)},useDebugValue:Ui,useDeferredValue:function(e){var t=di(oi),n=t[0],r=t[1];return pi((function(){var t=Z_.transition;Z_.transition=1;try{r(e)}finally{Z_.transition=t}}),[e]),n},useTransition:function(){var e=di(oi)[0];return[li().current,e]},useMutableSource:Ni,useOpaqueIdentifier:function(){return di(oi)[0]},unstable_isNewReconciler:!1},yi=S.ReactCurrentOwner,Xi=!1;function vi(e,t,n,r){t.child=null===e?f_(t,null,n,r):U_(t,e.child,n,r)}function Vi(e,t,n,r,a){n=n.render;var _=t.ref;return __(t,a),r=ii(e,t,n,r,_,a),null===e||Xi?(t.flags|=1,vi(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,as(e,t,a))}function Bi(e,t,n,r,a,_){if(null===e){var i=n.type;return"function"!=typeof i||kE(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=HE(n.type,null,r,t,t.mode,_)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Yi(e,t,i,r,a,_))}return i=e.child,0==(a&_)&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:Ir)(a,r)&&e.ref===t.ref)?as(e,t,_):(t.flags|=1,(e=xE(i,r)).ref=t.ref,e.return=t,t.child=e)}function Yi(e,t,n,r,a,_){if(null!==e&&Ir(e.memoizedProps,r)&&e.ref===t.ref){if(Xi=!1,0==(_&a))return t.lanes=e.lanes,as(e,t,_);0!=(16384&e.flags)&&(Xi=!0)}return qi(e,t,n,r,_)}function Ki(e,t,n){var r=t.pendingProps,a=r.children,_=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},SE(t,n);else{if(0==(1073741824&n))return e=null!==_?_.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},SE(t,e),null;t.memoizedState={baseLanes:0},SE(t,null!==_?_.baseLanes:n)}else null!==_?(r=_.baseLanes|n,t.memoizedState=null):r=n,SE(t,r);return vi(e,t,a,n),t.child}function Gi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function qi(e,t,n,r,a){var _=Aa(n)?Ra:ua.current;return _=Oa(t,_),__(t,a),n=ii(e,t,n,r,_,a),null===e||Xi?(t.flags|=1,vi(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,as(e,t,a))}function ki(e,t,n,r,a){if(Aa(n)){var _=!0;Sa(t)}else _=!1;if(__(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),D_(t,n,r),S_(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,s=t.memoizedProps;i.props=s;var E=i.context,o=n.contextType;"object"==typeof o&&null!==o?o=i_(o):o=Oa(t,o=Aa(n)?Ra:ua.current);var T=n.getDerivedStateFromProps,d="function"==typeof T||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==r||E!==o)&&h_(t,i,r,o),s_=!1;var I=t.memoizedState;i.state=I,u_(t,r,i,a),E=t.memoizedState,s!==r||I!==E||Na.current||s_?("function"==typeof T&&(O_(t,n,T,r),E=t.memoizedState),(s=s_||l_(t,n,s,r,I,E,o))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=E),i.props=r,i.state=E,i.context=o,r=s):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,o_(e,t),s=t.memoizedProps,o=t.type===t.elementType?s:Za(t.type,s),i.props=o,d=t.pendingProps,I=i.context,"object"==typeof(E=n.contextType)&&null!==E?E=i_(E):E=Oa(t,E=Aa(n)?Ra:ua.current);var u=n.getDerivedStateFromProps;(T="function"==typeof u||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==d||I!==E)&&h_(t,i,r,E),s_=!1,I=t.memoizedState,i.state=I,u_(t,r,i,a);var N=t.memoizedState;s!==d||I!==N||Na.current||s_?("function"==typeof u&&(O_(t,n,u,r),N=t.memoizedState),(o=s_||l_(t,n,o,r,I,N,E))?(T||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,N,E),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,N,E)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&I===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&I===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=N),i.props=r,i.state=N,i.context=E,r=o):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&I===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&I===e.memoizedState||(t.flags|=256),r=!1)}return xi(e,t,n,r,_,a)}function xi(e,t,n,r,a,_){Gi(e,t);var i=0!=(64&t.flags);if(!r&&!i)return a&&pa(t,n,!1),as(e,t,_);r=t.stateNode,yi.current=t;var s=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=U_(t,e.child,null,_),t.child=U_(t,null,s,_)):vi(e,t,s,_),t.memoizedState=r.state,a&&pa(t,n,!0),t.child}function Hi(e){var t=e.stateNode;t.pendingContext?Da(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Da(0,t.context,!1),g_(e,t.containerInfo)}var Qi,ji,Wi,zi={dehydrated:null,retryLane:0};function Zi(e,t,n){var r,a=t.pendingProps,_=v_.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&_)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(_|=1),da(v_,1&_),null===e?(void 0!==a.fallback&&k_(t),e=a.children,_=a.fallback,i?(e=$i(t,e,_,n),t.child.memoizedState={baseLanes:n},t.memoizedState=zi,e):"number"==typeof a.unstable_expectedLoadTime?(e=$i(t,e,_,n),t.child.memoizedState={baseLanes:n},t.memoizedState=zi,t.lanes=33554432,e):((n=jE({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(a=es(e,t,a.children,a.fallback,n),i=t.child,_=e.child.memoizedState,i.memoizedState=null===_?{baseLanes:n}:{baseLanes:_.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=zi,a):(n=Ji(e,t,a.children,n),t.memoizedState=null,n))}function $i(e,t,n,r){var a=e.mode,_=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==_?(_.childLanes=0,_.pendingProps=t):_=jE(t,a,0,null),n=QE(n,a,r,null),_.return=e,n.return=e,_.sibling=n,e.child=_,n}function Ji(e,t,n,r){var a=e.child;return e=a.sibling,n=xE(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}function es(e,t,n,r,a){var _=t.mode,i=e.child;e=i.sibling;var s={mode:"hidden",children:n};return 0==(2&_)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=s,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=xE(i,s),null!==e?r=xE(e,r):(r=QE(r,_,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}function ts(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),a_(e.return,t)}function ns(e,t,n,r,a,_){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:_}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=a,i.lastEffect=_)}function rs(e,t,n){var r=t.pendingProps,a=r.revealOrder,_=r.tail;if(vi(e,t,r.children,n),0!=(2&(r=v_.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ts(e,n);else if(19===e.tag)ts(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(da(v_,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===V_(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),ns(t,!1,a,n,_,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===V_(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}ns(t,!0,n,null,_,t.lastEffect);break;case"together":ns(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function as(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ys|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=xE(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=xE(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function _s(e,t){if(!K_)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function is(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return Aa(t.type)&&la(),null;case 3:return b_(),Ta(Na),Ta(ua),W_(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(H_(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:X_(t);var _=w_(M_.current);if(n=t.type,null!==e&&null!=t.stateNode)ji(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=w_(L_.current),H_(t)){r=t.stateNode,n=t.type;var s=t.memoizedProps;switch(r[$r]=t,r[Jr]=s,n){case"dialog":Fr("cancel",r),Fr("close",r);break;case"iframe":case"object":case"embed":Fr("load",r);break;case"video":case"audio":for(e=0;e<Ur.length;e++)Fr(Ur[e],r);break;case"source":Fr("error",r);break;case"img":case"image":case"link":Fr("error",r),Fr("load",r);break;case"details":Fr("toggle",r);break;case"input":ee(r,s),Fr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!s.multiple},Fr("invalid",r);break;case"textarea":Ee(r,s),Fr("invalid",r)}for(var o in Pe(n,s),e=null,s)s.hasOwnProperty(o)&&(_=s[o],"children"===o?"string"==typeof _?r.textContent!==_&&(e=["children",_]):"number"==typeof _&&r.textContent!==""+_&&(e=["children",""+_]):E.hasOwnProperty(o)&&null!=_&&"onScroll"===o&&Fr("scroll",r));switch(n){case"input":z(r),re(r,s,!0);break;case"textarea":z(r),Te(r);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(r.onclick=Yr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(o=9===_.nodeType?_:_.ownerDocument,e===de&&(e=ue(n)),e===de?"script"===n?((e=o.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=o.createElement(n,{is:r.is}):(e=o.createElement(n),"select"===n&&(o=e,r.multiple?o.multiple=!0:r.size&&(o.size=r.size))):e=o.createElementNS(e,n),e[$r]=t,e[Jr]=r,Qi(e,t),t.stateNode=e,o=Ce(n,r),n){case"dialog":Fr("cancel",e),Fr("close",e),_=r;break;case"iframe":case"object":case"embed":Fr("load",e),_=r;break;case"video":case"audio":for(_=0;_<Ur.length;_++)Fr(Ur[_],e);_=r;break;case"source":Fr("error",e),_=r;break;case"img":case"image":case"link":Fr("error",e),Fr("load",e),_=r;break;case"details":Fr("toggle",e),_=r;break;case"input":ee(e,r),_=J(e,r),Fr("invalid",e);break;case"option":_=_e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},_=a({},r,{value:void 0}),Fr("invalid",e);break;case"textarea":Ee(e,r),_=se(e,r),Fr("invalid",e);break;default:_=r}Pe(n,_);var T=_;for(s in T)if(T.hasOwnProperty(s)){var d=T[s];"style"===s?pe(e,d):"dangerouslySetInnerHTML"===s?null!=(d=d?d.__html:void 0)&&Ae(e,d):"children"===s?"string"==typeof d?("textarea"!==n||""!==d)&&le(e,d):"number"==typeof d&&le(e,""+d):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(E.hasOwnProperty(s)?null!=d&&"onScroll"===s&&Fr("scroll",e):null!=d&&h(e,s,d,o))}switch(n){case"input":z(e),re(e,r,!1);break;case"textarea":z(e),Te(e);break;case"option":null!=r.value&&e.setAttribute("value",""+j(r.value));break;case"select":e.multiple=!!r.multiple,null!=(s=r.value)?ie(e,!!r.multiple,s,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof _.onClick&&(e.onclick=Yr)}qr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Wi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=w_(M_.current),w_(L_.current),H_(t)?(r=t.stateNode,n=t.memoizedProps,r[$r]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[$r]=t,t.stateNode=r)}return null;case 13:return Ta(v_),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&H_(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&v_.current)?0===vs&&(vs=3):(0!==vs&&3!==vs||(vs=4),null===ws||0==(134217727&Ys)&&0==(134217727&Ks)||AE(ws,bs))),(r||n)&&(t.flags|=4),null);case 4:return b_(),null===e&&wr(t.stateNode.containerInfo),null;case 10:return r_(t),null;case 19:if(Ta(v_),null===(r=t.memoizedState))return null;if(s=0!=(64&t.flags),null===(o=r.rendering))if(s)_s(r,!1);else{if(0!==vs||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(o=V_(e))){for(t.flags|=64,_s(r,!1),null!==(s=o.updateQueue)&&(t.updateQueue=s,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(s=n).flags&=2,s.nextEffect=null,s.firstEffect=null,s.lastEffect=null,null===(o=s.alternate)?(s.childLanes=0,s.lanes=e,s.child=null,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null,s.stateNode=null):(s.childLanes=o.childLanes,s.lanes=o.lanes,s.child=o.child,s.memoizedProps=o.memoizedProps,s.memoizedState=o.memoizedState,s.updateQueue=o.updateQueue,s.type=o.type,e=o.dependencies,s.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return da(v_,1&v_.current|2),t.child}e=e.sibling}null!==r.tail&&qa()>xs&&(t.flags|=64,s=!0,_s(r,!1),t.lanes=33554432)}else{if(!s)if(null!==(e=V_(o))){if(t.flags|=64,s=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),_s(r,!0),null===r.tail&&"hidden"===r.tailMode&&!o.alternate&&!K_)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*qa()-r.renderingStartTime>xs&&1073741824!==n&&(t.flags|=64,s=!0,_s(r,!1),t.lanes=33554432);r.isBackwards?(o.sibling=t.child,t.child=o):(null!==(n=r.last)?n.sibling=o:t.child=o,r.last=o)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=qa(),n.sibling=null,t=v_.current,da(v_,s?1&t|2:1&t),n):null;case 23:case 24:return pE(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function ss(e){switch(e.tag){case 1:Aa(e.type)&&la();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(b_(),Ta(Na),Ta(ua),W_(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return X_(e),null;case 13:return Ta(v_),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return Ta(v_),null;case 4:return b_(),null;case 10:return r_(e),null;case 23:case 24:return pE(),null;default:return null}}function Es(e,t){try{var n="",r=t;do{n+=H(r),r=r.return}while(r);var a=n}catch(_){a="\nError generating stack: "+_.message+"\n"+_.stack}return{value:e,source:t,stack:a}}function os(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}Qi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},ji=function(e,t,n,r){var _=e.memoizedProps;if(_!==r){e=t.stateNode,w_(L_.current);var i,s=null;switch(n){case"input":_=J(e,_),r=J(e,r),s=[];break;case"option":_=_e(e,_),r=_e(e,r),s=[];break;case"select":_=a({},_,{value:void 0}),r=a({},r,{value:void 0}),s=[];break;case"textarea":_=se(e,_),r=se(e,r),s=[];break;default:"function"!=typeof _.onClick&&"function"==typeof r.onClick&&(e.onclick=Yr)}for(d in Pe(n,r),n=null,_)if(!r.hasOwnProperty(d)&&_.hasOwnProperty(d)&&null!=_[d])if("style"===d){var o=_[d];for(i in o)o.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==d&&"children"!==d&&"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&"autoFocus"!==d&&(E.hasOwnProperty(d)?s||(s=[]):(s=s||[]).push(d,null));for(d in r){var T=r[d];if(o=null!=_?_[d]:void 0,r.hasOwnProperty(d)&&T!==o&&(null!=T||null!=o))if("style"===d)if(o){for(i in o)!o.hasOwnProperty(i)||T&&T.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in T)T.hasOwnProperty(i)&&o[i]!==T[i]&&(n||(n={}),n[i]=T[i])}else n||(s||(s=[]),s.push(d,n)),n=T;else"dangerouslySetInnerHTML"===d?(T=T?T.__html:void 0,o=o?o.__html:void 0,null!=T&&o!==T&&(s=s||[]).push(d,T)):"children"===d?"string"!=typeof T&&"number"!=typeof T||(s=s||[]).push(d,""+T):"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&(E.hasOwnProperty(d)?(null!=T&&"onScroll"===d&&Fr("scroll",e),s||o===T||(s=[])):"object"==typeof T&&null!==T&&T.$$typeof===y?T.toString():(s=s||[]).push(d,T))}n&&(s=s||[]).push("style",n);var d=s;(t.updateQueue=d)&&(t.flags|=4)}},Wi=function(e,t,n,r){n!==r&&(t.flags|=4)};var Ts="function"==typeof WeakMap?WeakMap:Map;function ds(e,t,n){(n=T_(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ws||(Ws=!0,zs=r),os(0,t)},n}function Is(e,t,n){(n=T_(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return os(0,t),r(a)}}var _=e.stateNode;return null!==_&&"function"==typeof _.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Zs?Zs=new Set([this]):Zs.add(this),os(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var us="function"==typeof WeakSet?WeakSet:Set;function Ns(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(n){BE(e,n)}else t.current=null}function Rs(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Za(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Qr(t.stateNode.containerInfo))}throw Error(i(163))}function Os(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(XE(n,e),yE(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Za(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&N_(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}N_(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&qr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&pt(n)))))}throw Error(i(163))}function As(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=Se("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function ls(e,t){if(Pa&&"function"==typeof Pa.onCommitFiberUnmount)try{Pa.onCommitFiberUnmount(ca,t)}catch(_){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))XE(t,n);else{r=t;try{a()}catch(_){BE(r,_)}}n=n.next}while(n!==e)}break;case 1:if(Ns(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(_){BE(t,_)}break;case 5:Ns(t);break;case 4:Ps(e,t)}}function Ds(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hs(e){return 5===e.tag||3===e.tag||4===e.tag}function Ss(e){e:{for(var t=e.return;null!==t;){if(hs(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(le(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hs(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?ps(e,n,t):cs(e,n,t)}function ps(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Yr));else if(4!==r&&null!==(e=e.child))for(ps(e,t,n),e=e.sibling;null!==e;)ps(e,t,n),e=e.sibling}function cs(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cs(e,t,n),e=e.sibling;null!==e;)cs(e,t,n),e=e.sibling}function Ps(e,t){for(var n,r,a=t,_=!1;;){if(!_){_=a.return;e:for(;;){if(null===_)throw Error(i(160));switch(n=_.stateNode,_.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}_=_.return}_=!0}if(5===a.tag||6===a.tag){e:for(var s=e,E=a,o=E;;)if(ls(s,o),null!==o.child&&4!==o.tag)o.child.return=o,o=o.child;else{if(o===E)break e;for(;null===o.sibling;){if(null===o.return||o.return===E)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}r?(s=n,E=a.stateNode,8===s.nodeType?s.parentNode.removeChild(E):s.removeChild(E)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(ls(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(_=!1)}a.sibling.return=a.return,a=a.sibling}}function Cs(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:case 12:case 17:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var _=t.updateQueue;if(t.updateQueue=null,null!==_){for(n[Jr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Ce(e,a),t=Ce(e,r),a=0;a<_.length;a+=2){var s=_[a],E=_[a+1];"style"===s?pe(n,E):"dangerouslySetInnerHTML"===s?Ae(n,E):"children"===s?le(n,E):h(n,s,E,t)}switch(e){case"input":ne(n,r);break;case"textarea":oe(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(_=r.value)?ie(n,!!r.multiple,_,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,pt(n.containerInfo)));case 13:return null!==t.memoizedState&&(ks=qa(),As(t.child,!0)),void Us(t);case 19:return void Us(t);case 23:case 24:return void As(t,null!==t.memoizedState)}throw Error(i(163))}function Us(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new us),t.forEach((function(t){var r=KE.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function fs(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var ms=Math.ceil,Ls=S.ReactCurrentDispatcher,Fs=S.ReactCurrentOwner,Ms=0,ws=null,gs=null,bs=0,ys=0,Xs=oa(0),vs=0,Vs=null,Bs=0,Ys=0,Ks=0,Gs=0,qs=null,ks=0,xs=1/0;function Hs(){xs=qa()+500}var Qs,js=null,Ws=!1,zs=null,Zs=null,$s=!1,Js=null,eE=90,tE=[],nE=[],rE=null,aE=0,_E=null,iE=-1,sE=0,EE=0,oE=null,TE=!1;function dE(){return 0!=(48&Ms)?qa():-1!==iE?iE:iE=qa()}function IE(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===ka()?1:2;if(0===sE&&(sE=Bs),0!==za.transition){0!==EE&&(EE=null!==qs?qs.pendingLanes:0),e=sE;var t=4186112&~EE;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=ka(),0!=(4&Ms)&&98===e?e=Yt(12,sE):e=Yt(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),sE),e}function uE(e,t,n){if(50<aE)throw aE=0,_E=null,Error(i(185));if(null===(e=NE(e,t)))return null;qt(e,t,n),e===ws&&(Ks|=t,4===vs&&AE(e,bs));var r=ka();1===t?0!=(8&Ms)&&0==(48&Ms)?lE(e):(RE(e,n),0===Ms&&(Hs(),ja())):(0==(4&Ms)||98!==r&&99!==r||(null===rE?rE=new Set([e]):rE.add(e)),RE(e,n)),qs=e}function NE(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function RE(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,_=e.expirationTimes,s=e.pendingLanes;0<s;){var E=31-kt(s),o=1<<E,T=_[E];if(-1===T){if(0==(o&r)||0!=(o&a)){T=t,vt(o);var d=Xt;_[E]=10<=d?T+250:6<=d?T+5e3:-1}}else T<=t&&(e.expiredLanes|=o);s&=~o}if(r=Vt(e,e===ws?bs:0),t=Xt,0===r)null!==n&&(n!==va&&fa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==va&&fa(n)}15===t?(n=lE.bind(null,e),null===Ba?(Ba=[n],Ya=Ua(wa,Wa)):Ba.push(n),n=va):14===t?n=Qa(99,lE.bind(null,e)):(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),n=Qa(n,OE.bind(null,e))),e.callbackPriority=t,e.callbackNode=n}}function OE(e){if(iE=-1,EE=sE=0,0!=(48&Ms))throw Error(i(327));var t=e.callbackNode;if(bE()&&e.callbackNode!==t)return null;var n=Vt(e,e===ws?bs:0);if(0===n)return null;var r=n,a=Ms;Ms|=16;var _=CE();for(ws===e&&bs===r||(Hs(),cE(e,r));;)try{mE();break}catch(E){PE(e,E)}if(n_(),Ls.current=_,Ms=a,null!==gs?r=0:(ws=null,bs=0,r=vs),0!=(Bs&Ks))cE(e,0);else if(0!==r){if(2===r&&(Ms|=64,e.hydrate&&(e.hydrate=!1,Qr(e.containerInfo)),0!==(n=Bt(e))&&(r=UE(e,n))),1===r)throw t=Vs,cE(e,0),AE(e,n),RE(e,qa()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:case 5:ME(e);break;case 3:if(AE(e,n),(62914560&n)===n&&10<(r=ks+500-qa())){if(0!==Vt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){dE(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=xr(ME.bind(null,e),r);break}ME(e);break;case 4:if(AE(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var s=31-kt(n);_=1<<s,(s=r[s])>a&&(a=s),n&=~_}if(n=a,10<(n=(120>(n=qa()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*ms(n/1960))-n)){e.timeoutHandle=xr(ME.bind(null,e),n);break}ME(e);break;default:throw Error(i(329))}}return RE(e,qa()),e.callbackNode===t?OE.bind(null,e):null}function AE(e,t){for(t&=~Gs,t&=~Ks,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-kt(t),r=1<<n;e[n]=-1,t&=~r}}function lE(e){if(0!=(48&Ms))throw Error(i(327));if(bE(),e===ws&&0!=(e.expiredLanes&bs)){var t=bs,n=UE(e,t);0!=(Bs&Ks)&&(n=UE(e,t=Vt(e,t)))}else n=UE(e,t=Vt(e,0));if(0!==e.tag&&2===n&&(Ms|=64,e.hydrate&&(e.hydrate=!1,Qr(e.containerInfo)),0!==(t=Bt(e))&&(n=UE(e,t))),1===n)throw n=Vs,cE(e,0),AE(e,t),RE(e,qa()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,ME(e),RE(e,qa()),null}function DE(e,t){var n=Ms;Ms|=1;try{return e(t)}finally{0===(Ms=n)&&(Hs(),ja())}}function hE(e,t){var n=Ms;Ms&=-2,Ms|=8;try{return e(t)}finally{0===(Ms=n)&&(Hs(),ja())}}function SE(e,t){da(Xs,ys),ys|=t,Bs|=t}function pE(){ys=Xs.current,Ta(Xs)}function cE(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Hr(n)),null!==gs)for(n=gs.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&la();break;case 3:b_(),Ta(Na),Ta(ua),W_();break;case 5:X_(r);break;case 4:b_();break;case 13:case 19:Ta(v_);break;case 10:r_(r);break;case 23:case 24:pE()}n=n.return}ws=e,gs=xE(e.current,null),bs=ys=Bs=t,vs=0,Vs=null,Gs=Ks=Ys=0}function PE(e,t){for(;;){var n=gs;try{if(n_(),z_.current=Mi,ni){for(var r=J_.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}ni=!1}if($_=0,ti=ei=J_=null,ri=!1,Fs.current=null,null===n||null===n.return){vs=1,Vs=t,gs=null;break}e:{var _=e,i=n.return,s=n,E=t;if(t=bs,s.flags|=2048,s.firstEffect=s.lastEffect=null,null!==E&&"object"==typeof E&&"function"==typeof E.then){var o=E;if(0==(2&s.mode)){var T=s.alternate;T?(s.updateQueue=T.updateQueue,s.memoizedState=T.memoizedState,s.lanes=T.lanes):(s.updateQueue=null,s.memoizedState=null)}var d=0!=(1&v_.current),I=i;do{var u;if(u=13===I.tag){var N=I.memoizedState;if(null!==N)u=null!==N.dehydrated;else{var R=I.memoizedProps;u=void 0!==R.fallback&&(!0!==R.unstable_avoidThisFallback||!d)}}if(u){var O=I.updateQueue;if(null===O){var A=new Set;A.add(o),I.updateQueue=A}else O.add(o);if(0==(2&I.mode)){if(I.flags|=64,s.flags|=16384,s.flags&=-2981,1===s.tag)if(null===s.alternate)s.tag=17;else{var l=T_(-1,1);l.tag=2,d_(s,l)}s.lanes|=1;break e}E=void 0,s=t;var D=_.pingCache;if(null===D?(D=_.pingCache=new Ts,E=new Set,D.set(o,E)):void 0===(E=D.get(o))&&(E=new Set,D.set(o,E)),!E.has(s)){E.add(s);var h=YE.bind(null,_,o,s);o.then(h,h)}I.flags|=4096,I.lanes=t;break e}I=I.return}while(null!==I);E=Error((Q(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==vs&&(vs=2),E=Es(E,s),I=i;do{switch(I.tag){case 3:_=E,I.flags|=4096,t&=-t,I.lanes|=t,I_(I,ds(0,_,t));break e;case 1:_=E;var S=I.type,p=I.stateNode;if(0==(64&I.flags)&&("function"==typeof S.getDerivedStateFromError||null!==p&&"function"==typeof p.componentDidCatch&&(null===Zs||!Zs.has(p)))){I.flags|=4096,t&=-t,I.lanes|=t,I_(I,Is(I,_,t));break e}}I=I.return}while(null!==I)}FE(n)}catch(c){t=c,gs===n&&null!==n&&(gs=n=n.return);continue}break}}function CE(){var e=Ls.current;return Ls.current=Mi,null===e?Mi:e}function UE(e,t){var n=Ms;Ms|=16;var r=CE();for(ws===e&&bs===t||cE(e,t);;)try{fE();break}catch(a){PE(e,a)}if(n_(),Ms=n,Ls.current=r,null!==gs)throw Error(i(261));return ws=null,bs=0,vs}function fE(){for(;null!==gs;)LE(gs)}function mE(){for(;null!==gs&&!ma();)LE(gs)}function LE(e){var t=Qs(e.alternate,e,ys);e.memoizedProps=e.pendingProps,null===t?FE(e):gs=t,Fs.current=null}function FE(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=is(n,t,ys)))return void(gs=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&ys)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ss(t)))return n.flags&=2047,void(gs=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(gs=t);gs=t=e}while(null!==t);0===vs&&(vs=5)}function ME(e){var t=ka();return Ha(99,wE.bind(null,e,t)),null}function wE(e,t){do{bE()}while(null!==Js);if(0!=(48&Ms))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,_=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var s=e.eventTimes,E=e.expirationTimes;0<_;){var o=31-kt(_),T=1<<o;a[o]=0,s[o]=-1,E[o]=-1,_&=~T}if(null!==rE&&0==(24&r)&&rE.has(e)&&rE.delete(e),e===ws&&(gs=ws=null,bs=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Ms,Ms|=32,Fs.current=null,Kr=Wt,Ar(s=Or())){if("selectionStart"in s)E={start:s.selectionStart,end:s.selectionEnd};else e:if(E=(E=s.ownerDocument)&&E.defaultView||window,(T=E.getSelection&&E.getSelection())&&0!==T.rangeCount){E=T.anchorNode,_=T.anchorOffset,o=T.focusNode,T=T.focusOffset;try{E.nodeType,o.nodeType}catch(U){E=null;break e}var d=0,I=-1,u=-1,N=0,R=0,O=s,A=null;t:for(;;){for(var l;O!==E||0!==_&&3!==O.nodeType||(I=d+_),O!==o||0!==T&&3!==O.nodeType||(u=d+T),3===O.nodeType&&(d+=O.nodeValue.length),null!==(l=O.firstChild);)A=O,O=l;for(;;){if(O===s)break t;if(A===E&&++N===_&&(I=d),A===o&&++R===T&&(u=d),null!==(l=O.nextSibling))break;A=(O=A).parentNode}O=l}E=-1===I||-1===u?null:{start:I,end:u}}else E=null;E=E||{start:0,end:0}}else E=null;Gr={focusedElem:s,selectionRange:E},Wt=!1,oE=null,TE=!1,js=r;do{try{gE()}catch(U){if(null===js)throw Error(i(330));BE(js,U),js=js.nextEffect}}while(null!==js);oE=null,js=r;do{try{for(s=e;null!==js;){var D=js.flags;if(16&D&&le(js.stateNode,""),128&D){var h=js.alternate;if(null!==h){var S=h.ref;null!==S&&("function"==typeof S?S(null):S.current=null)}}switch(1038&D){case 2:Ss(js),js.flags&=-3;break;case 6:Ss(js),js.flags&=-3,Cs(js.alternate,js);break;case 1024:js.flags&=-1025;break;case 1028:js.flags&=-1025,Cs(js.alternate,js);break;case 4:Cs(js.alternate,js);break;case 8:Ps(s,E=js);var p=E.alternate;Ds(E),null!==p&&Ds(p)}js=js.nextEffect}}catch(U){if(null===js)throw Error(i(330));BE(js,U),js=js.nextEffect}}while(null!==js);if(S=Gr,h=Or(),D=S.focusedElem,s=S.selectionRange,h!==D&&D&&D.ownerDocument&&Rr(D.ownerDocument.documentElement,D)){null!==s&&Ar(D)&&(h=s.start,void 0===(S=s.end)&&(S=h),"selectionStart"in D?(D.selectionStart=h,D.selectionEnd=Math.min(S,D.value.length)):(S=(h=D.ownerDocument||document)&&h.defaultView||window).getSelection&&(S=S.getSelection(),E=D.textContent.length,p=Math.min(s.start,E),s=void 0===s.end?p:Math.min(s.end,E),!S.extend&&p>s&&(E=s,s=p,p=E),E=Nr(D,p),_=Nr(D,s),E&&_&&(1!==S.rangeCount||S.anchorNode!==E.node||S.anchorOffset!==E.offset||S.focusNode!==_.node||S.focusOffset!==_.offset)&&((h=h.createRange()).setStart(E.node,E.offset),S.removeAllRanges(),p>s?(S.addRange(h),S.extend(_.node,_.offset)):(h.setEnd(_.node,_.offset),S.addRange(h))))),h=[];for(S=D;S=S.parentNode;)1===S.nodeType&&h.push({element:S,left:S.scrollLeft,top:S.scrollTop});for("function"==typeof D.focus&&D.focus(),D=0;D<h.length;D++)(S=h[D]).element.scrollLeft=S.left,S.element.scrollTop=S.top}Wt=!!Kr,Gr=Kr=null,e.current=n,js=r;do{try{for(D=e;null!==js;){var c=js.flags;if(36&c&&Os(D,js.alternate,js),128&c){h=void 0;var P=js.ref;if(null!==P){var C=js.stateNode;js.tag,h=C,"function"==typeof P?P(h):P.current=h}}js=js.nextEffect}}catch(U){if(null===js)throw Error(i(330));BE(js,U),js=js.nextEffect}}while(null!==js);js=null,Va(),Ms=a}else e.current=n;if($s)$s=!1,Js=e,eE=t;else for(js=r;null!==js;)t=js.nextEffect,js.nextEffect=null,8&js.flags&&((c=js).sibling=null,c.stateNode=null),js=t;if(0===(r=e.pendingLanes)&&(Zs=null),1===r?e===_E?aE++:(aE=0,_E=e):aE=0,n=n.stateNode,Pa&&"function"==typeof Pa.onCommitFiberRoot)try{Pa.onCommitFiberRoot(ca,n,void 0,64==(64&n.current.flags))}catch(U){}if(RE(e,qa()),Ws)throw Ws=!1,e=zs,zs=null,e;return 0!=(8&Ms)||ja(),null}function gE(){for(;null!==js;){var e=js.alternate;TE||null===oE||(0!=(8&js.flags)?et(js,oE)&&(TE=!0):13===js.tag&&fs(e,js)&&et(js,oE)&&(TE=!0));var t=js.flags;0!=(256&t)&&Rs(e,js),0==(512&t)||$s||($s=!0,Qa(97,(function(){return bE(),null}))),js=js.nextEffect}}function bE(){if(90!==eE){var e=97<eE?97:eE;return eE=90,Ha(e,vE)}return!1}function yE(e,t){tE.push(t,e),$s||($s=!0,Qa(97,(function(){return bE(),null})))}function XE(e,t){nE.push(t,e),$s||($s=!0,Qa(97,(function(){return bE(),null})))}function vE(){if(null===Js)return!1;var e=Js;if(Js=null,0!=(48&Ms))throw Error(i(331));var t=Ms;Ms|=32;var n=nE;nE=[];for(var r=0;r<n.length;r+=2){var a=n[r],_=n[r+1],s=a.destroy;if(a.destroy=void 0,"function"==typeof s)try{s()}catch(o){if(null===_)throw Error(i(330));BE(_,o)}}for(n=tE,tE=[],r=0;r<n.length;r+=2){a=n[r],_=n[r+1];try{var E=a.create;a.destroy=E()}catch(o){if(null===_)throw Error(i(330));BE(_,o)}}for(E=e.current.firstEffect;null!==E;)e=E.nextEffect,E.nextEffect=null,8&E.flags&&(E.sibling=null,E.stateNode=null),E=e;return Ms=t,ja(),!0}function VE(e,t,n){d_(e,t=ds(0,t=Es(n,t),1)),t=dE(),null!==(e=NE(e,1))&&(qt(e,1,t),RE(e,t))}function BE(e,t){if(3===e.tag)VE(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){VE(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Zs||!Zs.has(r))){var a=Is(n,e=Es(t,e),1);if(d_(n,a),a=dE(),null!==(n=NE(n,1)))qt(n,1,a),RE(n,a);else if("function"==typeof r.componentDidCatch&&(null===Zs||!Zs.has(r)))try{r.componentDidCatch(t,e)}catch(_){}break}}n=n.return}}function YE(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=dE(),e.pingedLanes|=e.suspendedLanes&n,ws===e&&(bs&n)===n&&(4===vs||3===vs&&(62914560&bs)===bs&&500>qa()-ks?cE(e,0):Gs|=n),RE(e,t)}function KE(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===ka()?1:2:(0===sE&&(sE=Bs),0===(t=Kt(62914560&~sE))&&(t=4194304))),n=dE(),null!==(e=NE(e,t))&&(qt(e,t,n),RE(e,n))}function GE(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function qE(e,t,n,r){return new GE(e,t,n,r)}function kE(e){return!(!(e=e.prototype)||!e.isReactComponent)}function xE(e,t){var n=e.alternate;return null===n?((n=qE(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function HE(e,t,n,r,a,_){var s=2;if(r=e,"function"==typeof e)kE(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case P:return QE(n.children,a,_,t);case X:s=8,a|=16;break;case C:s=8,a|=1;break;case U:return(e=qE(12,n,t,8|a)).elementType=U,e.type=U,e.lanes=_,e;case F:return(e=qE(13,n,t,a)).type=F,e.elementType=F,e.lanes=_,e;case M:return(e=qE(19,n,t,a)).elementType=M,e.lanes=_,e;case v:return jE(n,a,_,t);case V:return(e=qE(24,n,t,a)).elementType=V,e.lanes=_,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case f:s=10;break e;case m:s=9;break e;case L:s=11;break e;case w:s=14;break e;case g:s=16,r=null;break e;case b:s=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=qE(s,n,t,a)).elementType=e,t.type=r,t.lanes=_,t}function QE(e,t,n,r){return(e=qE(7,e,r,t)).lanes=n,e}function jE(e,t,n,r){return(e=qE(23,e,r,t)).elementType=v,e.lanes=n,e}function WE(e,t,n){return(e=qE(6,e,null,t)).lanes=n,e}function zE(e,t,n){return(t=qE(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function ZE(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Gt(0),this.expirationTimes=Gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Gt(0),this.mutableSourceEagerHydrationData=null}function $E(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:c,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function JE(e,t,n,r){var a=t.current,_=dE(),s=IE(a);e:if(n){t:{if(ze(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var E=n;do{switch(E.tag){case 3:E=E.stateNode.context;break t;case 1:if(Aa(E.type)){E=E.stateNode.__reactInternalMemoizedMergedChildContext;break t}}E=E.return}while(null!==E);throw Error(i(171))}if(1===n.tag){var o=n.type;if(Aa(o)){n=ha(n,o,E);break e}}n=E}else n=Ia;return null===t.context?t.context=n:t.pendingContext=n,(t=T_(_,s)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),d_(a,t),uE(a,s,_),s}function eo(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function to(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function no(e,t){to(e,t),(e=e.alternate)&&to(e,t)}function ro(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new ZE(e,t,null!=n&&!0===n.hydrate),t=qE(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,E_(t),e[ea]=n.current,wr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function ao(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function _o(e,t,n,r,a){var _=n._reactRootContainer;if(_){var i=_._internalRoot;if("function"==typeof a){var s=a;a=function(){var e=eo(i);s.call(e)}}JE(t,i,e,a)}else{if(_=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new ro(e,0,t?{hydrate:!0}:void 0)}(n,r),i=_._internalRoot,"function"==typeof a){var E=a;a=function(){var e=eo(i);E.call(e)}}hE((function(){JE(t,i,e,a)}))}return eo(i)}function io(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ao(t))throw Error(i(200));return $E(e,t,null,n)}Qs=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||Na.current)Xi=!0;else{if(0==(n&r)){switch(Xi=!1,t.tag){case 3:Hi(t),Q_();break;case 5:y_(t);break;case 1:Aa(t.type)&&Sa(t);break;case 4:g_(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;da($a,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Zi(e,t,n):(da(v_,1&v_.current),null!==(t=as(e,t,n))?t.sibling:null);da(v_,1&v_.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return rs(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),da(v_,v_.current),r)break;return null;case 23:case 24:return t.lanes=0,Ki(e,t,n)}return as(e,t,n)}Xi=0!=(16384&e.flags)}else Xi=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=Oa(t,ua.current),__(t,n),a=ii(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,Aa(r)){var _=!0;Sa(t)}else _=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,E_(t);var s=r.getDerivedStateFromProps;"function"==typeof s&&O_(t,r,s,e),a.updater=A_,t.stateNode=a,a._reactInternals=t,S_(t,r,e,n),t=xi(null,t,r,!0,_,n)}else t.tag=0,vi(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(_=a._init)(a._payload),t.type=a,_=t.tag=function(e){if("function"==typeof e)return kE(e)?1:0;if(null!=e){if((e=e.$$typeof)===L)return 11;if(e===w)return 14}return 2}(a),e=Za(a,e),_){case 0:t=qi(null,t,a,e,n);break e;case 1:t=ki(null,t,a,e,n);break e;case 11:t=Vi(null,t,a,e,n);break e;case 14:t=Bi(null,t,a,Za(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,qi(e,t,r,a=t.elementType===r?a:Za(r,a),n);case 1:return r=t.type,a=t.pendingProps,ki(e,t,r,a=t.elementType===r?a:Za(r,a),n);case 3:if(Hi(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,o_(e,t),u_(t,r,null,n),(r=t.memoizedState.element)===a)Q_(),t=as(e,t,n);else{if((_=(a=t.stateNode).hydrate)&&(Y_=jr(t.stateNode.containerInfo.firstChild),B_=t,_=K_=!0),_){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(_=e[a])._workInProgressVersionPrimary=e[a+1],j_.push(_);for(n=f_(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else vi(e,t,r,n),Q_();t=t.child}return t;case 5:return y_(t),null===e&&k_(t),r=t.type,a=t.pendingProps,_=null!==e?e.memoizedProps:null,s=a.children,kr(r,a)?s=null:null!==_&&kr(r,_)&&(t.flags|=16),Gi(e,t),vi(e,t,s,n),t.child;case 6:return null===e&&k_(t),null;case 13:return Zi(e,t,n);case 4:return g_(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=U_(t,null,r,n):vi(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Vi(e,t,r,a=t.elementType===r?a:Za(r,a),n);case 7:return vi(e,t,t.pendingProps,n),t.child;case 8:case 12:return vi(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,s=t.memoizedProps,_=a.value;var E=t.type._context;if(da($a,E._currentValue),E._currentValue=_,null!==s)if(E=s.value,0===(_=Tr(E,_)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(E,_):1073741823))){if(s.children===a.children&&!Na.current){t=as(e,t,n);break e}}else for(null!==(E=t.child)&&(E.return=t);null!==E;){var o=E.dependencies;if(null!==o){s=E.child;for(var T=o.firstContext;null!==T;){if(T.context===r&&0!=(T.observedBits&_)){1===E.tag&&((T=T_(-1,n&-n)).tag=2,d_(E,T)),E.lanes|=n,null!==(T=E.alternate)&&(T.lanes|=n),a_(E.return,n),o.lanes|=n;break}T=T.next}}else s=10===E.tag&&E.type===t.type?null:E.child;if(null!==s)s.return=E;else for(s=E;null!==s;){if(s===t){s=null;break}if(null!==(E=s.sibling)){E.return=s.return,s=E;break}s=s.return}E=s}vi(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(_=t.pendingProps).children,__(t,n),r=r(a=i_(a,_.unstable_observedBits)),t.flags|=1,vi(e,t,r,n),t.child;case 14:return _=Za(a=t.type,t.pendingProps),Bi(e,t,a,_=Za(a.type,_),r,n);case 15:return Yi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Za(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,Aa(r)?(e=!0,Sa(t)):e=!1,__(t,n),D_(t,r,a),S_(t,r,a,n),xi(null,t,r,!0,e,n);case 19:return rs(e,t,n);case 23:case 24:return Ki(e,t,n)}throw Error(i(156,t.tag))},ro.prototype.render=function(e){JE(e,this._internalRoot,null,null)},ro.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;JE(null,e,null,(function(){t[ea]=null}))},tt=function(e){13===e.tag&&(uE(e,4,dE()),no(e,4))},nt=function(e){13===e.tag&&(uE(e,67108864,dE()),no(e,67108864))},rt=function(e){if(13===e.tag){var t=dE(),n=IE(e);uE(e,n,t),no(e,n)}},at=function(e,t){return t()},fe=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=_a(r);if(!a)throw Error(i(90));Z(r),ne(r,a)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},ge=DE,be=function(e,t,n,r,a){var _=Ms;Ms|=4;try{return Ha(98,e.bind(null,t,n,r,a))}finally{0===(Ms=_)&&(Hs(),ja())}},ye=function(){0==(49&Ms)&&(function(){if(null!==rE){var e=rE;rE=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,RE(e,qa())}))}ja()}(),bE())},Xe=function(e,t){var n=Ms;Ms|=2;try{return e(t)}finally{0===(Ms=n)&&(Hs(),ja())}};var so={Events:[ra,aa,_a,Me,we,bE,{current:!1}]},Eo={findFiberByHostInstance:na,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},oo={bundleType:Eo.bundleType,version:Eo.version,rendererPackageName:Eo.rendererPackageName,rendererConfig:Eo.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:S.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:Eo.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var To=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!To.isDisabled&&To.supportsFiber)try{ca=To.inject(oo),Pa=To}catch(Oe){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=so,t.createPortal=io,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=Je(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ms;if(0!=(48&n))return e(t);Ms|=1;try{if(e)return Ha(99,e.bind(null,t))}finally{Ms=n,ja()}},t.hydrate=function(e,t,n){if(!ao(t))throw Error(i(200));return _o(null,e,t,!0,n)},t.render=function(e,t,n){if(!ao(t))throw Error(i(200));return _o(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!ao(e))throw Error(i(40));return!!e._reactRootContainer&&(hE((function(){_o(null,null,e,!1,(function(){e._reactRootContainer=null,e[ea]=null}))})),!0)},t.unstable_batchedUpdates=DE,t.unstable_createPortal=function(e,t){return io(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!ao(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return _o(e,t,n,!1,r)},t.version="17.0.2"},73935:function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(64448)},69590:function(e){var t="undefined"!=typeof Element,n="function"==typeof Map,r="function"==typeof Set,a="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function _(e,i){if(e===i)return!0;if(e&&i&&"object"==typeof e&&"object"==typeof i){if(e.constructor!==i.constructor)return!1;var s,E,o,T;if(Array.isArray(e)){if((s=e.length)!=i.length)return!1;for(E=s;0!=E--;)if(!_(e[E],i[E]))return!1;return!0}if(n&&e instanceof Map&&i instanceof Map){if(e.size!==i.size)return!1;for(T=e.entries();!(E=T.next()).done;)if(!i.has(E.value[0]))return!1;for(T=e.entries();!(E=T.next()).done;)if(!_(E.value[1],i.get(E.value[0])))return!1;return!0}if(r&&e instanceof Set&&i instanceof Set){if(e.size!==i.size)return!1;for(T=e.entries();!(E=T.next()).done;)if(!i.has(E.value[0]))return!1;return!0}if(a&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(i)){if((s=e.length)!=i.length)return!1;for(E=s;0!=E--;)if(e[E]!==i[E])return!1;return!0}if(e.constructor===RegExp)return e.source===i.source&&e.flags===i.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===i.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===i.toString();if((s=(o=Object.keys(e)).length)!==Object.keys(i).length)return!1;for(E=s;0!=E--;)if(!Object.prototype.hasOwnProperty.call(i,o[E]))return!1;if(t&&e instanceof Element)return!1;for(E=s;0!=E--;)if(("_owner"!==o[E]&&"__v"!==o[E]&&"__o"!==o[E]||!e.$$typeof)&&!_(e[o[E]],i[o[E]]))return!1;return!0}return e!=e&&i!=i}e.exports=function(e,t){try{return _(e,t)}catch(n){if((n.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw n}}},70405:function(e,t,n){"use strict";n.d(t,{B6:function(){return x},ql:function(){return J}});var r=n(67294),a=n(45697),_=n.n(a),i=n(69590),s=n.n(i),E=n(41143),o=n.n(E),T=n(96774),d=n.n(T);function I(){return I=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},I.apply(this,arguments)}function u(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,N(e,t)}function N(e,t){return N=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},N(e,t)}function R(e,t){if(null==e)return{};var n,r,a={},_=Object.keys(e);for(r=0;r<_.length;r++)t.indexOf(n=_[r])>=0||(a[n]=e[n]);return a}var O={BASE:"base",BODY:"body",HEAD:"head",HTML:"html",LINK:"link",META:"meta",NOSCRIPT:"noscript",SCRIPT:"script",STYLE:"style",TITLE:"title",FRAGMENT:"Symbol(react.fragment)"},A={rel:["amphtml","canonical","alternate"]},l={type:["application/ld+json"]},D={charset:"",name:["robots","description"],property:["og:type","og:title","og:url","og:image","og:image:alt","og:description","twitter:url","twitter:title","twitter:description","twitter:image","twitter:image:alt","twitter:card","twitter:site"]},h=Object.keys(O).map((function(e){return O[e]})),S={accesskey:"accessKey",charset:"charSet",class:"className",contenteditable:"contentEditable",contextmenu:"contextMenu","http-equiv":"httpEquiv",itemprop:"itemProp",tabindex:"tabIndex"},p=Object.keys(S).reduce((function(e,t){return e[S[t]]=t,e}),{}),c=function(e,t){for(var n=e.length-1;n>=0;n-=1){var r=e[n];if(Object.prototype.hasOwnProperty.call(r,t))return r[t]}return null},P=function(e){var t=c(e,O.TITLE),n=c(e,"titleTemplate");if(Array.isArray(t)&&(t=t.join("")),n&&t)return n.replace(/%s/g,(function(){return t}));var r=c(e,"defaultTitle");return t||r||void 0},C=function(e){return c(e,"onChangeClientState")||function(){}},U=function(e,t){return t.filter((function(t){return void 0!==t[e]})).map((function(t){return t[e]})).reduce((function(e,t){return I({},e,t)}),{})},f=function(e,t){return t.filter((function(e){return void 0!==e[O.BASE]})).map((function(e){return e[O.BASE]})).reverse().reduce((function(t,n){if(!t.length)for(var r=Object.keys(n),a=0;a<r.length;a+=1){var _=r[a].toLowerCase();if(-1!==e.indexOf(_)&&n[_])return t.concat(n)}return t}),[])},m=function(e,t,n){var r={};return n.filter((function(t){return!!Array.isArray(t[e])||(void 0!==t[e]&&console&&"function"==typeof console.warn&&console.warn("Helmet: "+e+' should be of type "Array". Instead found type "'+typeof t[e]+'"'),!1)})).map((function(t){return t[e]})).reverse().reduce((function(e,n){var a={};n.filter((function(e){for(var n,_=Object.keys(e),i=0;i<_.length;i+=1){var s=_[i],E=s.toLowerCase();-1===t.indexOf(E)||"rel"===n&&"canonical"===e[n].toLowerCase()||"rel"===E&&"stylesheet"===e[E].toLowerCase()||(n=E),-1===t.indexOf(s)||"innerHTML"!==s&&"cssText"!==s&&"itemprop"!==s||(n=s)}if(!n||!e[n])return!1;var o=e[n].toLowerCase();return r[n]||(r[n]={}),a[n]||(a[n]={}),!r[n][o]&&(a[n][o]=!0,!0)})).reverse().forEach((function(t){return e.push(t)}));for(var _=Object.keys(a),i=0;i<_.length;i+=1){var s=_[i],E=I({},r[s],a[s]);r[s]=E}return e}),[]).reverse()},L=function(e,t){if(Array.isArray(e)&&e.length)for(var n=0;n<e.length;n+=1)if(e[n][t])return!0;return!1},F=function(e){return Array.isArray(e)?e.join(""):e},M=function(e,t){return Array.isArray(e)?e.reduce((function(e,n){return function(e,t){for(var n=Object.keys(e),r=0;r<n.length;r+=1)if(t[n[r]]&&t[n[r]].includes(e[n[r]]))return!0;return!1}(n,t)?e.priority.push(n):e.default.push(n),e}),{priority:[],default:[]}):{default:e}},w=function(e,t){var n;return I({},e,((n={})[t]=void 0,n))},g=[O.NOSCRIPT,O.SCRIPT,O.STYLE],b=function(e,t){return void 0===t&&(t=!0),!1===t?String(e):String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")},y=function(e){return Object.keys(e).reduce((function(t,n){var r=void 0!==e[n]?n+'="'+e[n]+'"':""+n;return t?t+" "+r:r}),"")},X=function(e,t){return void 0===t&&(t={}),Object.keys(e).reduce((function(t,n){return t[S[n]||n]=e[n],t}),t)},v=function(e,t){return t.map((function(t,n){var a,_=((a={key:n})["data-rh"]=!0,a);return Object.keys(t).forEach((function(e){var n=S[e]||e;"innerHTML"===n||"cssText"===n?_.dangerouslySetInnerHTML={__html:t.innerHTML||t.cssText}:_[n]=t[e]})),r.createElement(e,_)}))},V=function(e,t,n){switch(e){case O.TITLE:return{toComponent:function(){return n=t.titleAttributes,(a={key:e=t.title})["data-rh"]=!0,_=X(n,a),[r.createElement(O.TITLE,_,e)];var e,n,a,_},toString:function(){return function(e,t,n,r){var a=y(n),_=F(t);return a?"<"+e+' data-rh="true" '+a+">"+b(_,r)+"</"+e+">":"<"+e+' data-rh="true">'+b(_,r)+"</"+e+">"}(e,t.title,t.titleAttributes,n)}};case"bodyAttributes":case"htmlAttributes":return{toComponent:function(){return X(t)},toString:function(){return y(t)}};default:return{toComponent:function(){return v(e,t)},toString:function(){return function(e,t,n){return t.reduce((function(t,r){var a=Object.keys(r).filter((function(e){return!("innerHTML"===e||"cssText"===e)})).reduce((function(e,t){var a=void 0===r[t]?t:t+'="'+b(r[t],n)+'"';return e?e+" "+a:a}),""),_=r.innerHTML||r.cssText||"",i=-1===g.indexOf(e);return t+"<"+e+' data-rh="true" '+a+(i?"/>":">"+_+"</"+e+">")}),"")}(e,t,n)}}}},B=function(e){var t=e.baseTag,n=e.bodyAttributes,r=e.encode,a=e.htmlAttributes,_=e.noscriptTags,i=e.styleTags,s=e.title,E=void 0===s?"":s,o=e.titleAttributes,T=e.linkTags,d=e.metaTags,I=e.scriptTags,u={toComponent:function(){},toString:function(){return""}};if(e.prioritizeSeoTags){var N=function(e){var t=e.linkTags,n=e.scriptTags,r=e.encode,a=M(e.metaTags,D),_=M(t,A),i=M(n,l);return{priorityMethods:{toComponent:function(){return[].concat(v(O.META,a.priority),v(O.LINK,_.priority),v(O.SCRIPT,i.priority))},toString:function(){return V(O.META,a.priority,r)+" "+V(O.LINK,_.priority,r)+" "+V(O.SCRIPT,i.priority,r)}},metaTags:a.default,linkTags:_.default,scriptTags:i.default}}(e);u=N.priorityMethods,T=N.linkTags,d=N.metaTags,I=N.scriptTags}return{priority:u,base:V(O.BASE,t,r),bodyAttributes:V("bodyAttributes",n,r),htmlAttributes:V("htmlAttributes",a,r),link:V(O.LINK,T,r),meta:V(O.META,d,r),noscript:V(O.NOSCRIPT,_,r),script:V(O.SCRIPT,I,r),style:V(O.STYLE,i,r),title:V(O.TITLE,{title:E,titleAttributes:o},r)}},Y=[],K=function(e,t){var n=this;void 0===t&&(t="undefined"!=typeof document),this.instances=[],this.value={setHelmet:function(e){n.context.helmet=e},helmetInstances:{get:function(){return n.canUseDOM?Y:n.instances},add:function(e){(n.canUseDOM?Y:n.instances).push(e)},remove:function(e){var t=(n.canUseDOM?Y:n.instances).indexOf(e);(n.canUseDOM?Y:n.instances).splice(t,1)}}},this.context=e,this.canUseDOM=t,t||(e.helmet=B({baseTag:[],bodyAttributes:{},encodeSpecialCharacters:!0,htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:"",titleAttributes:{}}))},G=r.createContext({}),q=_().shape({setHelmet:_().func,helmetInstances:_().shape({get:_().func,add:_().func,remove:_().func})}),k="undefined"!=typeof document,x=function(e){function t(n){var r;return(r=e.call(this,n)||this).helmetData=new K(r.props.context,t.canUseDOM),r}return u(t,e),t.prototype.render=function(){return r.createElement(G.Provider,{value:this.helmetData.value},this.props.children)},t}(r.Component);x.canUseDOM=k,x.propTypes={context:_().shape({helmet:_().shape()}),children:_().node.isRequired},x.defaultProps={context:{}},x.displayName="HelmetProvider";var H=function(e,t){var n,r=document.head||document.querySelector(O.HEAD),a=r.querySelectorAll(e+"[data-rh]"),_=[].slice.call(a),i=[];return t&&t.length&&t.forEach((function(t){var r=document.createElement(e);for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&("innerHTML"===a?r.innerHTML=t.innerHTML:"cssText"===a?r.styleSheet?r.styleSheet.cssText=t.cssText:r.appendChild(document.createTextNode(t.cssText)):r.setAttribute(a,void 0===t[a]?"":t[a]));r.setAttribute("data-rh","true"),_.some((function(e,t){return n=t,r.isEqualNode(e)}))?_.splice(n,1):i.push(r)})),_.forEach((function(e){return e.parentNode.removeChild(e)})),i.forEach((function(e){return r.appendChild(e)})),{oldTags:_,newTags:i}},Q=function(e,t){var n=document.getElementsByTagName(e)[0];if(n){for(var r=n.getAttribute("data-rh"),a=r?r.split(","):[],_=[].concat(a),i=Object.keys(t),s=0;s<i.length;s+=1){var E=i[s],o=t[E]||"";n.getAttribute(E)!==o&&n.setAttribute(E,o),-1===a.indexOf(E)&&a.push(E);var T=_.indexOf(E);-1!==T&&_.splice(T,1)}for(var d=_.length-1;d>=0;d-=1)n.removeAttribute(_[d]);a.length===_.length?n.removeAttribute("data-rh"):n.getAttribute("data-rh")!==i.join(",")&&n.setAttribute("data-rh",i.join(","))}},j=function(e,t){var n=e.baseTag,r=e.htmlAttributes,a=e.linkTags,_=e.metaTags,i=e.noscriptTags,s=e.onChangeClientState,E=e.scriptTags,o=e.styleTags,T=e.title,d=e.titleAttributes;Q(O.BODY,e.bodyAttributes),Q(O.HTML,r),function(e,t){void 0!==e&&document.title!==e&&(document.title=F(e)),Q(O.TITLE,t)}(T,d);var I={baseTag:H(O.BASE,n),linkTags:H(O.LINK,a),metaTags:H(O.META,_),noscriptTags:H(O.NOSCRIPT,i),scriptTags:H(O.SCRIPT,E),styleTags:H(O.STYLE,o)},u={},N={};Object.keys(I).forEach((function(e){var t=I[e],n=t.newTags,r=t.oldTags;n.length&&(u[e]=n),r.length&&(N[e]=I[e].oldTags)})),t&&t(),s(e,u,N)},W=null,z=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).rendered=!1,t}u(t,e);var n=t.prototype;return n.shouldComponentUpdate=function(e){return!d()(e,this.props)},n.componentDidUpdate=function(){this.emitChange()},n.componentWillUnmount=function(){this.props.context.helmetInstances.remove(this),this.emitChange()},n.emitChange=function(){var e,t,n=this.props.context,r=n.setHelmet,a=null,_=(e=n.helmetInstances.get().map((function(e){var t=I({},e.props);return delete t.context,t})),{baseTag:f(["href"],e),bodyAttributes:U("bodyAttributes",e),defer:c(e,"defer"),encode:c(e,"encodeSpecialCharacters"),htmlAttributes:U("htmlAttributes",e),linkTags:m(O.LINK,["rel","href"],e),metaTags:m(O.META,["name","charset","http-equiv","property","itemprop"],e),noscriptTags:m(O.NOSCRIPT,["innerHTML"],e),onChangeClientState:C(e),scriptTags:m(O.SCRIPT,["src","innerHTML"],e),styleTags:m(O.STYLE,["cssText"],e),title:P(e),titleAttributes:U("titleAttributes",e),prioritizeSeoTags:L(e,"prioritizeSeoTags")});x.canUseDOM?(t=_,W&&cancelAnimationFrame(W),t.defer?W=requestAnimationFrame((function(){j(t,(function(){W=null}))})):(j(t),W=null)):B&&(a=B(_)),r(a)},n.init=function(){this.rendered||(this.rendered=!0,this.props.context.helmetInstances.add(this),this.emitChange())},n.render=function(){return this.init(),null},t}(r.Component);z.propTypes={context:q.isRequired},z.displayName="HelmetDispatcher";var Z=["children"],$=["children"],J=function(e){function t(){return e.apply(this,arguments)||this}u(t,e);var n=t.prototype;return n.shouldComponentUpdate=function(e){return!s()(w(this.props,"helmetData"),w(e,"helmetData"))},n.mapNestedChildrenToProps=function(e,t){if(!t)return null;switch(e.type){case O.SCRIPT:case O.NOSCRIPT:return{innerHTML:t};case O.STYLE:return{cssText:t};default:throw new Error("<"+e.type+" /> elements are self-closing and can not contain children. Refer to our API for more information.")}},n.flattenArrayTypeChildren=function(e){var t,n=e.child,r=e.arrayTypeChildren;return I({},r,((t={})[n.type]=[].concat(r[n.type]||[],[I({},e.newChildProps,this.mapNestedChildrenToProps(n,e.nestedChildren))]),t))},n.mapObjectTypeChildren=function(e){var t,n,r=e.child,a=e.newProps,_=e.newChildProps,i=e.nestedChildren;switch(r.type){case O.TITLE:return I({},a,((t={})[r.type]=i,t.titleAttributes=I({},_),t));case O.BODY:return I({},a,{bodyAttributes:I({},_)});case O.HTML:return I({},a,{htmlAttributes:I({},_)});default:return I({},a,((n={})[r.type]=I({},_),n))}},n.mapArrayTypeChildrenToProps=function(e,t){var n=I({},t);return Object.keys(e).forEach((function(t){var r;n=I({},n,((r={})[t]=e[t],r))})),n},n.warnOnInvalidChildren=function(e,t){return o()(h.some((function(t){return e.type===t})),"function"==typeof e.type?"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.":"Only elements types "+h.join(", ")+" are allowed. Helmet does not support rendering <"+e.type+"> elements. Refer to our API for more information."),o()(!t||"string"==typeof t||Array.isArray(t)&&!t.some((function(e){return"string"!=typeof e})),"Helmet expects a string as a child of <"+e.type+">. Did you forget to wrap your children in braces? ( <"+e.type+">{``}</"+e.type+"> ) Refer to our API for more information."),!0},n.mapChildrenToProps=function(e,t){var n=this,a={};return r.Children.forEach(e,(function(e){if(e&&e.props){var r=e.props,_=r.children,i=R(r,Z),s=Object.keys(i).reduce((function(e,t){return e[p[t]||t]=i[t],e}),{}),E=e.type;switch("symbol"==typeof E?E=E.toString():n.warnOnInvalidChildren(e,_),E){case O.FRAGMENT:t=n.mapChildrenToProps(_,t);break;case O.LINK:case O.META:case O.NOSCRIPT:case O.SCRIPT:case O.STYLE:a=n.flattenArrayTypeChildren({child:e,arrayTypeChildren:a,newChildProps:s,nestedChildren:_});break;default:t=n.mapObjectTypeChildren({child:e,newProps:t,newChildProps:s,nestedChildren:_})}}})),this.mapArrayTypeChildrenToProps(a,t)},n.render=function(){var e=this.props,t=e.children,n=R(e,$),a=I({},n),_=n.helmetData;return t&&(a=this.mapChildrenToProps(t,a)),!_||_ instanceof K||(_=new K(_.context,_.instances)),_?r.createElement(z,I({},a,{context:_.value,helmetData:void 0})):r.createElement(G.Consumer,null,(function(e){return r.createElement(z,I({},a,{context:e}))}))},t}(r.Component);J.propTypes={base:_().object,bodyAttributes:_().object,children:_().oneOfType([_().arrayOf(_().node),_().node]),defaultTitle:_().string,defer:_().bool,encodeSpecialCharacters:_().bool,htmlAttributes:_().object,link:_().arrayOf(_().object),meta:_().arrayOf(_().object),noscript:_().arrayOf(_().object),onChangeClientState:_().func,script:_().arrayOf(_().object),style:_().arrayOf(_().object),title:_().string,titleAttributes:_().object,titleTemplate:_().string,prioritizeSeoTags:_().bool,helmetData:_().object},J.defaultProps={defer:!0,encodeSpecialCharacters:!0,prioritizeSeoTags:!1},J.displayName="Helmet"},69921:function(e,t){"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,_=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,s=n?Symbol.for("react.profiler"):60114,E=n?Symbol.for("react.provider"):60109,o=n?Symbol.for("react.context"):60110,T=n?Symbol.for("react.async_mode"):60111,d=n?Symbol.for("react.concurrent_mode"):60111,I=n?Symbol.for("react.forward_ref"):60112,u=n?Symbol.for("react.suspense"):60113,N=n?Symbol.for("react.suspense_list"):60120,R=n?Symbol.for("react.memo"):60115,O=n?Symbol.for("react.lazy"):60116,A=n?Symbol.for("react.block"):60121,l=n?Symbol.for("react.fundamental"):60117,D=n?Symbol.for("react.responder"):60118,h=n?Symbol.for("react.scope"):60119;function S(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case T:case d:case _:case s:case i:case u:return e;default:switch(e=e&&e.$$typeof){case o:case I:case O:case R:case E:return e;default:return t}}case a:return t}}}function p(e){return S(e)===d}t.AsyncMode=T,t.ConcurrentMode=d,t.ContextConsumer=o,t.ContextProvider=E,t.Element=r,t.ForwardRef=I,t.Fragment=_,t.Lazy=O,t.Memo=R,t.Portal=a,t.Profiler=s,t.StrictMode=i,t.Suspense=u,t.isAsyncMode=function(e){return p(e)||S(e)===T},t.isConcurrentMode=p,t.isContextConsumer=function(e){return S(e)===o},t.isContextProvider=function(e){return S(e)===E},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return S(e)===I},t.isFragment=function(e){return S(e)===_},t.isLazy=function(e){return S(e)===O},t.isMemo=function(e){return S(e)===R},t.isPortal=function(e){return S(e)===a},t.isProfiler=function(e){return S(e)===s},t.isStrictMode=function(e){return S(e)===i},t.isSuspense=function(e){return S(e)===u},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===_||e===d||e===s||e===i||e===u||e===N||"object"==typeof e&&null!==e&&(e.$$typeof===O||e.$$typeof===R||e.$$typeof===E||e.$$typeof===o||e.$$typeof===I||e.$$typeof===l||e.$$typeof===D||e.$$typeof===h||e.$$typeof===A)},t.typeOf=S},59864:function(e,t,n){"use strict";e.exports=n(69921)},68356:function(e,t,n){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}var s=n(67294),E=n(45697),o=[],T=[];function d(e){var t=e(),n={loading:!0,loaded:null,error:null};return n.promise=t.then((function(e){return n.loading=!1,n.loaded=e,e})).catch((function(e){throw n.loading=!1,n.error=e,e})),n}function I(e){var t={loading:!1,loaded:{},error:null},n=[];try{Object.keys(e).forEach((function(r){var a=d(e[r]);a.loading?t.loading=!0:(t.loaded[r]=a.loaded,t.error=a.error),n.push(a.promise),a.promise.then((function(e){t.loaded[r]=e})).catch((function(e){t.error=e}))}))}catch(r){t.error=r}return t.promise=Promise.all(n).then((function(e){return t.loading=!1,e})).catch((function(e){throw t.loading=!1,e})),t}function u(e,t){return s.createElement((n=e)&&n.__esModule?n.default:n,t);var n}function N(e,t){var d,I;if(!t.loading)throw new Error("react-loadable requires a `loading` component");var N=i({loader:null,loading:null,delay:200,timeout:null,render:u,webpack:null,modules:null},t),R=null;function O(){return R||(R=e(N.loader)),R.promise}return o.push(O),"function"==typeof N.webpack&&T.push((function(){if((0,N.webpack)().every((function(e){return void 0!==e&&void 0!==n.m[e]})))return O()})),I=d=function(t){function n(n){var r;return _(a(a(r=t.call(this,n)||this)),"retry",(function(){r.setState({error:null,loading:!0,timedOut:!1}),R=e(N.loader),r._loadModule()})),O(),r.state={error:R.error,pastDelay:!1,timedOut:!1,loading:R.loading,loaded:R.loaded},r}r(n,t),n.preload=function(){return O()};var i=n.prototype;return i.UNSAFE_componentWillMount=function(){this._loadModule()},i.componentDidMount=function(){this._mounted=!0},i._loadModule=function(){var e=this;if(this.context.loadable&&Array.isArray(N.modules)&&N.modules.forEach((function(t){e.context.loadable.report(t)})),R.loading){var t=function(t){e._mounted&&e.setState(t)};"number"==typeof N.delay&&(0===N.delay?this.setState({pastDelay:!0}):this._delay=setTimeout((function(){t({pastDelay:!0})}),N.delay)),"number"==typeof N.timeout&&(this._timeout=setTimeout((function(){t({timedOut:!0})}),N.timeout));var n=function(){t({error:R.error,loaded:R.loaded,loading:R.loading}),e._clearTimeouts()};R.promise.then((function(){return n(),null})).catch((function(e){return n(),null}))}},i.componentWillUnmount=function(){this._mounted=!1,this._clearTimeouts()},i._clearTimeouts=function(){clearTimeout(this._delay),clearTimeout(this._timeout)},i.render=function(){return this.state.loading||this.state.error?s.createElement(N.loading,{isLoading:this.state.loading,pastDelay:this.state.pastDelay,timedOut:this.state.timedOut,error:this.state.error,retry:this.retry}):this.state.loaded?N.render(this.state.loaded,this.props):null},n}(s.Component),_(d,"contextTypes",{loadable:E.shape({report:E.func.isRequired})}),I}function R(e){return N(d,e)}R.Map=function(e){if("function"!=typeof e.render)throw new Error("LoadableMap requires a `render(loaded, props)` function");return N(I,e)};var O=function(e){function t(){return e.apply(this,arguments)||this}r(t,e);var n=t.prototype;return n.getChildContext=function(){return{loadable:{report:this.props.report}}},n.render=function(){return s.Children.only(this.props.children)},t}(s.Component);function A(e){for(var t=[];e.length;){var n=e.pop();t.push(n())}return Promise.all(t).then((function(){if(e.length)return A(e)}))}_(O,"propTypes",{report:E.func.isRequired}),_(O,"childContextTypes",{loadable:E.shape({report:E.func.isRequired}).isRequired}),R.Capture=O,R.preloadAll=function(){return new Promise((function(e,t){A(o).then(e,t)}))},R.preloadReady=function(){return new Promise((function(e,t){A(T).then(e,e)}))},e.exports=R},18790:function(e,t,n){"use strict";n.d(t,{H:function(){return s},f:function(){return i}});var r=n(76775),a=n(87462),_=n(67294);function i(e,t,n){return void 0===n&&(n=[]),e.some((function(e){var a=e.path?(0,r.LX)(t,e):n.length?n[n.length-1].match:r.F0.computeRootMatch(t);return a&&(n.push({route:e,match:a}),e.routes&&i(e.routes,t,n)),a})),n}function s(e,t,n){return void 0===t&&(t={}),void 0===n&&(n={}),e?_.createElement(r.rs,n,e.map((function(e,n){return _.createElement(r.AW,{key:e.key||n,path:e.path,exact:e.exact,strict:e.strict,render:function(n){return e.render?e.render((0,a.Z)({},n,{},t,{route:e})):_.createElement(e.component,(0,a.Z)({},n,t,{route:e}))}})}))):null}},73727:function(e,t,n){"use strict";n.d(t,{OL:function(){return D},VK:function(){return T},rU:function(){return O}});var r=n(76775),a=n(94578),_=n(67294),i=n(99318),s=n(87462),E=n(63366),o=n(2177),T=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=(0,i.lX)(t.props),t}return(0,a.Z)(t,e),t.prototype.render=function(){return _.createElement(r.F0,{history:this.history,children:this.props.children})},t}(_.Component);_.Component;var d=function(e,t){return"function"==typeof e?e(t):e},I=function(e,t){return"string"==typeof e?(0,i.ob)(e,null,null,t):e},u=function(e){return e},N=_.forwardRef;void 0===N&&(N=u);var R=N((function(e,t){var n=e.innerRef,r=e.navigate,a=e.onClick,i=(0,E.Z)(e,["innerRef","navigate","onClick"]),o=i.target,T=(0,s.Z)({},i,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||o&&"_self"!==o||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return T.ref=u!==N&&t||n,_.createElement("a",T)}));var O=N((function(e,t){var n=e.component,a=void 0===n?R:n,T=e.replace,O=e.to,A=e.innerRef,l=(0,E.Z)(e,["component","replace","to","innerRef"]);return _.createElement(r.s6.Consumer,null,(function(e){e||(0,o.Z)(!1);var n=e.history,r=I(d(O,e.location),e.location),E=r?n.createHref(r):"",R=(0,s.Z)({},l,{href:E,navigate:function(){var t=d(O,e.location),r=(0,i.Ep)(e.location)===(0,i.Ep)(I(t));(T||r?n.replace:n.push)(t)}});return u!==N?R.ref=t||A:R.innerRef=A,_.createElement(a,R)}))})),A=function(e){return e},l=_.forwardRef;void 0===l&&(l=A);var D=l((function(e,t){var n=e["aria-current"],a=void 0===n?"page":n,i=e.activeClassName,T=void 0===i?"active":i,u=e.activeStyle,N=e.className,R=e.exact,D=e.isActive,h=e.location,S=e.sensitive,p=e.strict,c=e.style,P=e.to,C=e.innerRef,U=(0,E.Z)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return _.createElement(r.s6.Consumer,null,(function(e){e||(0,o.Z)(!1);var n=h||e.location,i=I(d(P,n),n),E=i.pathname,f=E&&E.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),m=f?(0,r.LX)(n.pathname,{path:f,exact:R,sensitive:S,strict:p}):null,L=!!(D?D(m,n):m),F="function"==typeof N?N(L):N,M="function"==typeof c?c(L):c;L&&(F=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(F,T),M=(0,s.Z)({},M,u));var w=(0,s.Z)({"aria-current":L&&a||null,className:F,style:M,to:i},U);return A!==l?w.ref=t||C:w.innerRef=C,_.createElement(O,w)}))}))},76775:function(e,t,n){"use strict";n.d(t,{AW:function(){return C},F0:function(){return S},rs:function(){return M},s6:function(){return h},LX:function(){return P},k6:function(){return g},TH:function(){return b}});var r=n(94578),a=n(67294),_=n(99318),i=n(45697),s=n.n(i),E=1073741823,o="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function T(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var d=a.createContext||function(e,t){var n,_,i="__create-react-context-"+function(){var e="__global_unique_id__";return o[e]=(o[e]||0)+1}()+"__",d=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=T(t.props.value),t}(0,r.Z)(n,e);var a=n.prototype;return a.getChildContext=function(){var e;return(e={})[i]=this.emitter,e},a.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,a=e.value;((_=r)===(i=a)?0!==_||1/_==1/i:_!=_&&i!=i)?n=0:(n="function"==typeof t?t(r,a):E,0!==(n|=0)&&this.emitter.set(e.value,n))}var _,i},a.render=function(){return this.props.children},n}(a.Component);d.childContextTypes=((n={})[i]=s().object.isRequired,n);var I=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}(0,r.Z)(n,t);var a=n.prototype;return a.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?E:t},a.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?E:e},a.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},a.getValue=function(){return this.context[i]?this.context[i].get():e},a.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(a.Component);return I.contextTypes=((_={})[i]=s().object,_),{Provider:d,Consumer:I}},I=d,u=n(2177),N=n(87462),R=n(14779),O=n.n(R),A=(n(59864),n(63366)),l=(n(8679),function(e){var t=I();return t.displayName=e,t}),D=l("Router-History"),h=l("Router"),S=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._pendingLocation=e}))),n}(0,r.Z)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){var e=this;this._isMounted=!0,this.unlisten&&this.unlisten(),this.props.staticContext||(this.unlisten=this.props.history.listen((function(t){e._isMounted&&e.setState({location:t})}))),this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&(this.unlisten(),this._isMounted=!1,this._pendingLocation=null)},n.render=function(){return a.createElement(h.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},a.createElement(D.Provider,{children:this.props.children||null,value:this.props.history}))},t}(a.Component);a.Component;a.Component;var p={},c=0;function P(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,_=void 0!==a&&a,i=n.strict,s=void 0!==i&&i,E=n.sensitive,o=void 0!==E&&E;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=p[n]||(p[n]={});if(r[e])return r[e];var a=[],_={regexp:O()(e,a,t),keys:a};return c<1e4&&(r[e]=_,c++),_}(n,{end:_,strict:s,sensitive:o}),a=r.regexp,i=r.keys,E=a.exec(e);if(!E)return null;var T=E[0],d=E.slice(1),I=e===T;return _&&!I?null:{path:n,url:"/"===n&&""===T?"/":T,isExact:I,params:i.reduce((function(e,t,n){return e[t.name]=d[n],e}),{})}}),null)}var C=function(e){function t(){return e.apply(this,arguments)||this}return(0,r.Z)(t,e),t.prototype.render=function(){var e=this;return a.createElement(h.Consumer,null,(function(t){t||(0,u.Z)(!1);var n=e.props.location||t.location,r=e.props.computedMatch?e.props.computedMatch:e.props.path?P(n.pathname,e.props):t.match,_=(0,N.Z)({},t,{location:n,match:r}),i=e.props,s=i.children,E=i.component,o=i.render;return Array.isArray(s)&&function(e){return 0===a.Children.count(e)}(s)&&(s=null),a.createElement(h.Provider,{value:_},_.match?s?"function"==typeof s?s(_):s:E?a.createElement(E,_):o?o(_):null:"function"==typeof s?s(_):null)}))},t}(a.Component);function U(e){return"/"===e.charAt(0)?e:"/"+e}function f(e,t){if(!e)return t;var n=U(e);return 0!==t.pathname.indexOf(n)?t:(0,N.Z)({},t,{pathname:t.pathname.substr(n.length)})}function m(e){return"string"==typeof e?e:(0,_.Ep)(e)}function L(e){return function(){(0,u.Z)(!1)}}function F(){}a.Component;var M=function(e){function t(){return e.apply(this,arguments)||this}return(0,r.Z)(t,e),t.prototype.render=function(){var e=this;return a.createElement(h.Consumer,null,(function(t){t||(0,u.Z)(!1);var n,r,_=e.props.location||t.location;return a.Children.forEach(e.props.children,(function(e){if(null==r&&a.isValidElement(e)){n=e;var i=e.props.path||e.props.from;r=i?P(_.pathname,(0,N.Z)({},e.props,{path:i})):t.match}})),r?a.cloneElement(n,{location:_,computedMatch:r}):null}))},t}(a.Component);var w=a.useContext;function g(){return w(D)}function b(){return w(h).location}},72408:function(e,t,n){"use strict";var r=n(27418),a=60103,_=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,s=60110,E=60112;t.Suspense=60113;var o=60115,T=60116;if("function"==typeof Symbol&&Symbol.for){var d=Symbol.for;a=d("react.element"),_=d("react.portal"),t.Fragment=d("react.fragment"),t.StrictMode=d("react.strict_mode"),t.Profiler=d("react.profiler"),i=d("react.provider"),s=d("react.context"),E=d("react.forward_ref"),t.Suspense=d("react.suspense"),o=d("react.memo"),T=d("react.lazy")}var I="function"==typeof Symbol&&Symbol.iterator;function u(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var N={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},R={};function O(e,t,n){this.props=e,this.context=t,this.refs=R,this.updater=n||N}function A(){}function l(e,t,n){this.props=e,this.context=t,this.refs=R,this.updater=n||N}O.prototype.isReactComponent={},O.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(u(85));this.updater.enqueueSetState(this,e,t,"setState")},O.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},A.prototype=O.prototype;var D=l.prototype=new A;D.constructor=l,r(D,O.prototype),D.isPureReactComponent=!0;var h={current:null},S=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var r,_={},i=null,s=null;if(null!=t)for(r in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(i=""+t.key),t)S.call(t,r)&&!p.hasOwnProperty(r)&&(_[r]=t[r]);var E=arguments.length-2;if(1===E)_.children=n;else if(1<E){for(var o=Array(E),T=0;T<E;T++)o[T]=arguments[T+2];_.children=o}if(e&&e.defaultProps)for(r in E=e.defaultProps)void 0===_[r]&&(_[r]=E[r]);return{$$typeof:a,type:e,key:i,ref:s,props:_,_owner:h.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var C=/\/+/g;function U(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function f(e,t,n,r,i){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var E=!1;if(null===e)E=!0;else switch(s){case"string":case"number":E=!0;break;case"object":switch(e.$$typeof){case a:case _:E=!0}}if(E)return i=i(E=e),e=""===r?"."+U(E,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(C,"$&/")+"/"),f(i,t,n,"",(function(e){return e}))):null!=i&&(P(i)&&(i=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||E&&E.key===i.key?"":(""+i.key).replace(C,"$&/")+"/")+e)),t.push(i)),1;if(E=0,r=""===r?".":r+":",Array.isArray(e))for(var o=0;o<e.length;o++){var T=r+U(s=e[o],o);E+=f(s,t,n,T,i)}else if(T=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=I&&e[I]||e["@@iterator"])?e:null}(e),"function"==typeof T)for(e=T.call(e),o=0;!(s=e.next()).done;)E+=f(s=s.value,t,n,T=r+U(s,o++),i);else if("object"===s)throw t=""+e,Error(u(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return E}function m(e,t,n){if(null==e)return e;var r=[],a=0;return f(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function L(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var F={current:null};function M(){var e=F.current;if(null===e)throw Error(u(321));return e}var w={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:h,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:m,forEach:function(e,t,n){m(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return m(e,(function(){t++})),t},toArray:function(e){return m(e,(function(e){return e}))||[]},only:function(e){if(!P(e))throw Error(u(143));return e}},t.Component=O,t.PureComponent=l,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=w,t.cloneElement=function(e,t,n){if(null==e)throw Error(u(267,e));var _=r({},e.props),i=e.key,s=e.ref,E=e._owner;if(null!=t){if(void 0!==t.ref&&(s=t.ref,E=h.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var o=e.type.defaultProps;for(T in t)S.call(t,T)&&!p.hasOwnProperty(T)&&(_[T]=void 0===t[T]&&void 0!==o?o[T]:t[T])}var T=arguments.length-2;if(1===T)_.children=n;else if(1<T){o=Array(T);for(var d=0;d<T;d++)o[d]=arguments[d+2];_.children=o}return{$$typeof:a,type:e.type,key:i,ref:s,props:_,_owner:E}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:s,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=c,t.createFactory=function(e){var t=c.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:E,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:T,_payload:{_status:-1,_result:e},_init:L}},t.memo=function(e,t){return{$$typeof:o,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return M().useCallback(e,t)},t.useContext=function(e,t){return M().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return M().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return M().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return M().useLayoutEffect(e,t)},t.useMemo=function(e,t){return M().useMemo(e,t)},t.useReducer=function(e,t,n){return M().useReducer(e,t,n)},t.useRef=function(e){return M().useRef(e)},t.useState=function(e){return M().useState(e)},t.version="17.0.2"},67294:function(e,t,n){"use strict";e.exports=n(72408)},60053:function(e,t){"use strict";var n,r,a,_;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var s=Date,E=s.now();t.unstable_now=function(){return s.now()-E}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var o=null,T=null,d=function(){if(null!==o)try{var e=t.unstable_now();o(!0,e),o=null}catch(n){throw setTimeout(d,0),n}};n=function(e){null!==o?setTimeout(n,0,e):(o=e,setTimeout(d,0))},r=function(e,t){T=setTimeout(e,t)},a=function(){clearTimeout(T)},t.unstable_shouldYield=function(){return!1},_=t.unstable_forceFrameRate=function(){}}else{var I=window.setTimeout,u=window.clearTimeout;if("undefined"!=typeof console){var N=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof N&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var R=!1,O=null,A=-1,l=5,D=0;t.unstable_shouldYield=function(){return t.unstable_now()>=D},_=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):l=0<e?Math.floor(1e3/e):5};var h=new MessageChannel,S=h.port2;h.port1.onmessage=function(){if(null!==O){var e=t.unstable_now();D=e+l;try{O(!0,e)?S.postMessage(null):(R=!1,O=null)}catch(n){throw S.postMessage(null),n}}else R=!1},n=function(e){O=e,R||(R=!0,S.postMessage(null))},r=function(e,n){A=I((function(){e(t.unstable_now())}),n)},a=function(){u(A),A=-1}}function p(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<C(a,t)))break e;e[r]=t,e[n]=a,n=r}}function c(e){return void 0===(e=e[0])?null:e}function P(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var _=2*(r+1)-1,i=e[_],s=_+1,E=e[s];if(void 0!==i&&0>C(i,n))void 0!==E&&0>C(E,i)?(e[r]=E,e[s]=n,r=s):(e[r]=i,e[_]=n,r=_);else{if(!(void 0!==E&&0>C(E,n)))break e;e[r]=E,e[s]=n,r=s}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var U=[],f=[],m=1,L=null,F=3,M=!1,w=!1,g=!1;function b(e){for(var t=c(f);null!==t;){if(null===t.callback)P(f);else{if(!(t.startTime<=e))break;P(f),t.sortIndex=t.expirationTime,p(U,t)}t=c(f)}}function y(e){if(g=!1,b(e),!w)if(null!==c(U))w=!0,n(X);else{var t=c(f);null!==t&&r(y,t.startTime-e)}}function X(e,n){w=!1,g&&(g=!1,a()),M=!0;var _=F;try{for(b(n),L=c(U);null!==L&&(!(L.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=L.callback;if("function"==typeof i){L.callback=null,F=L.priorityLevel;var s=i(L.expirationTime<=n);n=t.unstable_now(),"function"==typeof s?L.callback=s:L===c(U)&&P(U),b(n)}else P(U);L=c(U)}if(null!==L)var E=!0;else{var o=c(f);null!==o&&r(y,o.startTime-n),E=!1}return E}finally{L=null,F=_,M=!1}}var v=_;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){w||M||(w=!0,n(X))},t.unstable_getCurrentPriorityLevel=function(){return F},t.unstable_getFirstCallbackNode=function(){return c(U)},t.unstable_next=function(e){switch(F){case 1:case 2:case 3:var t=3;break;default:t=F}var n=F;F=t;try{return e()}finally{F=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=v,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=F;F=e;try{return t()}finally{F=n}},t.unstable_scheduleCallback=function(e,_,i){var s=t.unstable_now();switch("object"==typeof i&&null!==i?i="number"==typeof(i=i.delay)&&0<i?s+i:s:i=s,e){case 1:var E=-1;break;case 2:E=250;break;case 5:E=1073741823;break;case 4:E=1e4;break;default:E=5e3}return e={id:m++,callback:_,priorityLevel:e,startTime:i,expirationTime:E=i+E,sortIndex:-1},i>s?(e.sortIndex=i,p(f,e),null===c(U)&&e===c(f)&&(g?a():g=!0,r(y,i-s))):(e.sortIndex=E,p(U,e),w||M||(w=!0,n(X))),e},t.unstable_wrapCallback=function(e){var t=F;return function(){var n=F;F=t;try{return e.apply(this,arguments)}finally{F=n}}}},63840:function(e,t,n){"use strict";e.exports=n(60053)},96774:function(e){e.exports=function(e,t,n,r){var a=n?n.call(r,e,t):void 0;if(void 0!==a)return!!a;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var _=Object.keys(e),i=Object.keys(t);if(_.length!==i.length)return!1;for(var s=Object.prototype.hasOwnProperty.bind(t),E=0;E<_.length;E++){var o=_[E];if(!s(o))return!1;var T=e[o],d=t[o];if(!1===(a=n?n.call(r,T,d,o):void 0)||void 0===a&&T!==d)return!1}return!0}},2177:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var r="Invariant failed";function a(e,t){if(!e)throw new Error(r)}},36809:function(e,t,n){"use strict";n.r(t),t.default={title:"InfoSum Developer Documentation",tagline:"Data Collaboration Platform",url:"https://infosum.com",baseUrl:"/infosum-docs/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"infosum",projectName:"infosum-docs",presets:[["classic",{docs:{sidebarPath:"/home/runner/work/infosum-docs/infosum-docs/sidebars.js",editUrl:"https://github.com/infosum/infosum-docs/tree/main",beforeDefaultRemarkPlugins:[null]},theme:{customCss:"/home/runner/work/infosum-docs/infosum-docs/src/css/custom.css"},sitemap:{changefreq:"weekly",priority:.5}}],["redocusaurus",{specs:[{spec:"static/swagger.json",route:"/api/"}]}]],plugins:[["@docusaurus/plugin-pwa",{offlineModeActivationStrategies:["appInstalled","standalone","queryString"],pwaHead:[{tagName:"link",rel:"icon",href:"/img/infosum.png"},{tagName:"link",rel:"manifest",href:"/manifest.json"},{tagName:"meta",name:"theme-color",content:"rgb(37, 194, 160)"}]}]],themeConfig:{colorMode:{defaultMode:"dark",respectPrefersColorScheme:!0,disableSwitch:!1},navbar:{title:"InfoSum Developer Documentation",logo:{alt:"InfoSum",src:"/img/infosum.png"},items:[{type:"doc",docId:"intro",position:"left",label:"Docs"},{to:"/api",label:"API",position:"left"},{href:"https://github.com/infosum",label:"GitHub",position:"right"}],hideOnScroll:!1},footer:{style:"dark",links:[{title:"Docs",items:[{label:"Tutorial",to:"/docs/intro"},{label:"Help Center",to:"https://support.infosum.com/"}]},{title:"Community",items:[{label:"Stack Overflow",href:"https://stackoverflow.com/questions/tagged/docusaurus"},{label:"Discord",href:"https://discordapp.com/invite/docusaurus"},{label:"Twitter",href:"https://twitter.com/infosum"}]},{title:"More",items:[{label:"GitHub",href:"https://github.com/infosum"}]}],copyright:"Copyright \xa9 2022 InfoSum Built with Docusaurus."},prism:{theme:{plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]},darkTheme:{plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]},additionalLanguages:[],magicComments:[{className:"theme-code-block-highlighted-line",line:"highlight-next-line",block:{start:"highlight-start",end:"highlight-end"}}]},docs:{versionPersistence:"localStorage",sidebar:{hideable:!1,autoCollapseCategories:!1}},metadata:[],tableOfContents:{minHeadingLevel:2,maxHeadingLevel:3}},baseUrlIssueBanner:!0,i18n:{defaultLocale:"en",locales:["en"],localeConfigs:{}},onDuplicateRoutes:"warn",staticDirectories:["static"],customFields:{},themes:[],scripts:[],stylesheets:[],clientModules:[],titleDelimiter:"|",noIndex:!1}},15861:function(e,t,n){"use strict";function r(e,t,n,r,a,_,i){try{var s=e[_](i),E=s.value}catch(o){return void n(o)}s.done?t(E):Promise.resolve(E).then(r,a)}function a(e){return function(){var t=this,n=arguments;return new Promise((function(a,_){var i=e.apply(t,n);function s(e){r(i,a,_,s,E,"next",e)}function E(e){r(i,a,_,s,E,"throw",e)}s(void 0)}))}}n.d(t,{Z:function(){return a}})},87462:function(e,t,n){"use strict";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},r.apply(this,arguments)}n.d(t,{Z:function(){return r}})},94578:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var r=n(89611);function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,(0,r.Z)(e,t)}},63366:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a={},_=Object.keys(e);for(r=0;r<_.length;r++)n=_[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n.d(t,{Z:function(){return r}})},74165:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var r=n(71002);function a(){a=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,_="function"==typeof Symbol?Symbol:{},i=_.iterator||"@@iterator",s=_.asyncIterator||"@@asyncIterator",E=_.toStringTag||"@@toStringTag";function o(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{o({},"")}catch(m){o=function(e,t,n){return e[t]=n}}function T(e,t,n,r){var a=t&&t.prototype instanceof u?t:u,_=Object.create(a.prototype),i=new C(r||[]);return _._invoke=function(e,t,n){var r="suspendedStart";return function(a,_){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw _;return f()}for(n.method=a,n.arg=_;;){var i=n.delegate;if(i){var s=p(i,n);if(s){if(s===I)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var E=d(e,t,n);if("normal"===E.type){if(r=n.done?"completed":"suspendedYield",E.arg===I)continue;return{value:E.arg,done:n.done}}"throw"===E.type&&(r="completed",n.method="throw",n.arg=E.arg)}}}(e,n,i),_}function d(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(m){return{type:"throw",arg:m}}}e.wrap=T;var I={};function u(){}function N(){}function R(){}var O={};o(O,i,(function(){return this}));var A=Object.getPrototypeOf,l=A&&A(A(U([])));l&&l!==t&&n.call(l,i)&&(O=l);var D=R.prototype=u.prototype=Object.create(O);function h(e){["next","throw","return"].forEach((function(t){o(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function a(_,i,s,E){var o=d(e[_],e,i);if("throw"!==o.type){var T=o.arg,I=T.value;return I&&"object"==(0,r.Z)(I)&&n.call(I,"__await")?t.resolve(I.__await).then((function(e){a("next",e,s,E)}),(function(e){a("throw",e,s,E)})):t.resolve(I).then((function(e){T.value=e,s(T)}),(function(e){return a("throw",e,s,E)}))}E(o.arg)}var _;this._invoke=function(e,n){function r(){return new t((function(t,r){a(e,n,t,r)}))}return _=_?_.then(r,r):r()}}function p(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,p(e,t),"throw"===t.method))return I;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return I}var r=d(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,I;var a=r.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,I):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,I)}function c(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(c,this),this.reset(!0)}function U(e){if(e){var t=e[i];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,a=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return a.next=a}}return{next:f}}function f(){return{value:void 0,done:!0}}return N.prototype=R,o(D,"constructor",R),o(R,"constructor",N),N.displayName=o(R,E,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===N||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,R):(e.__proto__=R,o(e,E,"GeneratorFunction")),e.prototype=Object.create(D),e},e.awrap=function(e){return{__await:e}},h(S.prototype),o(S.prototype,s,(function(){return this})),e.AsyncIterator=S,e.async=function(t,n,r,a,_){void 0===_&&(_=Promise);var i=new S(T(t,n,r,a),_);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},h(D),o(D,E,"Generator"),o(D,i,(function(){return this})),o(D,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=U,C.prototype={constructor:C,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(P),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return i.type="throw",i.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var _=this.tryEntries[a],i=_.completion;if("root"===_.tryLoc)return r("end");if(_.tryLoc<=this.prev){var s=n.call(_,"catchLoc"),E=n.call(_,"finallyLoc");if(s&&E){if(this.prev<_.catchLoc)return r(_.catchLoc,!0);if(this.prev<_.finallyLoc)return r(_.finallyLoc)}else if(s){if(this.prev<_.catchLoc)return r(_.catchLoc,!0)}else{if(!E)throw new Error("try statement without catch or finally");if(this.prev<_.finallyLoc)return r(_.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var _=a;break}}_&&("break"===e||"continue"===e)&&_.tryLoc<=t&&t<=_.finallyLoc&&(_=null);var i=_?_.completion:{};return i.type=e,i.arg=t,_?(this.method="next",this.next=_.finallyLoc,I):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),I},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),P(n),I}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;P(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:U(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),I}},e}},89611:function(e,t,n){"use strict";function r(e,t){return r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},r(e,t)}n.d(t,{Z:function(){return r}})},71002:function(e,t,n){"use strict";function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}n.d(t,{Z:function(){return r}})},74542:function(e,t,n){"use strict";function r(e){return r=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},r(e)}n.d(t,{Z:function(){return s}});var a=n(89611);function _(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function i(e,t,n){return i=_()?Reflect.construct.bind():function(e,t,n){var r=[null];r.push.apply(r,t);var _=new(Function.bind.apply(e,r));return n&&(0,a.Z)(_,n.prototype),_},i.apply(null,arguments)}function s(e){var t="function"==typeof Map?new Map:void 0;return s=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,_)}function _(){return i(e,arguments,r(this).constructor)}return _.prototype=Object.create(e.prototype,{constructor:{value:_,enumerable:!1,writable:!0,configurable:!0}}),(0,a.Z)(_,e)},s(e)}},87099:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var r=n(71002),a=n(89611);function _(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&(0,a.Z)(e,t)}function i(){i=function(e,t){return new n(e,void 0,t)};var e=RegExp.prototype,t=new WeakMap;function n(e,r,_){var i=new RegExp(e,r);return t.set(i,_||t.get(e)),(0,a.Z)(i,n.prototype)}function s(e,n){var r=t.get(n);return Object.keys(r).reduce((function(t,n){return t[n]=e[r[n]],t}),Object.create(null))}return _(n,RegExp),n.prototype.exec=function(t){var n=e.exec.call(this,t);return n&&(n.groups=s(n,this)),n},n.prototype[Symbol.replace]=function(n,a){if("string"==typeof a){var _=t.get(this);return e[Symbol.replace].call(this,n,a.replace(/\$<([^>]+)>/g,(function(e,t){return"$"+_[t]})))}if("function"==typeof a){var i=this;return e[Symbol.replace].call(this,n,(function(){var e=arguments;return"object"!=(0,r.Z)(e[e.length-1])&&(e=[].slice.call(e)).push(s(e,i)),a.apply(this,e)}))}return e[Symbol.replace].call(this,n,a)},i.apply(this,arguments)}},57529:function(e){"use strict";e.exports={}},16887:function(e){"use strict";e.exports=JSON.parse('{"/infosum-docs/api/-654":{"__comp":"f0ad3fbb","__context":{"plugin":"26dbebdc"},"specProps":"2c0aace0","layoutProps":"e9674ec5"},"/infosum-docs/blog-57b":{"__comp":"a6aa9e1f","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"metadata":"a3fb953e"},"/infosum-docs/blog/archive-f7a":{"__comp":"9e4087bc","__context":{"plugin":"b53cb62d"},"archive":"44cec8cd"},"/infosum-docs/blog/tags-c2c":{"__comp":"01a85c17","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","tags":"af23092a"},"/infosum-docs/blog/tags/developer-e69":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"9de40055","listMetadata":"031cd6c4"},"/infosum-docs/blog/tags/documentation-6db":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"b8de503b","listMetadata":"3ab16766"},"/infosum-docs/blog/tags/infosum-144":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"1cf37229","listMetadata":"ef1f2a58"},"/infosum-docs/blog/tags/welcome-263":{"__comp":"6875c492","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","items":[{"content":"7661071f"}],"tag":"4e23c930","listMetadata":"1e8ffffe"},"/infosum-docs/blog/welcome-545":{"__comp":"ccc49370","__context":{"plugin":"b53cb62d"},"sidebar":"814f3328","content":"d9f32620"},"/infosum-docs/docs-99f":{"__comp":"1be78505","__context":{"plugin":"cd14c842"},"versionMetadata":"935f2afb"},"/infosum-docs/docs/authentication-0bf":{"__comp":"17896441","content":"625b1ed7"},"/infosum-docs/docs/filevaults/-e31":{"__comp":"17896441","content":"838d8878"},"/infosum-docs/docs/getting-started/-a70":{"__comp":"17896441","content":"54c82979"},"/infosum-docs/docs/getting-started/uploading-a-file-to-a-filevault-d2c":{"__comp":"17896441","content":"0a2b248b"},"/infosum-docs/docs/intro-5c3":{"__comp":"17896441","content":"0e384e19"},"/infosum-docs/docs/transform/-770":{"__comp":"17896441","content":"414b77a9"},"/infosum-docs/-eea":{"__comp":"1df93b7f","__context":{"plugin":"ba5a679b"},"config":"5e9f5e1a"}}')}},function(e){e.O(0,[532],(function(){return t=49383,e(e.s=t);var t}));e.O()}]);